

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri May 15 09:18:38 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_AD_MCU_INIT
  1024                           	FNCALL	_main,_AD_SUB
  1025                           	FNCALL	_main,_BUTTONMCUInit
  1026                           	FNCALL	_main,_ButtonDetect
  1027                           	FNCALL	_main,_InitScrn
  1028                           	FNCALL	_main,_LCD_MCU_init
  1029                           	FNCALL	_main,_LCD_init
  1030                           	FNCALL	_main,_LCD_write_string
  1031                           	FNCALL	_main,_LED_MCU_INIT
  1032                           	FNCALL	_main,_delay_ms
  1033                           	FNCALL	_LCD_write_string,_LCD_Busy
  1034                           	FNCALL	_LCD_write_string,_LCD_en_dat
  1035                           	FNCALL	_LCD_write_string,_LCD_set_xy
  1036                           	FNCALL	_LCD_set_xy,_LCD_en_command
  1037                           	FNCALL	_LCD_en_dat,_delay_us
  1038                           	FNCALL	_LCD_Busy,_LCD_Read_dat
  1039                           	FNCALL	_LCD_init,_LCD_en_command
  1040                           	FNCALL	_InitScrn,_LCD_en_command
  1041                           	FNCALL	_InitScrn,_delay_ms
  1042                           	FNCALL	_LCD_en_command,_delay_ms
  1043                           	FNCALL	_LCD_en_command,_delay_us
  1044                           	FNCALL	_ButtonDetect,_AD_SUB
  1045                           	FNCALL	_ButtonDetect,_isBUTTONOn
  1046                           	FNCALL	_isBUTTONOn,_delay_ms
  1047                           	FNCALL	_AD_SUB,_delay_us
  1048                           	FNROOT	_main
  1049                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1050                           global __pidataBANK0
  1051                           __pidataBANK0:
  1052  04B1                     	file	"./AD.h"
  1053                           	line	6
  1054                           
  1055                           ;initializer for _U_A
  1056                           	retlw	01h
  1057  04B1  3401               	retlw	02h
  1058  04B2  3402               	retlw	03h
  1059  04B3  3403               	retlw	04h
  1060  04B4  3404               	global	_ADtemp
  1061                           	global	_ADresult
  1062                           	global	_flag_ph_end
  1063                           	global	_isPhPositive
  1064                           	global	_flag_br_end
  1065                           	global	_flag_ph_st
  1066                           	global	_flag_but_once
  1067                           	global	_PORTBbits
  1068                           _PORTBbits	set	0x6
  1069  0006                     	global	_ADRESH
  1070                           _ADRESH	set	0x1E
  1071  001E                     	global	_PIR1bits
  1072                           _PIR1bits	set	0xC
  1073  000C                     	global	_ADCON0bits
  1074                           _ADCON0bits	set	0x1F
  1075  001F                     	global	_ADCON0
  1076                           _ADCON0	set	0x1F
  1077  001F                     	global	_PORTD
  1078                           _PORTD	set	0x8
  1079  0008                     	global	_PORTEbits
  1080                           _PORTEbits	set	0x9
  1081  0009                     	global	_PORTCbits
  1082                           _PORTCbits	set	0x7
  1083  0007                     	global	_OPTION_REG
  1084                           _OPTION_REG	set	0x81
  1085  0081                     	global	_TRISBbits
  1086                           _TRISBbits	set	0x86
  1087  0086                     	global	_ADCON1
  1088                           _ADCON1	set	0x9F
  1089  009F                     	global	_TRISA
  1090                           _TRISA	set	0x85
  1091  0085                     	global	_ADRESL
  1092                           _ADRESL	set	0x9E
  1093  009E                     	global	_TRISD
  1094                           _TRISD	set	0x88
  1095  0088                     	global	_TRISE
  1096                           _TRISE	set	0x89
  1097  0089                     	global	_TRISCbits
  1098                           _TRISCbits	set	0x87
  1099  0087                     	global	_ANSELH
  1100                           _ANSELH	set	0x189
  1101  0189                     	global	_ANSEL
  1102                           _ANSEL	set	0x188
  1103  0188                     psect	strings,class=STRING,delta=2,noexec
  1104                           global __pstrings
  1105                           __pstrings:
  1106  0003                     stringtab:
  1107  0003                     	global    __stringtab
  1108                           __stringtab:
  1109  0003                     ;	String table - string pointers are 1 byte each
  1110                           stringcode:stringdir:
  1111  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1112  0003  3000               movwf pclath
  1113  0004  008A               movf fsr,w
  1114  0005  0804               incf fsr
  1115  0006  0A84               	addwf pc
  1116  0007  0782               	global __stringbase
  1117                           __stringbase:
  1118  0008                     	retlw	0
  1119  0008  3400               psect	strings
  1120                           	global    __end_of__stringtab
  1121                           __end_of__stringtab:
  1122  0009                     	
  1123                           STR_4:	
  1124  0009                     	retlw	78	;'N'
  1125  0009  344E               	retlw	69	;'E'
  1126  000A  3445               	retlw	71	;'G'
  1127  000B  3447               	retlw	65	;'A'
  1128  000C  3441               	retlw	84	;'T'
  1129  000D  3454               	retlw	73	;'I'
  1130  000E  3449               	retlw	86	;'V'
  1131  000F  3456               	retlw	69	;'E'
  1132  0010  3445               	retlw	0
  1133  0011  3400               psect	strings
  1134                           	
  1135                           STR_2:	
  1136  0012                     	retlw	80	;'P'
  1137  0012  3450               	retlw	79	;'O'
  1138  0013  344F               	retlw	83	;'S'
  1139  0014  3453               	retlw	73	;'I'
  1140  0015  3449               	retlw	84	;'T'
  1141  0016  3454               	retlw	73	;'I'
  1142  0017  3449               	retlw	86	;'V'
  1143  0018  3456               	retlw	69	;'E'
  1144  0019  3445               	retlw	0
  1145  001A  3400               psect	strings
  1146                           	
  1147                           STR_3:	
  1148  001B                     	retlw	97	;'a'
  1149  001B  3461               	retlw	99	;'c'
  1150  001C  3463               	retlw	98	;'b'
  1151  001D  3462               	retlw	0
  1152  001E  3400               psect	strings
  1153                           	
  1154                           STR_1:	
  1155  001F                     	retlw	97	;'a'
  1156  001F  3461               	retlw	98	;'b'
  1157  0020  3462               	retlw	99	;'c'
  1158  0021  3463               	retlw	0
  1159  0022  3400               psect	strings
  1160                           ; #config settings
  1161                           global __CFG_FOSC$HS
  1162                           __CFG_FOSC$HS equ 0x0
  1163  0000                     global __CFG_WDTE$OFF
  1164                           __CFG_WDTE$OFF equ 0x0
  1165  0000                     global __CFG_PWRTE$OFF
  1166                           __CFG_PWRTE$OFF equ 0x0
  1167  0000                     global __CFG_MCLRE$ON
  1168                           __CFG_MCLRE$ON equ 0x0
  1169  0000                     global __CFG_CP$OFF
  1170                           __CFG_CP$OFF equ 0x0
  1171  0000                     global __CFG_CPD$OFF
  1172                           __CFG_CPD$OFF equ 0x0
  1173  0000                     global __CFG_BOREN$ON
  1174                           __CFG_BOREN$ON equ 0x0
  1175  0000                     global __CFG_IESO$ON
  1176                           __CFG_IESO$ON equ 0x0
  1177  0000                     global __CFG_FCMEN$ON
  1178                           __CFG_FCMEN$ON equ 0x0
  1179  0000                     global __CFG_LVP$ON
  1180                           __CFG_LVP$ON equ 0x0
  1181  0000                     global __CFG_BOR4V$BOR40V
  1182                           __CFG_BOR4V$BOR40V equ 0x0
  1183  0000                     global __CFG_WRT$OFF
  1184                           __CFG_WRT$OFF equ 0x0
  1185  0000                     	file	"C:\Users\tonyj\AppData\Local\Temp\s9ts."
  1186                           	line	#
  1187                           psect cinit,class=CODE,delta=2
  1188                           global start_initialization
  1189                           start_initialization:
  1190  07DB                     
  1191                           global __initialization
  1192                           __initialization:
  1193  07DB                     psect	bssBANK0,class=BANK0,space=1,noexec
  1194                           global __pbssBANK0
  1195                           __pbssBANK0:
  1196  0020                     _ADtemp:
  1197  0020                            ds      4
  1198  0020                     
  1199                           _ADresult:
  1200  0024                            ds      4
  1201  0024                     
  1202                           _DetectFlag:
  1203  0028                            ds      1
  1204  0028                     
  1205                           _flag_ph_end:
  1206  0029                            ds      1
  1207  0029                     
  1208                           _isPhPositive:
  1209  002A                            ds      1
  1210  002A                     
  1211                           _flag_br_end:
  1212  002B                            ds      1
  1213  002B                     
  1214                           _flag_ph_st:
  1215  002C                            ds      1
  1216  002C                     
  1217                           _flag_but_once:
  1218  002D                            ds      1
  1219  002D                     
  1220                           _U_GW:
  1221  002E                            ds      1
  1222  002E                     
  1223                           _U_SW:
  1224  002F                            ds      1
  1225  002F                     
  1226                           _U_BW:
  1227  0030                            ds      1
  1228  0030                     
  1229                           _U_QW:
  1230  0031                            ds      1
  1231  0031                     
  1232                           psect	dataBANK0,class=BANK0,space=1,noexec
  1233                           global __pdataBANK0
  1234                           __pdataBANK0:
  1235  0032                     	file	"./AD.h"
  1236                           	line	6
  1237                           _U_A:
  1238  0032                            ds      4
  1239  0032                     
  1240                           	file	"C:\Users\tonyj\AppData\Local\Temp\s9ts."
  1241                           	line	#
  1242                           ; Initialize objects allocated to BANK0
  1243                           	global __pidataBANK0
  1244                           psect cinit,class=CODE,delta=2,merge=1
  1245                           	fcall	__pidataBANK0+0		;fetch initializer
  1246  07DB  120A  118A  24B1  120A  118A  	movwf	__pdataBANK0+0&07fh		
  1247  07E0  00B2               	fcall	__pidataBANK0+1		;fetch initializer
  1248  07E1  120A  118A  24B2  120A  118A  	movwf	__pdataBANK0+1&07fh		
  1249  07E6  00B3               	fcall	__pidataBANK0+2		;fetch initializer
  1250  07E7  120A  118A  24B3  120A  118A  	movwf	__pdataBANK0+2&07fh		
  1251  07EC  00B4               	fcall	__pidataBANK0+3		;fetch initializer
  1252  07ED  120A  118A  24B4  120A  118A  	movwf	__pdataBANK0+3&07fh		
  1253  07F2  00B5               	line	#
  1254                           psect clrtext,class=CODE,delta=2
  1255                           global clear_ram0
  1256                           ;	Called with FSR containing the base address, and
  1257                           ;	W with the last address+1
  1258                           clear_ram0:
  1259  04BD                     	clrwdt			;clear the watchdog before getting into this loop
  1260  04BD  0064               clrloop0:
  1261  04BE                     	clrf	indf		;clear RAM location pointed to by FSR
  1262  04BE  0180               	incf	fsr,f		;increment pointer
  1263  04BF  0A84               	xorwf	fsr,w		;XOR with final address
  1264  04C0  0604               	btfsc	status,2	;have we reached the end yet?
  1265  04C1  1903               	retlw	0		;all done for this memory range, return
  1266  04C2  3400               	xorwf	fsr,w		;XOR again to restore value
  1267  04C3  0604               	goto	clrloop0		;do the next byte
  1268  04C4  2CBE               
  1269                           ; Clear objects allocated to BANK0
  1270                           psect cinit,class=CODE,delta=2,merge=1
  1271                           	bcf	status, 7	;select IRP bank0
  1272  07F3  1383               	movlw	low(__pbssBANK0)
  1273  07F4  3020               	movwf	fsr
  1274  07F5  0084               	movlw	low((__pbssBANK0)+012h)
  1275  07F6  3032               	fcall	clear_ram0
  1276  07F7  120A  118A  24BD  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1277                           global end_of_initialization,__end_of__initialization
  1278                           
  1279                           ;End of C runtime variable initialization code
  1280                           
  1281                           end_of_initialization:
  1282  07FC                     __end_of__initialization:
  1283  07FC                     clrf status
  1284  07FC  0183               ljmp _main	;jump to C main() function
  1285  07FD  120A  118A  2EB5   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1286                           global __pcstackCOMMON
  1287                           __pcstackCOMMON:
  1288  0070                     ?_LCD_MCU_init:	; 1 bytes @ 0x0
  1289  0070                     ??_LCD_MCU_init:	; 1 bytes @ 0x0
  1290  0070                     ?_LCD_init:	; 1 bytes @ 0x0
  1291  0070                     ?_InitScrn:	; 1 bytes @ 0x0
  1292  0070                     ?_AD_MCU_INIT:	; 1 bytes @ 0x0
  1293  0070                     ??_AD_MCU_INIT:	; 1 bytes @ 0x0
  1294  0070                     ?_BUTTONMCUInit:	; 1 bytes @ 0x0
  1295  0070                     ??_BUTTONMCUInit:	; 1 bytes @ 0x0
  1296  0070                     ?_ButtonDetect:	; 1 bytes @ 0x0
  1297  0070                     ?_AD_SUB:	; 1 bytes @ 0x0
  1298  0070                     ?_delay_ms:	; 1 bytes @ 0x0
  1299  0070                     ?_delay_us:	; 1 bytes @ 0x0
  1300  0070                     ??_delay_us:	; 1 bytes @ 0x0
  1301  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  1302  0070                     ?_LED_MCU_INIT:	; 1 bytes @ 0x0
  1303  0070                     ??_LED_MCU_INIT:	; 1 bytes @ 0x0
  1304  0070                     ?_main:	; 1 bytes @ 0x0
  1305  0070                     ?_LCD_en_command:	; 1 bytes @ 0x0
  1306  0070                     ?_LCD_en_dat:	; 1 bytes @ 0x0
  1307  0070                     ?_LCD_Read_dat:	; 1 bytes @ 0x0
  1308  0070                     ??_LCD_Read_dat:	; 1 bytes @ 0x0
  1309  0070                     ?_isBUTTONOn:	; 1 bytes @ 0x0
  1310  0070                     	global	delay_us@n
  1311                           delay_us@n:	; 1 bytes @ 0x0
  1312  0070                     	global	delay_ms@n
  1313                           delay_ms@n:	; 2 bytes @ 0x0
  1314  0070                     	ds	1
  1315  0070                     ??_AD_SUB:	; 1 bytes @ 0x1
  1316  0071                     ??_LCD_en_dat:	; 1 bytes @ 0x1
  1317  0071                     	global	LCD_en_dat@dat
  1318                           LCD_en_dat@dat:	; 1 bytes @ 0x1
  1319  0071                     	global	LCD_Read_dat@dat
  1320                           LCD_Read_dat@dat:	; 1 bytes @ 0x1
  1321  0071                     	ds	1
  1322  0071                     ??_delay_ms:	; 1 bytes @ 0x2
  1323  0072                     ??_LCD_Busy:	; 1 bytes @ 0x2
  1324  0072                     	ds	1
  1325  0072                     	global	LCD_Busy@busyFlag
  1326                           LCD_Busy@busyFlag:	; 1 bytes @ 0x3
  1327  0073                     	global	delay_ms@j
  1328                           delay_ms@j:	; 2 bytes @ 0x3
  1329  0073                     	ds	2
  1330  0073                     	global	delay_ms@k
  1331                           delay_ms@k:	; 1 bytes @ 0x5
  1332  0075                     	global	AD_SUB@k
  1333                           AD_SUB@k:	; 1 bytes @ 0x5
  1334  0075                     	ds	1
  1335  0075                     ??_ButtonDetect:	; 1 bytes @ 0x6
  1336  0076                     ??_LCD_en_command:	; 1 bytes @ 0x6
  1337  0076                     ??_isBUTTONOn:	; 1 bytes @ 0x6
  1338  0076                     	global	LCD_en_command@command
  1339                           LCD_en_command@command:	; 1 bytes @ 0x6
  1340  0076                     	ds	1
  1341  0076                     ??_LCD_init:	; 1 bytes @ 0x7
  1342  0077                     ??_InitScrn:	; 1 bytes @ 0x7
  1343  0077                     ?_LCD_set_xy:	; 1 bytes @ 0x7
  1344  0077                     	global	LCD_set_xy@y
  1345                           LCD_set_xy@y:	; 1 bytes @ 0x7
  1346  0077                     	ds	1
  1347  0077                     ??_LCD_set_xy:	; 1 bytes @ 0x8
  1348  0078                     	ds	1
  1349  0078                     	global	LCD_set_xy@address
  1350                           LCD_set_xy@address:	; 1 bytes @ 0x9
  1351  0079                     	ds	1
  1352  0079                     	global	LCD_set_xy@x
  1353                           LCD_set_xy@x:	; 1 bytes @ 0xA
  1354  007A                     	ds	1
  1355  007A                     ?_LCD_write_string:	; 1 bytes @ 0xB
  1356  007B                     	global	LCD_write_string@Y
  1357                           LCD_write_string@Y:	; 1 bytes @ 0xB
  1358  007B                     	ds	1
  1359  007B                     	global	LCD_write_string@s
  1360                           LCD_write_string@s:	; 1 bytes @ 0xC
  1361  007C                     	ds	1
  1362  007C                     ??_LCD_write_string:	; 1 bytes @ 0xD
  1363  007D                     	ds	1
  1364  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1365                           global __pcstackBANK0
  1366                           __pcstackBANK0:
  1367  0036                     	global	LCD_write_string@X
  1368                           LCD_write_string@X:	; 1 bytes @ 0x0
  1369  0036                     	ds	1
  1370  0036                     ??_main:	; 1 bytes @ 0x1
  1371  0037                     	ds	2
  1372  0037                     ;!
  1373                           ;!Data Sizes:
  1374                           ;!    Strings     26
  1375                           ;!    Constant    0
  1376                           ;!    Data        4
  1377                           ;!    BSS         18
  1378                           ;!    Persistent  0
  1379                           ;!    Stack       0
  1380                           ;!
  1381                           ;!Auto Spaces:
  1382                           ;!    Space          Size  Autos    Used
  1383                           ;!    COMMON           14     14      14
  1384                           ;!    BANK0            80      3      25
  1385                           ;!    BANK1            80      0       0
  1386                           ;!    BANK3            96      0       0
  1387                           ;!    BANK2            96      0       0
  1388                           
  1389                           ;!
  1390                           ;!Pointer List with Targets:
  1391                           ;!
  1392                           ;!    LCD_write_string@s	PTR unsigned char  size(1) Largest target is 9
  1393                           ;!		 -> STR_4(CODE[9]), STR_3(CODE[4]), STR_2(CODE[9]), STR_1(CODE[4]), 
  1394                           ;!
  1395                           
  1396                           
  1397                           ;!
  1398                           ;!Critical Paths under _main in COMMON
  1399                           ;!
  1400                           ;!    _main->_LCD_write_string
  1401                           ;!    _LCD_write_string->_LCD_set_xy
  1402                           ;!    _LCD_set_xy->_LCD_en_command
  1403                           ;!    _LCD_en_dat->_delay_us
  1404                           ;!    _LCD_Busy->_LCD_Read_dat
  1405                           ;!    _LCD_init->_LCD_en_command
  1406                           ;!    _InitScrn->_LCD_en_command
  1407                           ;!    _LCD_en_command->_delay_ms
  1408                           ;!    _ButtonDetect->_AD_SUB
  1409                           ;!    _isBUTTONOn->_delay_ms
  1410                           ;!    _AD_SUB->_delay_us
  1411                           ;!
  1412                           ;!Critical Paths under _main in BANK0
  1413                           ;!
  1414                           ;!    _main->_LCD_write_string
  1415                           ;!
  1416                           ;!Critical Paths under _main in BANK1
  1417                           ;!
  1418                           ;!    None.
  1419                           ;!
  1420                           ;!Critical Paths under _main in BANK3
  1421                           ;!
  1422                           ;!    None.
  1423                           ;!
  1424                           ;!Critical Paths under _main in BANK2
  1425                           ;!
  1426                           ;!    None.
  1427                           
  1428 ;;
  1429 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1430 ;;
  1431                           
  1432                           ;!
  1433                           ;!Call Graph Tables:
  1434                           ;!
  1435                           ;! ---------------------------------------------------------------------------------
  1436                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1437                           ;! ---------------------------------------------------------------------------------
  1438                           ;! (0) _main                                                 2     2      0    4489
  1439                           ;!                                              1 BANK0      2     2      0
  1440                           ;!                        _AD_MCU_INIT
  1441                           ;!                             _AD_SUB
  1442                           ;!                      _BUTTONMCUInit
  1443                           ;!                       _ButtonDetect
  1444                           ;!                           _InitScrn
  1445                           ;!                       _LCD_MCU_init
  1446                           ;!                           _LCD_init
  1447                           ;!                   _LCD_write_string
  1448                           ;!                       _LED_MCU_INIT
  1449                           ;!                           _delay_ms
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (1) _LED_MCU_INIT                                         0     0      0       0
  1452                           ;! ---------------------------------------------------------------------------------
  1453                           ;! (1) _LCD_write_string                                     4     2      2    1569
  1454                           ;!                                             11 COMMON     3     1      2
  1455                           ;!                                              0 BANK0      1     1      0
  1456                           ;!                           _LCD_Busy
  1457                           ;!                         _LCD_en_dat
  1458                           ;!                         _LCD_set_xy
  1459                           ;! ---------------------------------------------------------------------------------
  1460                           ;! (2) _LCD_set_xy                                           4     3      1     759
  1461                           ;!                                              7 COMMON     4     3      1
  1462                           ;!                     _LCD_en_command
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (2) _LCD_en_dat                                           1     1      0      45
  1465                           ;!                                              1 COMMON     1     1      0
  1466                           ;!                           _delay_us
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (2) _LCD_Busy                                             2     2      0      46
  1469                           ;!                                              2 COMMON     2     2      0
  1470                           ;!                       _LCD_Read_dat
  1471                           ;! ---------------------------------------------------------------------------------
  1472                           ;! (3) _LCD_Read_dat                                         2     2      0      23
  1473                           ;!                                              0 COMMON     2     2      0
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (1) _LCD_init                                             0     0      0     593
  1476                           ;!                     _LCD_en_command
  1477                           ;! ---------------------------------------------------------------------------------
  1478                           ;! (1) _LCD_MCU_init                                         1     1      0       0
  1479                           ;!                                              0 COMMON     1     1      0
  1480                           ;! ---------------------------------------------------------------------------------
  1481                           ;! (1) _InitScrn                                             0     0      0    1141
  1482                           ;!                     _LCD_en_command
  1483                           ;!                           _delay_ms
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (3) _LCD_en_command                                       1     1      0     593
  1486                           ;!                                              6 COMMON     1     1      0
  1487                           ;!                           _delay_ms
  1488                           ;!                           _delay_us
  1489                           ;! ---------------------------------------------------------------------------------
  1490                           ;! (1) _ButtonDetect                                         0     0      0     593
  1491                           ;!                             _AD_SUB
  1492                           ;!                         _isBUTTONOn
  1493                           ;! ---------------------------------------------------------------------------------
  1494                           ;! (2) _isBUTTONOn                                           0     0      0     548
  1495                           ;!                           _delay_ms
  1496                           ;! ---------------------------------------------------------------------------------
  1497                           ;! (1) _delay_ms                                             6     4      2     548
  1498                           ;!                                              0 COMMON     6     4      2
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (2) _AD_SUB                                               6     6      0      45
  1501                           ;!                                              1 COMMON     5     5      0
  1502                           ;!                           _delay_us
  1503                           ;! ---------------------------------------------------------------------------------
  1504                           ;! (4) _delay_us                                             1     1      0      23
  1505                           ;!                                              0 COMMON     1     1      0
  1506                           ;! ---------------------------------------------------------------------------------
  1507                           ;! (1) _BUTTONMCUInit                                        1     1      0       0
  1508                           ;!                                              0 COMMON     1     1      0
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! (1) _AD_MCU_INIT                                          0     0      0       0
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! Estimated maximum stack depth 4
  1513                           ;! ---------------------------------------------------------------------------------
  1514                           ;!
  1515                           ;! Call Graph Graphs:
  1516                           ;!
  1517                           ;! _main (ROOT)
  1518                           ;!   _AD_MCU_INIT
  1519                           ;!   _AD_SUB
  1520                           ;!     _delay_us
  1521                           ;!   _BUTTONMCUInit
  1522                           ;!   _ButtonDetect
  1523                           ;!     _AD_SUB
  1524                           ;!       _delay_us
  1525                           ;!     _isBUTTONOn
  1526                           ;!       _delay_ms
  1527                           ;!   _InitScrn
  1528                           ;!     _LCD_en_command
  1529                           ;!       _delay_ms
  1530                           ;!       _delay_us
  1531                           ;!     _delay_ms
  1532                           ;!   _LCD_MCU_init
  1533                           ;!   _LCD_init
  1534                           ;!     _LCD_en_command
  1535                           ;!       _delay_ms
  1536                           ;!       _delay_us
  1537                           ;!   _LCD_write_string
  1538                           ;!     _LCD_Busy
  1539                           ;!       _LCD_Read_dat
  1540                           ;!     _LCD_en_dat
  1541                           ;!       _delay_us
  1542                           ;!     _LCD_set_xy
  1543                           ;!       _LCD_en_command
  1544                           ;!         _delay_ms
  1545                           ;!         _delay_us
  1546                           ;!   _LED_MCU_INIT
  1547                           ;!   _delay_ms
  1548                           ;!
  1549                           
  1550                           ;! Address spaces:
  1551                           
  1552                           ;!Name               Size   Autos  Total    Cost      Usage
  1553                           ;!BANK3               60      0       0       9        0.0%
  1554                           ;!BITBANK3            60      0       0       8        0.0%
  1555                           ;!SFR3                 0      0       0       4        0.0%
  1556                           ;!BITSFR3              0      0       0       4        0.0%
  1557                           ;!BANK2               60      0       0      11        0.0%
  1558                           ;!BITBANK2            60      0       0      10        0.0%
  1559                           ;!SFR2                 0      0       0       5        0.0%
  1560                           ;!BITSFR2              0      0       0       5        0.0%
  1561                           ;!BANK1               50      0       0       7        0.0%
  1562                           ;!BITBANK1            50      0       0       6        0.0%
  1563                           ;!SFR1                 0      0       0       2        0.0%
  1564                           ;!BITSFR1              0      0       0       2        0.0%
  1565                           ;!BANK0               50      3      19       5       31.3%
  1566                           ;!BITBANK0            50      0       0       4        0.0%
  1567                           ;!SFR0                 0      0       0       1        0.0%
  1568                           ;!BITSFR0              0      0       0       1        0.0%
  1569                           ;!COMMON               E      E       E       1      100.0%
  1570                           ;!BITCOMMON            E      0       0       0        0.0%
  1571                           ;!CODE                 0      0       0       0        0.0%
  1572                           ;!DATA                 0      0      27      12        0.0%
  1573                           ;!ABS                  0      0      27       3        0.0%
  1574                           ;!NULL                 0      0       0       0        0.0%
  1575                           ;!STACK                0      0       0       2        0.0%
  1576                           ;!EEDATA             100      0       0       0        0.0%
  1577                           
  1578                           	global	_main
  1579                           
  1580 ;; *************** function _main *****************
  1581 ;; Defined at:
  1582 ;;		line 72 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : B00/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       2       0       0       0
  1599 ;;      Totals:         0       2       0       0       0
  1600 ;;Total ram usage:        2 bytes
  1601 ;; Hardware stack levels required when called:    4
  1602 ;; This function calls:
  1603 ;;		_AD_MCU_INIT
  1604 ;;		_AD_SUB
  1605 ;;		_BUTTONMCUInit
  1606 ;;		_ButtonDetect
  1607 ;;		_InitScrn
  1608 ;;		_LCD_MCU_init
  1609 ;;		_LCD_init
  1610 ;;		_LCD_write_string
  1611 ;;		_LED_MCU_INIT
  1612 ;;		_delay_ms
  1613 ;; This function is called by:
  1614 ;;		Startup code after reset
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1618                           	file	"main.c"
  1619                           	line	72
  1620                           global __pmaintext
  1621                           __pmaintext:	;psect for function _main
  1622  06B5                     psect	maintext
  1623                           	file	"main.c"
  1624                           	line	72
  1625                           	global	__size_of_main
  1626                           	__size_of_main	equ	__end_of_main-_main
  1627  0126                     	
  1628                           _main:	
  1629  06B5                     ;incstack = 0
  1630                           	opt	stack 4
  1631                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1632                           	line	75
  1633                           	
  1634                           l1169:	
  1635  06B5                     ;main.c: 75:     LCD_MCU_init();
  1636                           	fcall	_LCD_MCU_init
  1637  06B5  120A  118A  24EA  120A  118A  	line	76
  1638                           ;main.c: 76:     LCD_init();
  1639                           	fcall	_LCD_init
  1640  06BA  120A  118A  2579  120A  118A  	line	77
  1641                           ;main.c: 77:     InitScrn();
  1642                           	fcall	_InitScrn
  1643  06BF  120A  118A  24F8  120A  118A  	line	79
  1644                           ;main.c: 79:     AD_MCU_INIT();
  1645                           	fcall	_AD_MCU_INIT
  1646  06C4  120A  118A  24D0  120A  118A  	line	81
  1647                           	
  1648                           l1171:	
  1649  06C9                     ;main.c: 81:     LED_MCU_INIT();
  1650                           	fcall	_LED_MCU_INIT
  1651  06C9  120A  118A  24C5  120A  118A  	line	83
  1652                           	
  1653                           l1173:	
  1654  06CE                     ;main.c: 83:     BUTTONMCUInit();
  1655                           	fcall	_BUTTONMCUInit
  1656  06CE  120A  118A  24B5  120A  118A  	goto	l1175
  1657  06D3  2ED4               	line	84
  1658                           ;main.c: 84:     while(1)
  1659                           	
  1660                           l58:	
  1661  06D4                     	line	86
  1662                           	
  1663                           l1175:	
  1664  06D4                     ;main.c: 85:     {;main.c: 86:         ButtonDetect();
  1665                           	fcall	_ButtonDetect
  1666  06D4  120A  118A  25C1  120A  118A  	line	87
  1667                           	
  1668                           l1177:	
  1669  06D9                     ;main.c: 87:         if(flag_ph_st&(!flag_ph_end))
  1670                           	bcf	status, 5	;RP0=0, select bank0
  1671  06D9  1283               	bcf	status, 6	;RP1=0, select bank0
  1672  06DA  1303               	movf	((_flag_ph_end)),w
  1673  06DB  0829               	btfsc	status,2
  1674  06DC  1903               	goto	u411
  1675  06DD  2EDF               	goto	u410
  1676  06DE  2EE1               u411:
  1677  06DF                     	movlw	1
  1678  06DF  3001               	goto	u420
  1679  06E0  2EE2               u410:
  1680  06E1                     	movlw	0
  1681  06E1  3000               u420:
  1682  06E2                     	andwf	(_flag_ph_st),w
  1683  06E2  052C               	btfsc	status,2
  1684  06E3  1903               	goto	u431
  1685  06E4  2EE6               	goto	u430
  1686  06E5  2EE7               u431:
  1687  06E6                     	goto	l1197
  1688  06E6  2F58               u430:
  1689  06E7                     	line	90
  1690                           	
  1691                           l1179:	
  1692  06E7                     ;main.c: 88:         {;main.c: 90:             AD_SUB(1);
  1693                           	movlw	low(01h)
  1694  06E7  3001               	fcall	_AD_SUB
  1695  06E8  120A  118A  25F8  120A  118A  	line	91
  1696                           	
  1697                           l1181:	
  1698  06ED                     ;main.c: 91:             if(ADresult<= 414 && ADresult>403)
  1699                           	bcf	status, 5	;RP0=0, select bank0
  1700  06ED  1283               	bcf	status, 6	;RP1=0, select bank0
  1701  06EE  1303               		movf	(_ADresult+3),w
  1702  06EF  0827               	btfss	status,2
  1703  06F0  1D03               	goto	u441
  1704  06F1  2F00               	movf	(_ADresult+2),w
  1705  06F2  0826               	btfss	status,2
  1706  06F3  1D03               	goto	u441
  1707  06F4  2F00               	movlw	1
  1708  06F5  3001               	subwf	(_ADresult+1),w
  1709  06F6  0225               	skipz
  1710  06F7  1D03               	goto	u443
  1711  06F8  2EFD               	movlw	159
  1712  06F9  309F               	subwf	(_ADresult),w
  1713  06FA  0224               	skipz
  1714  06FB  1D03               	goto	u443
  1715  06FC  2EFD               u443:
  1716  06FD                     	btfsc	status,0
  1717  06FD  1803               	goto	u441
  1718  06FE  2F00               	goto	u440
  1719  06FF  2F01               
  1720                           u441:
  1721  0700                     	goto	l1197
  1722  0700  2F58               u440:
  1723  0701                     	
  1724                           l1183:	
  1725  0701                     		movf	(_ADresult+3),w
  1726  0701  0827               	btfss	status,2
  1727  0702  1D03               	goto	u450
  1728  0703  2F13               	movf	(_ADresult+2),w
  1729  0704  0826               	btfss	status,2
  1730  0705  1D03               	goto	u450
  1731  0706  2F13               	movlw	1
  1732  0707  3001               	subwf	(_ADresult+1),w
  1733  0708  0225               	skipz
  1734  0709  1D03               	goto	u453
  1735  070A  2F0F               	movlw	148
  1736  070B  3094               	subwf	(_ADresult),w
  1737  070C  0224               	skipz
  1738  070D  1D03               	goto	u453
  1739  070E  2F0F               u453:
  1740  070F                     	btfss	status,0
  1741  070F  1C03               	goto	u451
  1742  0710  2F12               	goto	u450
  1743  0711  2F13               
  1744                           u451:
  1745  0712                     	goto	l1197
  1746  0712  2F58               u450:
  1747  0713                     	line	93
  1748                           	
  1749                           l1185:	
  1750  0713                     ;main.c: 92:             {;main.c: 93:                 ADtemp=ADresult;
  1751                           	movf	(_ADresult+3),w
  1752  0713  0827               	movwf	(_ADtemp+3)
  1753  0714  00A3               	movf	(_ADresult+2),w
  1754  0715  0826               	movwf	(_ADtemp+2)
  1755  0716  00A2               	movf	(_ADresult+1),w
  1756  0717  0825               	movwf	(_ADtemp+1)
  1757  0718  00A1               	movf	(_ADresult),w
  1758  0719  0824               	movwf	(_ADtemp)
  1759  071A  00A0               
  1760                           	line	94
  1761                           	
  1762                           l1187:	
  1763  071B                     ;main.c: 94:                 AD_SUB(1);
  1764                           	movlw	low(01h)
  1765  071B  3001               	fcall	_AD_SUB
  1766  071C  120A  118A  25F8  120A  118A  	line	95
  1767                           	
  1768                           l1189:	
  1769  0721                     ;main.c: 95:                 if(ADresult>ADtemp)
  1770                           	bcf	status, 5	;RP0=0, select bank0
  1771  0721  1283               	bcf	status, 6	;RP1=0, select bank0
  1772  0722  1303               	movf	(_ADresult+3),w
  1773  0723  0827               	subwf	(_ADtemp+3),w
  1774  0724  0223               	skipz
  1775  0725  1D03               	goto	u465
  1776  0726  2F31               	movf	(_ADresult+2),w
  1777  0727  0826               	subwf	(_ADtemp+2),w
  1778  0728  0222               	skipz
  1779  0729  1D03               	goto	u465
  1780  072A  2F31               	movf	(_ADresult+1),w
  1781  072B  0825               	subwf	(_ADtemp+1),w
  1782  072C  0221               	skipz
  1783  072D  1D03               	goto	u465
  1784  072E  2F31               	movf	(_ADresult),w
  1785  072F  0824               	subwf	(_ADtemp),w
  1786  0730  0220               u465:
  1787  0731                     	skipnc
  1788  0731  1803               	goto	u461
  1789  0732  2F34               	goto	u460
  1790  0733  2F35               u461:
  1791  0734                     	goto	l1197
  1792  0734  2F58               u460:
  1793  0735                     	line	97
  1794                           	
  1795                           l1191:	
  1796  0735                     ;main.c: 96:                 {;main.c: 97:                     AD_SUB(2);
  1797                           	movlw	low(02h)
  1798  0735  3002               	fcall	_AD_SUB
  1799  0736  120A  118A  25F8  120A  118A  	line	98
  1800                           	
  1801                           l1193:	
  1802  073B                     ;main.c: 98:                     if(ADresult>409)
  1803                           	bcf	status, 5	;RP0=0, select bank0
  1804  073B  1283               	bcf	status, 6	;RP1=0, select bank0
  1805  073C  1303               		movf	(_ADresult+3),w
  1806  073D  0827               	btfss	status,2
  1807  073E  1D03               	goto	u470
  1808  073F  2F4F               	movf	(_ADresult+2),w
  1809  0740  0826               	btfss	status,2
  1810  0741  1D03               	goto	u470
  1811  0742  2F4F               	movlw	1
  1812  0743  3001               	subwf	(_ADresult+1),w
  1813  0744  0225               	skipz
  1814  0745  1D03               	goto	u473
  1815  0746  2F4B               	movlw	154
  1816  0747  309A               	subwf	(_ADresult),w
  1817  0748  0224               	skipz
  1818  0749  1D03               	goto	u473
  1819  074A  2F4B               u473:
  1820  074B                     	btfss	status,0
  1821  074B  1C03               	goto	u471
  1822  074C  2F4E               	goto	u470
  1823  074D  2F4F               
  1824                           u471:
  1825  074E                     	goto	l62
  1826  074E  2F51               u470:
  1827  074F                     	line	99
  1828                           	
  1829                           l1195:	
  1830  074F                     ;main.c: 99:                         isPhPositive=0;
  1831                           	clrf	(_isPhPositive)
  1832  074F  01AA               	goto	l63
  1833  0750  2F53               	line	100
  1834                           ;main.c: 100:                     else
  1835                           	
  1836                           l62:	
  1837  0751                     	line	101
  1838                           ;main.c: 101:                         isPhPositive=1;
  1839                           	clrf	(_isPhPositive)
  1840  0751  01AA               	incf	(_isPhPositive),f
  1841  0752  0AAA               	
  1842                           l63:	
  1843  0753                     	line	102
  1844                           ;main.c: 102:                     flag_ph_end=1;
  1845                           	clrf	(_flag_ph_end)
  1846  0753  01A9               	incf	(_flag_ph_end),f
  1847  0754  0AA9               	goto	l1197
  1848  0755  2F58               	line	103
  1849                           ;main.c: 103:                 }
  1850                           	
  1851                           l61:	
  1852  0756                     	goto	l1197
  1853  0756  2F58               	line	104
  1854                           ;main.c: 104:             }
  1855                           	
  1856                           l60:	
  1857  0757                     	goto	l1197
  1858  0757  2F58               	line	105
  1859                           ;main.c: 105:         }
  1860                           	
  1861                           l59:	
  1862  0758                     	line	106
  1863                           	
  1864                           l1197:	
  1865  0758                     ;main.c: 106:         if(flag_ph_end&(!flag_br_end))
  1866                           	movf	((_flag_br_end)),w
  1867  0758  082B               	btfsc	status,2
  1868  0759  1903               	goto	u481
  1869  075A  2F5C               	goto	u480
  1870  075B  2F5E               u481:
  1871  075C                     	movlw	1
  1872  075C  3001               	goto	u490
  1873  075D  2F5F               u480:
  1874  075E                     	movlw	0
  1875  075E  3000               u490:
  1876  075F                     	andwf	(_flag_ph_end),w
  1877  075F  0529               	btfsc	status,2
  1878  0760  1903               	goto	u501
  1879  0761  2F63               	goto	u500
  1880  0762  2F64               u501:
  1881  0763                     	goto	l1175
  1882  0763  2ED4               u500:
  1883  0764                     	line	108
  1884                           	
  1885                           l1199:	
  1886  0764                     ;main.c: 107:           {;main.c: 108:             PORTCbits.RC0=1;
  1887                           	bsf	(7),0	;volatile
  1888  0764  1407               	line	109
  1889                           	
  1890                           l1201:	
  1891  0765                     ;main.c: 109:               if(!isPhPositive)
  1892                           	movf	((_isPhPositive)),w
  1893  0765  082A               	btfss	status,2
  1894  0766  1D03               	goto	u511
  1895  0767  2F69               	goto	u510
  1896  0768  2F6A               u511:
  1897  0769                     	goto	l1205
  1898  0769  2F74               u510:
  1899  076A                     	line	111
  1900                           	
  1901                           l1203:	
  1902  076A                     ;main.c: 110:               {;main.c: 111:                   delay_ms(20);
  1903                           	movlw	014h
  1904  076A  3014               	movwf	(delay_ms@n)
  1905  076B  00F0               	movlw	0
  1906  076C  3000               	movwf	((delay_ms@n))+1
  1907  076D  00F1               	fcall	_delay_ms
  1908  076E  120A  118A  2598  120A  118A  	goto	l1205
  1909  0773  2F74               	line	112
  1910                           ;main.c: 112:               }
  1911                           	
  1912                           l65:	
  1913  0774                     	line	113
  1914                           	
  1915                           l1205:	
  1916  0774                     ;main.c: 113:             PORTCbits.RC0=0;
  1917                           	bcf	status, 5	;RP0=0, select bank0
  1918  0774  1283               	bcf	status, 6	;RP1=0, select bank0
  1919  0775  1303               	bcf	(7),0	;volatile
  1920  0776  1007               	line	114
  1921                           ;main.c: 114:               delay_ms(7);
  1922                           	movlw	07h
  1923  0777  3007               	movwf	(delay_ms@n)
  1924  0778  00F0               	movlw	0
  1925  0779  3000               	movwf	((delay_ms@n))+1
  1926  077A  00F1               	fcall	_delay_ms
  1927  077B  120A  118A  2598  120A  118A  	line	115
  1928                           	
  1929                           l1207:	
  1930  0780                     ;main.c: 115:               PORTCbits.RC2=1;
  1931                           	bcf	status, 5	;RP0=0, select bank0
  1932  0780  1283               	bcf	status, 6	;RP1=0, select bank0
  1933  0781  1303               	bsf	(7),2	;volatile
  1934  0782  1507               	line	116
  1935                           ;main.c: 116:               delay_ms(20 -7);
  1936                           	movlw	0Dh
  1937  0783  300D               	movwf	(delay_ms@n)
  1938  0784  00F0               	movlw	0
  1939  0785  3000               	movwf	((delay_ms@n))+1
  1940  0786  00F1               	fcall	_delay_ms
  1941  0787  120A  118A  2598  120A  118A  	line	117
  1942                           	
  1943                           l1209:	
  1944  078C                     ;main.c: 117:               PORTCbits.RC2=0;
  1945                           	bcf	status, 5	;RP0=0, select bank0
  1946  078C  1283               	bcf	status, 6	;RP1=0, select bank0
  1947  078D  1303               	bcf	(7),2	;volatile
  1948  078E  1107               	line	118
  1949                           	
  1950                           l1211:	
  1951  078F                     ;main.c: 118:               if(isPhPositive)
  1952                           	movf	((_isPhPositive)),w
  1953  078F  082A               	btfsc	status,2
  1954  0790  1903               	goto	u521
  1955  0791  2F93               	goto	u520
  1956  0792  2F94               u521:
  1957  0793                     	goto	l1215
  1958  0793  2FB1               u520:
  1959  0794                     	line	120
  1960                           	
  1961                           l1213:	
  1962  0794                     ;main.c: 119:               {;main.c: 120:                   LCD_write_string(1,1,"abc")
                                 ;
  1963                           	clrf	(LCD_write_string@Y)
  1964  0794  01FB               	incf	(LCD_write_string@Y),f
  1965  0795  0AFB               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1966  0796  3017               	movwf	(??_main+0)+0
  1967  0797  00B7               	movf	(??_main+0)+0,w
  1968  0798  0837               	movwf	(LCD_write_string@s)
  1969  0799  00FC               	movlw	low(01h)
  1970  079A  3001               	fcall	_LCD_write_string
  1971  079B  120A  118A  2635  120A  118A  	line	121
  1972                           ;main.c: 121:                   LCD_write_string(1,2,"POSITIVE");
  1973                           	movlw	low(02h)
  1974  07A0  3002               	bcf	status, 5	;RP0=0, select bank0
  1975  07A1  1283               	bcf	status, 6	;RP1=0, select bank0
  1976  07A2  1303               	movwf	(??_main+0)+0
  1977  07A3  00B7               	movf	(??_main+0)+0,w
  1978  07A4  0837               	movwf	(LCD_write_string@Y)
  1979  07A5  00FB               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1980  07A6  300A               	movwf	(??_main+1)+0
  1981  07A7  00B8               	movf	(??_main+1)+0,w
  1982  07A8  0838               	movwf	(LCD_write_string@s)
  1983  07A9  00FC               	movlw	low(01h)
  1984  07AA  3001               	fcall	_LCD_write_string
  1985  07AB  120A  118A  2635  120A  118A  	line	123
  1986                           ;main.c: 123:               }
  1987                           	goto	l1217
  1988  07B0  2FD0               	line	124
  1989                           ;main.c: 124:               else
  1990                           	
  1991                           l66:	
  1992  07B1                     	line	126
  1993                           	
  1994                           l1215:	
  1995  07B1                     ;main.c: 125:               {;main.c: 126:                   LCD_write_string(1,1,"acb")
                                 ;
  1996                           	clrf	(LCD_write_string@Y)
  1997  07B1  01FB               	incf	(LCD_write_string@Y),f
  1998  07B2  0AFB               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1999  07B3  3013               	bcf	status, 5	;RP0=0, select bank0
  2000  07B4  1283               	bcf	status, 6	;RP1=0, select bank0
  2001  07B5  1303               	movwf	(??_main+0)+0
  2002  07B6  00B7               	movf	(??_main+0)+0,w
  2003  07B7  0837               	movwf	(LCD_write_string@s)
  2004  07B8  00FC               	movlw	low(01h)
  2005  07B9  3001               	fcall	_LCD_write_string
  2006  07BA  120A  118A  2635  120A  118A  	line	127
  2007                           ;main.c: 127:                   LCD_write_string(1,2,"NEGATIVE");
  2008                           	movlw	low(02h)
  2009  07BF  3002               	bcf	status, 5	;RP0=0, select bank0
  2010  07C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  07C1  1303               	movwf	(??_main+0)+0
  2012  07C2  00B7               	movf	(??_main+0)+0,w
  2013  07C3  0837               	movwf	(LCD_write_string@Y)
  2014  07C4  00FB               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2015  07C5  3001               	movwf	(??_main+1)+0
  2016  07C6  00B8               	movf	(??_main+1)+0,w
  2017  07C7  0838               	movwf	(LCD_write_string@s)
  2018  07C8  00FC               	movlw	low(01h)
  2019  07C9  3001               	fcall	_LCD_write_string
  2020  07CA  120A  118A  2635  120A  118A  	goto	l1217
  2021  07CF  2FD0               	line	128
  2022                           ;main.c: 128:               }
  2023                           	
  2024                           l67:	
  2025  07D0                     	line	129
  2026                           	
  2027                           l1217:	
  2028  07D0                     ;main.c: 129:               flag_br_end=1;
  2029                           	bcf	status, 5	;RP0=0, select bank0
  2030  07D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2031  07D1  1303               	clrf	(_flag_br_end)
  2032  07D2  01AB               	incf	(_flag_br_end),f
  2033  07D3  0AAB               	line	130
  2034                           	
  2035                           l1219:	
  2036  07D4                     ;main.c: 130:               __nop();
  2037                           	opt	asmopt_push
  2038                           	opt	asmopt_off
  2039                           	nop
  2040  07D4  0000               	opt	asmopt_pop
  2041                           	goto	l1175
  2042  07D5  2ED4               	line	131
  2043                           ;main.c: 131:         }
  2044                           	
  2045                           l64:	
  2046  07D6                     	goto	l1175
  2047  07D6  2ED4               	line	132
  2048                           ;main.c: 132:     }
  2049                           	
  2050                           l68:	
  2051  07D7                     	goto	l1175
  2052  07D7  2ED4               	
  2053                           l69:	
  2054  07D8                     	line	133
  2055                           	
  2056                           l70:	
  2057  07D8                     	global	start
  2058                           	ljmp	start
  2059  07D8  120A  118A  2800   	opt stack 0
  2060                           GLOBAL	__end_of_main
  2061                           	__end_of_main:
  2062  07DB                     	signat	_main,89
  2063                           	global	_LED_MCU_INIT
  2064                           
  2065 ;; *************** function _LED_MCU_INIT *****************
  2066 ;; Defined at:
  2067 ;;		line 61 in file "main.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		None
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0
  2084 ;;      Totals:         0       0       0       0       0
  2085 ;;Total ram usage:        0 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; This function calls:
  2088 ;;		Nothing
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2094                           	line	61
  2095                           global __ptext1
  2096                           __ptext1:	;psect for function _LED_MCU_INIT
  2097  04C5                     psect	text1
  2098                           	file	"main.c"
  2099                           	line	61
  2100                           	global	__size_of_LED_MCU_INIT
  2101                           	__size_of_LED_MCU_INIT	equ	__end_of_LED_MCU_INIT-_LED_MCU_INIT
  2102  000B                     	
  2103                           _LED_MCU_INIT:	
  2104  04C5                     ;incstack = 0
  2105                           	opt	stack 7
  2106                           ; Regs used in _LED_MCU_INIT: []
  2107                           	line	64
  2108                           	
  2109                           l1125:	
  2110  04C5                     ;main.c: 64:     TRISCbits.TRISC0=0;
  2111                           	bsf	status, 5	;RP0=1, select bank1
  2112  04C5  1683               	bcf	status, 6	;RP1=0, select bank1
  2113  04C6  1303               	bcf	(135)^080h,0	;volatile
  2114  04C7  1007               	line	65
  2115                           ;main.c: 65:     TRISCbits.TRISC2=0;
  2116                           	bcf	(135)^080h,2	;volatile
  2117  04C8  1107               	line	66
  2118                           ;main.c: 66:     TRISCbits.TRISC1=0;
  2119                           	bcf	(135)^080h,1	;volatile
  2120  04C9  1087               	line	67
  2121                           ;main.c: 67:     PORTCbits.RC0=0;
  2122                           	bcf	status, 5	;RP0=0, select bank0
  2123  04CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2124  04CB  1303               	bcf	(7),0	;volatile
  2125  04CC  1007               	line	68
  2126                           ;main.c: 68:     PORTCbits.RC2=0;
  2127                           	bcf	(7),2	;volatile
  2128  04CD  1107               	line	69
  2129                           ;main.c: 69:     PORTCbits.RC1=0;
  2130                           	bcf	(7),1	;volatile
  2131  04CE  1087               	line	70
  2132                           	
  2133                           l53:	
  2134  04CF                     	return
  2135  04CF  0008               	opt stack 0
  2136                           GLOBAL	__end_of_LED_MCU_INIT
  2137                           	__end_of_LED_MCU_INIT:
  2138  04D0                     	signat	_LED_MCU_INIT,89
  2139                           	global	_LCD_write_string
  2140                           
  2141 ;; *************** function _LCD_write_string *****************
  2142 ;; Defined at:
  2143 ;;		line 87 in file "LCD.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  X               1    wreg     unsigned char 
  2146 ;;  Y               1   11[COMMON] unsigned char 
  2147 ;;  s               1   12[COMMON] PTR unsigned char 
  2148 ;;		 -> STR_4(9), STR_3(4), STR_2(9), STR_1(4), 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  X               1    0[BANK0 ] unsigned char 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         2       0       0       0       0
  2161 ;;      Locals:         0       1       0       0       0
  2162 ;;      Temps:          1       0       0       0       0
  2163 ;;      Totals:         3       1       0       0       0
  2164 ;;Total ram usage:        4 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    3
  2167 ;; This function calls:
  2168 ;;		_LCD_Busy
  2169 ;;		_LCD_en_dat
  2170 ;;		_LCD_set_xy
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2176                           	file	"LCD.c"
  2177                           	line	87
  2178                           global __ptext2
  2179                           __ptext2:	;psect for function _LCD_write_string
  2180  0635                     psect	text2
  2181                           	file	"LCD.c"
  2182                           	line	87
  2183                           	global	__size_of_LCD_write_string
  2184                           	__size_of_LCD_write_string	equ	__end_of_LCD_write_string-_LCD_write_string
  2185  003E                     	
  2186                           _LCD_write_string:	
  2187  0635                     ;incstack = 0
  2188                           	opt	stack 4
  2189                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2190                           ;LCD_write_string@X stored from wreg
  2191                           	bcf	status, 5	;RP0=0, select bank0
  2192  0635  1283               	bcf	status, 6	;RP1=0, select bank0
  2193  0636  1303               	movwf	(LCD_write_string@X)
  2194  0637  00B6               	line	89
  2195                           	
  2196                           l1159:	
  2197  0638                     ;LCD.c: 87: void LCD_write_string(unsigned char X, unsigned char Y, unsigned char *s);LC
                                 D.c: 88: {;LCD.c: 89:     LCD_Busy();
  2198                           	fcall	_LCD_Busy
  2199  0638  120A  118A  2508  120A  118A  	line	90
  2200                           ;LCD.c: 90:     LCD_set_xy(X,Y);
  2201                           	movf	(LCD_write_string@Y),w
  2202  063D  087B               	movwf	(??_LCD_write_string+0)+0
  2203  063E  00FD               	movf	(??_LCD_write_string+0)+0,w
  2204  063F  087D               	movwf	(LCD_set_xy@y)
  2205  0640  00F7               	bcf	status, 5	;RP0=0, select bank0
  2206  0641  1283               	bcf	status, 6	;RP1=0, select bank0
  2207  0642  1303               	movf	(LCD_write_string@X),w
  2208  0643  0836               	fcall	_LCD_set_xy
  2209  0644  120A  118A  2543  120A  118A  	line	91
  2210                           ;LCD.c: 91:     while(*s)
  2211                           	goto	l1167
  2212  0649  2E65               	
  2213                           l111:	
  2214  064A                     	line	93
  2215                           	
  2216                           l1161:	
  2217  064A                     ;LCD.c: 92:     {;LCD.c: 93:         PORTD=*s;
  2218                           	movf	(LCD_write_string@s),w
  2219  064A  087C               	movwf	fsr0
  2220  064B  0084               	fcall	stringdir
  2221  064C  120A  118A  2003  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2222  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  2223  0652  1303               	movwf	(8)	;volatile
  2224  0653  0088               	line	94
  2225                           	
  2226                           l1163:	
  2227  0654                     ;LCD.c: 94:         LCD_en_dat(*s);
  2228                           	movf	(LCD_write_string@s),w
  2229  0654  087C               	movwf	fsr0
  2230  0655  0084               	fcall	stringdir
  2231  0656  120A  118A  2003  120A  118A  	fcall	_LCD_en_dat
  2232  065B  120A  118A  2519  120A  118A  	line	95
  2233                           	
  2234                           l1165:	
  2235  0660                     ;LCD.c: 95:         s++;
  2236                           	movlw	low(01h)
  2237  0660  3001               	movwf	(??_LCD_write_string+0)+0
  2238  0661  00FD               	movf	(??_LCD_write_string+0)+0,w
  2239  0662  087D               	addwf	(LCD_write_string@s),f
  2240  0663  07FC               	goto	l1167
  2241  0664  2E65               	line	96
  2242                           ;LCD.c: 96:     }
  2243                           	
  2244                           l110:	
  2245  0665                     	line	91
  2246                           	
  2247                           l1167:	
  2248  0665                     ;LCD.c: 91:     while(*s)
  2249                           	movf	(LCD_write_string@s),w
  2250  0665  087C               	movwf	fsr0
  2251  0666  0084               	fcall	stringdir
  2252  0667  120A  118A  2003  120A  118A  	xorlw	0
  2253  066C  3A00               	skipz
  2254  066D  1D03               	goto	u401
  2255  066E  2E70               	goto	u400
  2256  066F  2E71               u401:
  2257  0670                     	goto	l1161
  2258  0670  2E4A               u400:
  2259  0671                     	goto	l113
  2260  0671  2E72               	
  2261                           l112:	
  2262  0672                     	line	97
  2263                           	
  2264                           l113:	
  2265  0672                     	return
  2266  0672  0008               	opt stack 0
  2267                           GLOBAL	__end_of_LCD_write_string
  2268                           	__end_of_LCD_write_string:
  2269  0673                     	signat	_LCD_write_string,12409
  2270                           	global	_LCD_set_xy
  2271                           
  2272 ;; *************** function _LCD_set_xy *****************
  2273 ;; Defined at:
  2274 ;;		line 67 in file "LCD.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  x               1    wreg     unsigned char 
  2277 ;;  y               1    7[COMMON] unsigned char 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  x               1   10[COMMON] unsigned char 
  2280 ;;  address         1    9[COMMON] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2290 ;;      Params:         1       0       0       0       0
  2291 ;;      Locals:         2       0       0       0       0
  2292 ;;      Temps:          1       0       0       0       0
  2293 ;;      Totals:         4       0       0       0       0
  2294 ;;Total ram usage:        4 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    2
  2297 ;; This function calls:
  2298 ;;		_LCD_en_command
  2299 ;; This function is called by:
  2300 ;;		_LCD_write_string
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2304                           	line	67
  2305                           global __ptext3
  2306                           __ptext3:	;psect for function _LCD_set_xy
  2307  0543                     psect	text3
  2308                           	file	"LCD.c"
  2309                           	line	67
  2310                           	global	__size_of_LCD_set_xy
  2311                           	__size_of_LCD_set_xy	equ	__end_of_LCD_set_xy-_LCD_set_xy
  2312  001A                     	
  2313                           _LCD_set_xy:	
  2314  0543                     ;incstack = 0
  2315                           	opt	stack 4
  2316                           ; Regs used in _LCD_set_xy: [wreg+status,2+status,0+pclath+cstack]
  2317                           ;LCD_set_xy@x stored from wreg
  2318                           	movwf	(LCD_set_xy@x)
  2319  0543  00FA               	line	70
  2320                           	
  2321                           l1097:	
  2322  0544                     ;LCD.c: 67: void LCD_set_xy(unsigned char x, unsigned char y);LCD.c: 68: {;LCD.c: 69:   
                                   unsigned char address;;LCD.c: 70:     if(y==1)
  2323                           		decf	((LCD_set_xy@y)),w
  2324  0544  0377               	btfss	status,2
  2325  0545  1D03               	goto	u331
  2326  0546  2D48               	goto	u330
  2327  0547  2D49               u331:
  2328  0548                     	goto	l1101
  2329  0548  2D4F               u330:
  2330  0549                     	line	71
  2331                           	
  2332                           l1099:	
  2333  0549                     ;LCD.c: 71:     {address = (unsigned char)0x80 +x;}
  2334                           	movf	(LCD_set_xy@x),w
  2335  0549  087A               	addlw	080h
  2336  054A  3E80               	movwf	(??_LCD_set_xy+0)+0
  2337  054B  00F8               	movf	(??_LCD_set_xy+0)+0,w
  2338  054C  0878               	movwf	(LCD_set_xy@address)
  2339  054D  00F9               	goto	l1103
  2340  054E  2D55               	line	73
  2341                           ;LCD.c: 73:     else
  2342                           	
  2343                           l105:	
  2344  054F                     	line	74
  2345                           	
  2346                           l1101:	
  2347  054F                     ;LCD.c: 74:     {address = 0xC0 +x;}
  2348                           	movf	(LCD_set_xy@x),w
  2349  054F  087A               	addlw	0C0h
  2350  0550  3EC0               	movwf	(??_LCD_set_xy+0)+0
  2351  0551  00F8               	movf	(??_LCD_set_xy+0)+0,w
  2352  0552  0878               	movwf	(LCD_set_xy@address)
  2353  0553  00F9               	goto	l1103
  2354  0554  2D55               	
  2355                           l106:	
  2356  0555                     	line	75
  2357                           	
  2358                           l1103:	
  2359  0555                     ;LCD.c: 75:     LCD_en_command(0x80|address);
  2360                           	movf	(LCD_set_xy@address),w
  2361  0555  0879               	iorlw	080h
  2362  0556  3880               	fcall	_LCD_en_command
  2363  0557  120A  118A  2673  120A  118A  	line	76
  2364                           	
  2365                           l107:	
  2366  055C                     	return
  2367  055C  0008               	opt stack 0
  2368                           GLOBAL	__end_of_LCD_set_xy
  2369                           	__end_of_LCD_set_xy:
  2370  055D                     	signat	_LCD_set_xy,8313
  2371                           	global	_LCD_en_dat
  2372                           
  2373 ;; *************** function _LCD_en_dat *****************
  2374 ;; Defined at:
  2375 ;;		line 37 in file "LCD.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  dat             1    wreg     unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  dat             1    1[COMMON] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         0       0       0       0       0
  2390 ;;      Locals:         1       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0
  2392 ;;      Totals:         1       0       0       0       0
  2393 ;;Total ram usage:        1 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		_delay_us
  2398 ;; This function is called by:
  2399 ;;		_LCD_write_string
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2403                           	line	37
  2404                           global __ptext4
  2405                           __ptext4:	;psect for function _LCD_en_dat
  2406  0519                     psect	text4
  2407                           	file	"LCD.c"
  2408                           	line	37
  2409                           	global	__size_of_LCD_en_dat
  2410                           	__size_of_LCD_en_dat	equ	__end_of_LCD_en_dat-_LCD_en_dat
  2411  0013                     	
  2412                           _LCD_en_dat:	
  2413  0519                     ;incstack = 0
  2414                           	opt	stack 5
  2415                           ; Regs used in _LCD_en_dat: [wreg+status,2+status,0+pclath+cstack]
  2416                           ;LCD_en_dat@dat stored from wreg
  2417                           	movwf	(LCD_en_dat@dat)
  2418  0519  00F1               	line	39
  2419                           	
  2420                           l1087:	
  2421  051A                     ;LCD.c: 37: void LCD_en_dat(unsigned char dat);LCD.c: 38: {;LCD.c: 39:     PORTEbits.RE1
                                 =0;
  2422                           	bcf	status, 5	;RP0=0, select bank0
  2423  051A  1283               	bcf	status, 6	;RP1=0, select bank0
  2424  051B  1303               	bcf	(9),1	;volatile
  2425  051C  1089               	line	40
  2426                           ;LCD.c: 40:     PORTEbits.RE0=1;
  2427                           	bsf	(9),0	;volatile
  2428  051D  1409               	line	41
  2429                           ;LCD.c: 41:     PORTEbits.RE2=0;
  2430                           	bcf	(9),2	;volatile
  2431  051E  1109               	line	42
  2432                           	
  2433                           l1089:	
  2434  051F                     ;LCD.c: 42:     PORTD=dat;
  2435                           	movf	(LCD_en_dat@dat),w
  2436  051F  0871               	movwf	(8)	;volatile
  2437  0520  0088               	line	43
  2438                           	
  2439                           l1091:	
  2440  0521                     ;LCD.c: 43:     PORTEbits.RE1=1;
  2441                           	bsf	(9),1	;volatile
  2442  0521  1489               	line	44
  2443                           	
  2444                           l1093:	
  2445  0522                     ;LCD.c: 44:     delay_us(8);
  2446                           	movlw	low(08h)
  2447  0522  3008               	fcall	_delay_us
  2448  0523  120A  118A  24DD  120A  118A  	line	45
  2449                           	
  2450                           l1095:	
  2451  0528                     ;LCD.c: 45:     PORTEbits.RE1=0;
  2452                           	bcf	status, 5	;RP0=0, select bank0
  2453  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  2454  0529  1303               	bcf	(9),1	;volatile
  2455  052A  1089               	line	46
  2456                           	
  2457                           l99:	
  2458  052B                     	return
  2459  052B  0008               	opt stack 0
  2460                           GLOBAL	__end_of_LCD_en_dat
  2461                           	__end_of_LCD_en_dat:
  2462  052C                     	signat	_LCD_en_dat,4217
  2463                           	global	_LCD_Busy
  2464                           
  2465 ;; *************** function _LCD_Busy *****************
  2466 ;; Defined at:
  2467 ;;		line 120 in file "LCD.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  busyFlag        1    3[COMMON] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, pclath, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         1       0       0       0       0
  2483 ;;      Temps:          1       0       0       0       0
  2484 ;;      Totals:         2       0       0       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		_LCD_Read_dat
  2490 ;; This function is called by:
  2491 ;;		_LCD_write_string
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2495                           	line	120
  2496                           global __ptext5
  2497                           __ptext5:	;psect for function _LCD_Busy
  2498  0508                     psect	text5
  2499                           	file	"LCD.c"
  2500                           	line	120
  2501                           	global	__size_of_LCD_Busy
  2502                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
  2503  0011                     	
  2504                           _LCD_Busy:	
  2505  0508                     ;incstack = 0
  2506                           	opt	stack 5
  2507                           ; Regs used in _LCD_Busy: [wreg+status,2+pclath+cstack]
  2508                           	line	123
  2509                           ;LCD.c: 122:     char busyFlag;;LCD.c: 123:     while(1)
  2510                           	
  2511                           l122:	
  2512  0508                     	line	125
  2513                           	
  2514                           l1105:	
  2515  0508                     ;LCD.c: 124:     {;LCD.c: 125:         busyFlag=LCD_Read_dat();
  2516                           	fcall	_LCD_Read_dat
  2517  0508  120A  118A  252C  120A  118A  	movwf	(??_LCD_Busy+0)+0
  2518  050D  00F2               	movf	(??_LCD_Busy+0)+0,w
  2519  050E  0872               	movwf	(LCD_Busy@busyFlag)
  2520  050F  00F3               	line	126
  2521                           	
  2522                           l1107:	
  2523  0510                     ;LCD.c: 126:         if((busyFlag&0x80)==0)
  2524                           	btfsc	(LCD_Busy@busyFlag),(7)&7
  2525  0510  1BF3               	goto	u341
  2526  0511  2D13               	goto	u340
  2527  0512  2D14               u341:
  2528  0513                     	goto	l122
  2529  0513  2D08               u340:
  2530  0514                     	goto	l126
  2531  0514  2D18               	line	128
  2532                           	
  2533                           l1109:	
  2534  0515                     ;LCD.c: 127:         {;LCD.c: 128:             break;
  2535                           	goto	l126
  2536  0515  2D18               	line	129
  2537                           ;LCD.c: 129:         }
  2538                           	
  2539                           l123:	
  2540  0516                     	goto	l122
  2541  0516  2D08               	line	130
  2542                           ;LCD.c: 130:     }
  2543                           	
  2544                           l125:	
  2545  0517                     	goto	l122
  2546  0517  2D08               	
  2547                           l124:	
  2548  0518                     	line	131
  2549                           	
  2550                           l126:	
  2551  0518                     	return
  2552  0518  0008               	opt stack 0
  2553                           GLOBAL	__end_of_LCD_Busy
  2554                           	__end_of_LCD_Busy:
  2555  0519                     	signat	_LCD_Busy,89
  2556                           	global	_LCD_Read_dat
  2557                           
  2558 ;; *************** function _LCD_Read_dat *****************
  2559 ;; Defined at:
  2560 ;;		line 49 in file "LCD.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  dat             1    1[COMMON] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      unsigned char 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         1       0       0       0       0
  2576 ;;      Temps:          1       0       0       0       0
  2577 ;;      Totals:         2       0       0       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_LCD_Busy
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2587                           	line	49
  2588                           global __ptext6
  2589                           __ptext6:	;psect for function _LCD_Read_dat
  2590  052C                     psect	text6
  2591                           	file	"LCD.c"
  2592                           	line	49
  2593                           	global	__size_of_LCD_Read_dat
  2594                           	__size_of_LCD_Read_dat	equ	__end_of_LCD_Read_dat-_LCD_Read_dat
  2595  0017                     	
  2596                           _LCD_Read_dat:	
  2597  052C                     ;incstack = 0
  2598                           	opt	stack 5
  2599                           ; Regs used in _LCD_Read_dat: [wreg+status,2]
  2600                           	line	52
  2601                           	
  2602                           l1053:	
  2603  052C                     ;LCD.c: 51:     char dat;;LCD.c: 52:     PORTD|=0xff;
  2604                           	movlw	low(0FFh)
  2605  052C  30FF               	bcf	status, 5	;RP0=0, select bank0
  2606  052D  1283               	bcf	status, 6	;RP1=0, select bank0
  2607  052E  1303               	movwf	(8)	;volatile
  2608  052F  0088               	line	53
  2609                           	
  2610                           l1055:	
  2611  0530                     ;LCD.c: 53:     PORTEbits.RE0=0;
  2612                           	bcf	(9),0	;volatile
  2613  0530  1009               	line	54
  2614                           	
  2615                           l1057:	
  2616  0531                     ;LCD.c: 54:     PORTEbits.RE2=1;__nop();
  2617                           	bsf	(9),2	;volatile
  2618  0531  1509               	
  2619                           l1059:	
  2620  0532                     	opt	asmopt_push
  2621                           	opt	asmopt_off
  2622                           	nop
  2623  0532  0000               	opt	asmopt_pop
  2624                           	line	55
  2625                           	
  2626                           l1061:	
  2627  0533                     ;LCD.c: 55:     PORTEbits.RE1=1;
  2628                           	bcf	status, 5	;RP0=0, select bank0
  2629  0533  1283               	bcf	status, 6	;RP1=0, select bank0
  2630  0534  1303               	bsf	(9),1	;volatile
  2631  0535  1489               	line	56
  2632                           ;LCD.c: 56:     dat=PORTD;
  2633                           	movf	(8),w	;volatile
  2634  0536  0808               	movwf	(??_LCD_Read_dat+0)+0
  2635  0537  00F0               	movf	(??_LCD_Read_dat+0)+0,w
  2636  0538  0870               	movwf	(LCD_Read_dat@dat)
  2637  0539  00F1               	line	59
  2638                           	
  2639                           l1063:	
  2640  053A                     ;LCD.c: 59:     PORTEbits.RE1=0;__nop();
  2641                           	bcf	(9),1	;volatile
  2642  053A  1089               	
  2643                           l1065:	
  2644  053B                     	opt	asmopt_push
  2645                           	opt	asmopt_off
  2646                           	nop
  2647  053B  0000               	opt	asmopt_pop
  2648                           	line	60
  2649                           	
  2650                           l1067:	
  2651  053C                     ;LCD.c: 60:     PORTEbits.RE2=0;
  2652                           	bcf	status, 5	;RP0=0, select bank0
  2653  053C  1283               	bcf	status, 6	;RP1=0, select bank0
  2654  053D  1303               	bcf	(9),2	;volatile
  2655  053E  1109               	line	61
  2656                           	
  2657                           l1069:	
  2658  053F                     ;LCD.c: 61:     PORTD=0;
  2659                           	clrf	(8)	;volatile
  2660  053F  0188               	line	62
  2661                           	
  2662                           l1071:	
  2663  0540                     ;LCD.c: 62:     return dat;
  2664                           	movf	(LCD_Read_dat@dat),w
  2665  0540  0871               	goto	l102
  2666  0541  2D42               	
  2667                           l1073:	
  2668  0542                     	line	64
  2669                           	
  2670                           l102:	
  2671  0542                     	return
  2672  0542  0008               	opt stack 0
  2673                           GLOBAL	__end_of_LCD_Read_dat
  2674                           	__end_of_LCD_Read_dat:
  2675  0543                     	signat	_LCD_Read_dat,89
  2676                           	global	_LCD_init
  2677                           
  2678 ;; *************** function _LCD_init *****************
  2679 ;; Defined at:
  2680 ;;		line 27 in file "LCD.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    2
  2701 ;; This function calls:
  2702 ;;		_LCD_en_command
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2708                           	line	27
  2709                           global __ptext7
  2710                           __ptext7:	;psect for function _LCD_init
  2711  0579                     psect	text7
  2712                           	file	"LCD.c"
  2713                           	line	27
  2714                           	global	__size_of_LCD_init
  2715                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  2716  001F                     	
  2717                           _LCD_init:	
  2718  0579                     ;incstack = 0
  2719                           	opt	stack 5
  2720                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2721                           	line	29
  2722                           	
  2723                           l1135:	
  2724  0579                     ;LCD.c: 29:     LCD_en_command(0x01);
  2725                           	movlw	low(01h)
  2726  0579  3001               	fcall	_LCD_en_command
  2727  057A  120A  118A  2673  120A  118A  	line	30
  2728                           ;LCD.c: 30:     LCD_en_command(0x38);
  2729                           	movlw	low(038h)
  2730  057F  3038               	fcall	_LCD_en_command
  2731  0580  120A  118A  2673  120A  118A  	line	31
  2732                           ;LCD.c: 31:     LCD_en_command(0x0C);
  2733                           	movlw	low(0Ch)
  2734  0585  300C               	fcall	_LCD_en_command
  2735  0586  120A  118A  2673  120A  118A  	line	32
  2736                           ;LCD.c: 32:     LCD_en_command(0x80);
  2737                           	movlw	low(080h)
  2738  058B  3080               	fcall	_LCD_en_command
  2739  058C  120A  118A  2673  120A  118A  	line	33
  2740                           ;LCD.c: 33:     LCD_en_command(0x01);
  2741                           	movlw	low(01h)
  2742  0591  3001               	fcall	_LCD_en_command
  2743  0592  120A  118A  2673  120A  118A  	line	34
  2744                           	
  2745                           l96:	
  2746  0597                     	return
  2747  0597  0008               	opt stack 0
  2748                           GLOBAL	__end_of_LCD_init
  2749                           	__end_of_LCD_init:
  2750  0598                     	signat	_LCD_init,89
  2751                           	global	_LCD_MCU_init
  2752                           
  2753 ;; *************** function _LCD_MCU_init *****************
  2754 ;; Defined at:
  2755 ;;		line 102 in file "LCD.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;		None
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2769 ;;      Params:         0       0       0       0       0
  2770 ;;      Locals:         0       0       0       0       0
  2771 ;;      Temps:          1       0       0       0       0
  2772 ;;      Totals:         1       0       0       0       0
  2773 ;;Total ram usage:        1 bytes
  2774 ;; Hardware stack levels used:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2782                           	line	102
  2783                           global __ptext8
  2784                           __ptext8:	;psect for function _LCD_MCU_init
  2785  04EA                     psect	text8
  2786                           	file	"LCD.c"
  2787                           	line	102
  2788                           	global	__size_of_LCD_MCU_init
  2789                           	__size_of_LCD_MCU_init	equ	__end_of_LCD_MCU_init-_LCD_MCU_init
  2790  000E                     	
  2791                           _LCD_MCU_init:	
  2792  04EA                     ;incstack = 0
  2793                           	opt	stack 7
  2794                           ; Regs used in _LCD_MCU_init: [wreg+status,2+status,0]
  2795                           	line	104
  2796                           	
  2797                           l1127:	
  2798  04EA                     ;LCD.c: 104:     TRISE&=0b11111000;
  2799                           	movlw	low(0F8h)
  2800  04EA  30F8               	movwf	(??_LCD_MCU_init+0)+0
  2801  04EB  00F0               	movf	(??_LCD_MCU_init+0)+0,w
  2802  04EC  0870               	bsf	status, 5	;RP0=1, select bank1
  2803  04ED  1683               	bcf	status, 6	;RP1=0, select bank1
  2804  04EE  1303               	andwf	(137)^080h,f	;volatile
  2805  04EF  0589               	line	105
  2806                           	
  2807                           l1129:	
  2808  04F0                     ;LCD.c: 105:     ANSEL=0;
  2809                           	bsf	status, 5	;RP0=1, select bank3
  2810  04F0  1683               	bsf	status, 6	;RP1=1, select bank3
  2811  04F1  1703               	clrf	(392)^0180h	;volatile
  2812  04F2  0188               	line	106
  2813                           	
  2814                           l1131:	
  2815  04F3                     ;LCD.c: 106:     ANSELH=0;
  2816                           	clrf	(393)^0180h	;volatile
  2817  04F3  0189               	line	107
  2818                           	
  2819                           l1133:	
  2820  04F4                     ;LCD.c: 107:     TRISD=0;
  2821                           	bsf	status, 5	;RP0=1, select bank1
  2822  04F4  1683               	bcf	status, 6	;RP1=0, select bank1
  2823  04F5  1303               	clrf	(136)^080h	;volatile
  2824  04F6  0188               	line	109
  2825                           	
  2826                           l116:	
  2827  04F7                     	return
  2828  04F7  0008               	opt stack 0
  2829                           GLOBAL	__end_of_LCD_MCU_init
  2830                           	__end_of_LCD_MCU_init:
  2831  04F8                     	signat	_LCD_MCU_init,89
  2832                           	global	_InitScrn
  2833                           
  2834 ;; *************** function _InitScrn *****************
  2835 ;; Defined at:
  2836 ;;		line 112 in file "LCD.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         0       0       0       0       0
  2851 ;;      Locals:         0       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0
  2853 ;;      Totals:         0       0       0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    2
  2857 ;; This function calls:
  2858 ;;		_LCD_en_command
  2859 ;;		_delay_ms
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2865                           	line	112
  2866                           global __ptext9
  2867                           __ptext9:	;psect for function _InitScrn
  2868  04F8                     psect	text9
  2869                           	file	"LCD.c"
  2870                           	line	112
  2871                           	global	__size_of_InitScrn
  2872                           	__size_of_InitScrn	equ	__end_of_InitScrn-_InitScrn
  2873  0010                     	
  2874                           _InitScrn:	
  2875  04F8                     ;incstack = 0
  2876                           	opt	stack 5
  2877                           ; Regs used in _InitScrn: [wreg+status,2+status,0+pclath+cstack]
  2878                           	line	114
  2879                           	
  2880                           l1137:	
  2881  04F8                     ;LCD.c: 114:     LCD_en_command(0x01);
  2882                           	movlw	low(01h)
  2883  04F8  3001               	fcall	_LCD_en_command
  2884  04F9  120A  118A  2673  120A  118A  	line	115
  2885                           ;LCD.c: 115:     delay_ms(10);
  2886                           	movlw	0Ah
  2887  04FE  300A               	movwf	(delay_ms@n)
  2888  04FF  00F0               	movlw	0
  2889  0500  3000               	movwf	((delay_ms@n))+1
  2890  0501  00F1               	fcall	_delay_ms
  2891  0502  120A  118A  2598  120A  118A  	line	117
  2892                           	
  2893                           l119:	
  2894  0507                     	return
  2895  0507  0008               	opt stack 0
  2896                           GLOBAL	__end_of_InitScrn
  2897                           	__end_of_InitScrn:
  2898  0508                     	signat	_InitScrn,89
  2899                           	global	_LCD_en_command
  2900                           
  2901 ;; *************** function _LCD_en_command *****************
  2902 ;; Defined at:
  2903 ;;		line 6 in file "LCD.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  command         1    wreg     unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  command         1    6[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, pclath, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       0       0       0       0
  2918 ;;      Locals:         1       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0
  2920 ;;      Totals:         1       0       0       0       0
  2921 ;;Total ram usage:        1 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    1
  2924 ;; This function calls:
  2925 ;;		_delay_ms
  2926 ;;		_delay_us
  2927 ;; This function is called by:
  2928 ;;		_LCD_init
  2929 ;;		_LCD_set_xy
  2930 ;;		_InitScrn
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2934                           	line	6
  2935                           global __ptext10
  2936                           __ptext10:	;psect for function _LCD_en_command
  2937  0673                     psect	text10
  2938                           	file	"LCD.c"
  2939                           	line	6
  2940                           	global	__size_of_LCD_en_command
  2941                           	__size_of_LCD_en_command	equ	__end_of_LCD_en_command-_LCD_en_command
  2942  0042                     	
  2943                           _LCD_en_command:	
  2944  0673                     ;incstack = 0
  2945                           	opt	stack 4
  2946                           ; Regs used in _LCD_en_command: [wreg+status,2+status,0+pclath+cstack]
  2947                           ;LCD_en_command@command stored from wreg
  2948                           	movwf	(LCD_en_command@command)
  2949  0673  00F6               	line	8
  2950                           	
  2951                           l1029:	
  2952  0674                     ;LCD.c: 6: void LCD_en_command(unsigned char command);LCD.c: 7: {;LCD.c: 8:     PORTEbit
                                 s.RE1=0;
  2953                           	bcf	status, 5	;RP0=0, select bank0
  2954  0674  1283               	bcf	status, 6	;RP1=0, select bank0
  2955  0675  1303               	bcf	(9),1	;volatile
  2956  0676  1089               	line	9
  2957                           ;LCD.c: 9:     PORTEbits.RE0=0;
  2958                           	bcf	(9),0	;volatile
  2959  0677  1009               	line	10
  2960                           ;LCD.c: 10:     PORTEbits.RE2=0;
  2961                           	bcf	(9),2	;volatile
  2962  0678  1109               	line	11
  2963                           	
  2964                           l1031:	
  2965  0679                     ;LCD.c: 11:     PORTD=command;
  2966                           	movf	(LCD_en_command@command),w
  2967  0679  0876               	movwf	(8)	;volatile
  2968  067A  0088               	line	13
  2969                           	
  2970                           l1033:	
  2971  067B                     ;LCD.c: 13:     delay_us(8);
  2972                           	movlw	low(08h)
  2973  067B  3008               	fcall	_delay_us
  2974  067C  120A  118A  24DD  120A  118A  	line	14
  2975                           	
  2976                           l1035:	
  2977  0681                     ;LCD.c: 14:     delay_us(8);
  2978                           	movlw	low(08h)
  2979  0681  3008               	fcall	_delay_us
  2980  0682  120A  118A  24DD  120A  118A  	line	15
  2981                           	
  2982                           l1037:	
  2983  0687                     ;LCD.c: 15:     delay_us(8);
  2984                           	movlw	low(08h)
  2985  0687  3008               	fcall	_delay_us
  2986  0688  120A  118A  24DD  120A  118A  	line	16
  2987                           	
  2988                           l1039:	
  2989  068D                     ;LCD.c: 16:     delay_us(8);
  2990                           	movlw	low(08h)
  2991  068D  3008               	fcall	_delay_us
  2992  068E  120A  118A  24DD  120A  118A  	line	17
  2993                           	
  2994                           l1041:	
  2995  0693                     ;LCD.c: 17:     delay_us(8);
  2996                           	movlw	low(08h)
  2997  0693  3008               	fcall	_delay_us
  2998  0694  120A  118A  24DD  120A  118A  	line	18
  2999                           	
  3000                           l1043:	
  3001  0699                     ;LCD.c: 18:     delay_us(8);
  3002                           	movlw	low(08h)
  3003  0699  3008               	fcall	_delay_us
  3004  069A  120A  118A  24DD  120A  118A  	line	20
  3005                           	
  3006                           l1045:	
  3007  069F                     ;LCD.c: 20:     PORTEbits.RE1=1;
  3008                           	bcf	status, 5	;RP0=0, select bank0
  3009  069F  1283               	bcf	status, 6	;RP1=0, select bank0
  3010  06A0  1303               	bsf	(9),1	;volatile
  3011  06A1  1489               	line	21
  3012                           	
  3013                           l1047:	
  3014  06A2                     ;LCD.c: 21:     delay_ms(1);
  3015                           	movlw	01h
  3016  06A2  3001               	movwf	(delay_ms@n)
  3017  06A3  00F0               	movlw	0
  3018  06A4  3000               	movwf	((delay_ms@n))+1
  3019  06A5  00F1               	fcall	_delay_ms
  3020  06A6  120A  118A  2598  120A  118A  	line	22
  3021                           	
  3022                           l1049:	
  3023  06AB                     ;LCD.c: 22:     delay_us(8);
  3024                           	movlw	low(08h)
  3025  06AB  3008               	fcall	_delay_us
  3026  06AC  120A  118A  24DD  120A  118A  	line	23
  3027                           	
  3028                           l1051:	
  3029  06B1                     ;LCD.c: 23:     PORTEbits.RE1=0;
  3030                           	bcf	status, 5	;RP0=0, select bank0
  3031  06B1  1283               	bcf	status, 6	;RP1=0, select bank0
  3032  06B2  1303               	bcf	(9),1	;volatile
  3033  06B3  1089               	line	24
  3034                           	
  3035                           l93:	
  3036  06B4                     	return
  3037  06B4  0008               	opt stack 0
  3038                           GLOBAL	__end_of_LCD_en_command
  3039                           	__end_of_LCD_en_command:
  3040  06B5                     	signat	_LCD_en_command,4217
  3041                           	global	_ButtonDetect
  3042                           
  3043 ;; *************** function _ButtonDetect *****************
  3044 ;; Defined at:
  3045 ;;		line 23 in file "BUTTON.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    2
  3066 ;; This function calls:
  3067 ;;		_AD_SUB
  3068 ;;		_isBUTTONOn
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3074                           	file	"BUTTON.c"
  3075                           	line	23
  3076                           global __ptext11
  3077                           __ptext11:	;psect for function _ButtonDetect
  3078  05C1                     psect	text11
  3079                           	file	"BUTTON.c"
  3080                           	line	23
  3081                           	global	__size_of_ButtonDetect
  3082                           	__size_of_ButtonDetect	equ	__end_of_ButtonDetect-_ButtonDetect
  3083  0037                     	
  3084                           _ButtonDetect:	
  3085  05C1                     ;incstack = 0
  3086                           	opt	stack 5
  3087                           ; Regs used in _ButtonDetect: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3088                           	line	25
  3089                           	
  3090                           l1145:	
  3091  05C1                     ;BUTTON.c: 25:     if(flag_but_once)
  3092                           	bcf	status, 5	;RP0=0, select bank0
  3093  05C1  1283               	bcf	status, 6	;RP1=0, select bank0
  3094  05C2  1303               	movf	((_flag_but_once)),w
  3095  05C3  082D               	btfsc	status,2
  3096  05C4  1903               	goto	u371
  3097  05C5  2DC7               	goto	u370
  3098  05C6  2DC8               u371:
  3099  05C7                     	goto	l1151
  3100  05C7  2DCB               u370:
  3101  05C8                     	goto	l225
  3102  05C8  2DF7               	line	26
  3103                           	
  3104                           l1147:	
  3105  05C9                     ;BUTTON.c: 26:         return;
  3106                           	goto	l225
  3107  05C9  2DF7               	
  3108                           l1149:	
  3109  05CA                     	goto	l225
  3110  05CA  2DF7               	line	27
  3111                           ;BUTTON.c: 27:     else if(isBUTTONOn())
  3112                           	
  3113                           l224:	
  3114  05CB                     	
  3115                           l1151:	
  3116  05CB                     	fcall	_isBUTTONOn
  3117  05CB  120A  118A  255D  120A  118A  	xorlw	0
  3118  05D0  3A00               	skipnz
  3119  05D1  1903               	goto	u381
  3120  05D2  2DD4               	goto	u380
  3121  05D3  2DD5               u381:
  3122  05D4                     	goto	l225
  3123  05D4  2DF7               u380:
  3124  05D5                     	line	30
  3125                           	
  3126                           l1153:	
  3127  05D5                     ;BUTTON.c: 28:     {;BUTTON.c: 30:        AD_SUB(0);
  3128                           	movlw	low(0)
  3129  05D5  3000               	fcall	_AD_SUB
  3130  05D6  120A  118A  25F8  120A  118A  	line	31
  3131                           	
  3132                           l1155:	
  3133  05DB                     ;BUTTON.c: 31:        if(ADresult <= 512)
  3134                           	bcf	status, 5	;RP0=0, select bank0
  3135  05DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3136  05DC  1303               		movf	(_ADresult+3),w
  3137  05DD  0827               	btfss	status,2
  3138  05DE  1D03               	goto	u391
  3139  05DF  2DEE               	movf	(_ADresult+2),w
  3140  05E0  0826               	btfss	status,2
  3141  05E1  1D03               	goto	u391
  3142  05E2  2DEE               	movlw	2
  3143  05E3  3002               	subwf	(_ADresult+1),w
  3144  05E4  0225               	skipz
  3145  05E5  1D03               	goto	u393
  3146  05E6  2DEB               	movlw	1
  3147  05E7  3001               	subwf	(_ADresult),w
  3148  05E8  0224               	skipz
  3149  05E9  1D03               	goto	u393
  3150  05EA  2DEB               u393:
  3151  05EB                     	btfsc	status,0
  3152  05EB  1803               	goto	u391
  3153  05EC  2DEE               	goto	u390
  3154  05ED  2DEF               
  3155                           u391:
  3156  05EE                     	goto	l225
  3157  05EE  2DF7               u390:
  3158  05EF                     	line	33
  3159                           	
  3160                           l1157:	
  3161  05EF                     ;BUTTON.c: 32:        {;BUTTON.c: 33:            flag_ph_st=1;
  3162                           	clrf	(_flag_ph_st)
  3163  05EF  01AC               	incf	(_flag_ph_st),f
  3164  05F0  0AAC               	line	34
  3165                           ;BUTTON.c: 34:            flag_but_once=1;
  3166                           	clrf	(_flag_but_once)
  3167  05F1  01AD               	incf	(_flag_but_once),f
  3168  05F2  0AAD               	line	35
  3169                           ;BUTTON.c: 35:            PORTCbits.RC1=1;
  3170                           	bsf	(7),1	;volatile
  3171  05F3  1487               	goto	l225
  3172  05F4  2DF7               	line	36
  3173                           ;BUTTON.c: 36:        }
  3174                           	
  3175                           l228:	
  3176  05F5                     	goto	l225
  3177  05F5  2DF7               	line	37
  3178                           ;BUTTON.c: 37:     }
  3179                           	
  3180                           l227:	
  3181  05F6                     	goto	l225
  3182  05F6  2DF7               	
  3183                           l226:	
  3184  05F7                     	line	38
  3185                           	
  3186                           l225:	
  3187  05F7                     	return
  3188  05F7  0008               	opt stack 0
  3189                           GLOBAL	__end_of_ButtonDetect
  3190                           	__end_of_ButtonDetect:
  3191  05F8                     	signat	_ButtonDetect,89
  3192                           	global	_isBUTTONOn
  3193                           
  3194 ;; *************** function _isBUTTONOn *****************
  3195 ;; Defined at:
  3196 ;;		line 11 in file "BUTTON.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;		None
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0, pclath, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0
  3213 ;;      Totals:         0       0       0       0       0
  3214 ;;Total ram usage:        0 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; Hardware stack levels required when called:    1
  3217 ;; This function calls:
  3218 ;;		_delay_ms
  3219 ;; This function is called by:
  3220 ;;		_ButtonDetect
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3224                           	line	11
  3225                           global __ptext12
  3226                           __ptext12:	;psect for function _isBUTTONOn
  3227  055D                     psect	text12
  3228                           	file	"BUTTON.c"
  3229                           	line	11
  3230                           	global	__size_of_isBUTTONOn
  3231                           	__size_of_isBUTTONOn	equ	__end_of_isBUTTONOn-_isBUTTONOn
  3232  001C                     	
  3233                           _isBUTTONOn:	
  3234  055D                     ;incstack = 0
  3235                           	opt	stack 5
  3236                           ; Regs used in _isBUTTONOn: [wreg+status,2+status,0+pclath+cstack]
  3237                           	line	13
  3238                           	
  3239                           l1111:	
  3240  055D                     ;BUTTON.c: 13:     if(!PORTBbits.RB7)
  3241                           	bcf	status, 5	;RP0=0, select bank0
  3242  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  3243  055E  1303               	btfsc	(6),7	;volatile
  3244  055F  1B86               	goto	u351
  3245  0560  2D62               	goto	u350
  3246  0561  2D63               u351:
  3247  0562                     	goto	l1121
  3248  0562  2D76               u350:
  3249  0563                     	line	15
  3250                           	
  3251                           l1113:	
  3252  0563                     ;BUTTON.c: 14:     {;BUTTON.c: 15:         delay_ms(15);
  3253                           	movlw	0Fh
  3254  0563  300F               	movwf	(delay_ms@n)
  3255  0564  00F0               	movlw	0
  3256  0565  3000               	movwf	((delay_ms@n))+1
  3257  0566  00F1               	fcall	_delay_ms
  3258  0567  120A  118A  2598  120A  118A  	line	16
  3259                           	
  3260                           l1115:	
  3261  056C                     ;BUTTON.c: 16:         if(!PORTBbits.RB7)
  3262                           	bcf	status, 5	;RP0=0, select bank0
  3263  056C  1283               	bcf	status, 6	;RP1=0, select bank0
  3264  056D  1303               	btfsc	(6),7	;volatile
  3265  056E  1B86               	goto	u361
  3266  056F  2D71               	goto	u360
  3267  0570  2D72               u361:
  3268  0571                     	goto	l1121
  3269  0571  2D76               u360:
  3270  0572                     	line	18
  3271                           	
  3272                           l1117:	
  3273  0572                     ;BUTTON.c: 17:         {;BUTTON.c: 18:             return 1;
  3274                           	movlw	low(01h)
  3275  0572  3001               	goto	l221
  3276  0573  2D78               	
  3277                           l1119:	
  3278  0574                     	goto	l221
  3279  0574  2D78               	line	19
  3280                           ;BUTTON.c: 19:         }
  3281                           	
  3282                           l220:	
  3283  0575                     	goto	l1121
  3284  0575  2D76               	line	20
  3285                           ;BUTTON.c: 20:     }
  3286                           	
  3287                           l219:	
  3288  0576                     	line	21
  3289                           	
  3290                           l1121:	
  3291  0576                     ;BUTTON.c: 21:     return 0;
  3292                           	movlw	low(0)
  3293  0576  3000               	goto	l221
  3294  0577  2D78               	
  3295                           l1123:	
  3296  0578                     	line	22
  3297                           	
  3298                           l221:	
  3299  0578                     	return
  3300  0578  0008               	opt stack 0
  3301                           GLOBAL	__end_of_isBUTTONOn
  3302                           	__end_of_isBUTTONOn:
  3303  0579                     	signat	_isBUTTONOn,89
  3304                           	global	_delay_ms
  3305                           
  3306 ;; *************** function _delay_ms *****************
  3307 ;; Defined at:
  3308 ;;		line 3 in file "DELAY.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  n               2    0[COMMON] unsigned int 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  j               2    3[COMMON] unsigned int 
  3313 ;;  k               1    5[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3323 ;;      Params:         2       0       0       0       0
  3324 ;;      Locals:         3       0       0       0       0
  3325 ;;      Temps:          1       0       0       0       0
  3326 ;;      Totals:         6       0       0       0       0
  3327 ;;Total ram usage:        6 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;;		_LCD_en_command
  3334 ;;		_InitScrn
  3335 ;;		_isBUTTONOn
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3339                           	file	"DELAY.c"
  3340                           	line	3
  3341                           global __ptext13
  3342                           __ptext13:	;psect for function _delay_ms
  3343  0598                     psect	text13
  3344                           	file	"DELAY.c"
  3345                           	line	3
  3346                           	global	__size_of_delay_ms
  3347                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  3348  0029                     	
  3349                           _delay_ms:	
  3350  0598                     ;incstack = 0
  3351                           	opt	stack 7
  3352                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  3353                           	line	7
  3354                           	
  3355                           l1011:	
  3356  0598                     ;DELAY.c: 3: void delay_ms(unsigned int n);DELAY.c: 4: {;DELAY.c: 5:     unsigned int j;
                                 ;DELAY.c: 6:     char k;;DELAY.c: 7:     for(j=0;j<n;j++)
  3357                           	clrf	(delay_ms@j)
  3358  0598  01F3               	clrf	(delay_ms@j+1)
  3359  0599  01F4               	goto	l131
  3360  059A  2DB5               	
  3361                           l132:	
  3362  059B                     	line	8
  3363                           	
  3364                           l1013:	
  3365  059B                     ;DELAY.c: 8:         for(k=108;k>0;k--)
  3366                           	movlw	low(06Ch)
  3367  059B  306C               	movwf	(??_delay_ms+0)+0
  3368  059C  00F2               	movf	(??_delay_ms+0)+0,w
  3369  059D  0872               	movwf	(delay_ms@k)
  3370  059E  00F5               	
  3371                           l1015:	
  3372  059F                     	movf	((delay_ms@k)),w
  3373  059F  0875               	btfss	status,2
  3374  05A0  1D03               	goto	u271
  3375  05A1  2DA3               	goto	u270
  3376  05A2  2DA4               u271:
  3377  05A3                     	goto	l133
  3378  05A3  2DA6               u270:
  3379  05A4                     	goto	l1021
  3380  05A4  2DAF               	
  3381                           l1017:	
  3382  05A5                     	goto	l1021
  3383  05A5  2DAF               	
  3384                           l133:	
  3385  05A6                     	line	10
  3386                           ;DELAY.c: 9:         {;DELAY.c: 10:             __nop();
  3387                           	opt	asmopt_push
  3388                           	opt	asmopt_off
  3389                           	nop
  3390  05A6  0000               	opt	asmopt_pop
  3391                           	line	11
  3392                           	
  3393                           l1019:	
  3394  05A7                     ;DELAY.c: 11:         }
  3395                           	movlw	01h
  3396  05A7  3001               	subwf	(delay_ms@k),f
  3397  05A8  02F5               	movf	((delay_ms@k)),w
  3398  05A9  0875               	btfss	status,2
  3399  05AA  1D03               	goto	u281
  3400  05AB  2DAD               	goto	u280
  3401  05AC  2DAE               u281:
  3402  05AD                     	goto	l133
  3403  05AD  2DA6               u280:
  3404  05AE                     	goto	l1021
  3405  05AE  2DAF               	
  3406                           l134:	
  3407  05AF                     	
  3408                           l1021:	
  3409  05AF                     	movlw	01h
  3410  05AF  3001               	addwf	(delay_ms@j),f
  3411  05B0  07F3               	skipnc
  3412  05B1  1803               	incf	(delay_ms@j+1),f
  3413  05B2  0AF4               	movlw	0
  3414  05B3  3000               	addwf	(delay_ms@j+1),f
  3415  05B4  07F4               	
  3416                           l131:	
  3417  05B5                     	movf	(delay_ms@n+1),w
  3418  05B5  0871               	subwf	(delay_ms@j+1),w
  3419  05B6  0274               	skipz
  3420  05B7  1D03               	goto	u295
  3421  05B8  2DBB               	movf	(delay_ms@n),w
  3422  05B9  0870               	subwf	(delay_ms@j),w
  3423  05BA  0273               u295:
  3424  05BB                     	skipc
  3425  05BB  1C03               	goto	u291
  3426  05BC  2DBE               	goto	u290
  3427  05BD  2DBF               u291:
  3428  05BE                     	goto	l1013
  3429  05BE  2D9B               u290:
  3430  05BF                     	goto	l136
  3431  05BF  2DC0               	
  3432                           l135:	
  3433  05C0                     	line	12
  3434                           	
  3435                           l136:	
  3436  05C0                     	return
  3437  05C0  0008               	opt stack 0
  3438                           GLOBAL	__end_of_delay_ms
  3439                           	__end_of_delay_ms:
  3440  05C1                     	signat	_delay_ms,4217
  3441                           	global	_AD_SUB
  3442                           
  3443 ;; *************** function _AD_SUB *****************
  3444 ;; Defined at:
  3445 ;;		line 33 in file "AD.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  k               1    wreg     unsigned char 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  k               1    5[COMMON] unsigned char 
  3450 ;;  i               1    0        unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         1       0       0       0       0
  3462 ;;      Temps:          4       0       0       0       0
  3463 ;;      Totals:         5       0       0       0       0
  3464 ;;Total ram usage:        5 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    1
  3467 ;; This function calls:
  3468 ;;		_delay_us
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;;		_ButtonDetect
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3475                           	file	"AD.c"
  3476                           	line	33
  3477                           global __ptext14
  3478                           __ptext14:	;psect for function _AD_SUB
  3479  05F8                     psect	text14
  3480                           	file	"AD.c"
  3481                           	line	33
  3482                           	global	__size_of_AD_SUB
  3483                           	__size_of_AD_SUB	equ	__end_of_AD_SUB-_AD_SUB
  3484  003D                     	
  3485                           _AD_SUB:	
  3486  05F8                     ;incstack = 0
  3487                           	opt	stack 5
  3488                           ; Regs used in _AD_SUB: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3489                           ;AD_SUB@k stored from wreg
  3490                           	movwf	(AD_SUB@k)
  3491  05F8  00F5               	line	36
  3492                           	
  3493                           l1075:	
  3494  05F9                     ;AD.c: 33: void AD_SUB(char k);AD.c: 34: {;AD.c: 35:     char i;;AD.c: 36:     ADCON0=0b
                                 01000000;
  3495                           	movlw	low(040h)
  3496  05F9  3040               	bcf	status, 5	;RP0=0, select bank0
  3497  05FA  1283               	bcf	status, 6	;RP1=0, select bank0
  3498  05FB  1303               	movwf	(31)	;volatile
  3499  05FC  009F               	line	37
  3500                           	
  3501                           l1077:	
  3502  05FD                     ;AD.c: 37:     ADCON0 |=(k<<2);
  3503                           	movf	(AD_SUB@k),w	;volatile
  3504  05FD  0875               	movwf	(??_AD_SUB+0)+0
  3505  05FE  00F1               	movlw	(02h)-1
  3506  05FF  3001               u315:
  3507  0600                     	clrc
  3508  0600  1003               	rlf	(??_AD_SUB+0)+0,f
  3509  0601  0DF1               	addlw	-1
  3510  0602  3EFF               	skipz
  3511  0603  1D03               	goto	u315
  3512  0604  2E00               	clrc
  3513  0605  1003               	rlf	(??_AD_SUB+0)+0,w
  3514  0606  0D71               	movwf	(??_AD_SUB+1)+0
  3515  0607  00F2               	movf	(??_AD_SUB+1)+0,w
  3516  0608  0872               	iorwf	(31),f	;volatile
  3517  0609  049F               	line	38
  3518                           	
  3519                           l1079:	
  3520  060A                     ;AD.c: 38:     ADCON0bits.ADON=1;
  3521                           	bsf	(31),0	;volatile
  3522  060A  141F               	line	39
  3523                           	
  3524                           l1081:	
  3525  060B                     ;AD.c: 39:     delay_us(0);
  3526                           	movlw	low(0)
  3527  060B  3000               	fcall	_delay_us
  3528  060C  120A  118A  24DD  120A  118A  	line	40
  3529                           	
  3530                           l1083:	
  3531  0611                     ;AD.c: 40:     ADCON0bits.GO=1;
  3532                           	bcf	status, 5	;RP0=0, select bank0
  3533  0611  1283               	bcf	status, 6	;RP1=0, select bank0
  3534  0612  1303               	bsf	(31),1	;volatile
  3535  0613  149F               	line	41
  3536                           ;AD.c: 41:     while(ADCON0bits.GO==1);
  3537                           	goto	l177
  3538  0614  2E15               	
  3539                           l178:	
  3540  0615                     	
  3541                           l177:	
  3542  0615                     	btfsc	(31),1	;volatile
  3543  0615  189F               	goto	u321
  3544  0616  2E18               	goto	u320
  3545  0617  2E19               u321:
  3546  0618                     	goto	l177
  3547  0618  2E15               u320:
  3548  0619                     	
  3549                           l179:	
  3550  0619                     	line	42
  3551                           ;AD.c: 42:     PIR1bits.ADIF=0;
  3552                           	bcf	(12),6	;volatile
  3553  0619  130C               	line	43
  3554                           ;AD.c: 43:     ADCON0bits.GO=0;
  3555                           	bcf	(31),1	;volatile
  3556  061A  109F               	line	44
  3557                           ;AD.c: 44:     ADCON0bits.ADON=0;
  3558                           	bcf	(31),0	;volatile
  3559  061B  101F               	line	45
  3560                           	
  3561                           l1085:	
  3562  061C                     ;AD.c: 45:     ADresult= (ADRESH<<8)|ADRESL;
  3563                           	bsf	status, 5	;RP0=1, select bank1
  3564  061C  1683               	bcf	status, 6	;RP1=0, select bank1
  3565  061D  1303               	movf	(158)^080h,w	;volatile
  3566  061E  081E               	movwf	(??_AD_SUB+0)+0
  3567  061F  00F1               	clrf	(??_AD_SUB+0)+0+1
  3568  0620  01F2               	bcf	status, 5	;RP0=0, select bank0
  3569  0621  1283               	bcf	status, 6	;RP1=0, select bank0
  3570  0622  1303               	movf	(30),w	;volatile
  3571  0623  081E               	movwf	(??_AD_SUB+2)+0
  3572  0624  00F3               	clrf	(??_AD_SUB+2)+0+1
  3573  0625  01F4               	movf	(??_AD_SUB+2)+0,w
  3574  0626  0873               	movwf	(??_AD_SUB+2)+1
  3575  0627  00F4               	clrf	(??_AD_SUB+2)+0
  3576  0628  01F3               	movf	0+(??_AD_SUB+0)+0,w
  3577  0629  0871               	iorwf	0+(??_AD_SUB+2)+0,w
  3578  062A  0473               	movwf	(_ADresult)
  3579  062B  00A4               	movf	1+(??_AD_SUB+0)+0,w
  3580  062C  0872               	iorwf	1+(??_AD_SUB+2)+0,w
  3581  062D  0474               	movwf	1+(_ADresult)
  3582  062E  00A5               	clrf	(_ADresult)+2
  3583  062F  01A6               	btfsc	(_ADresult)+1,7
  3584  0630  1BA5               	decf	2+(_ADresult),f
  3585  0631  03A6               	movf	(_ADresult)+2,w
  3586  0632  0826               	movwf	3+(_ADresult)
  3587  0633  00A7               	line	47
  3588                           	
  3589                           l180:	
  3590  0634                     	return
  3591  0634  0008               	opt stack 0
  3592                           GLOBAL	__end_of_AD_SUB
  3593                           	__end_of_AD_SUB:
  3594  0635                     	signat	_AD_SUB,4217
  3595                           	global	_delay_us
  3596                           
  3597 ;; *************** function _delay_us *****************
  3598 ;; Defined at:
  3599 ;;		line 13 in file "DELAY.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  n               1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  n               1    0[COMMON] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       0       0       0       0
  3614 ;;      Locals:         1       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0
  3616 ;;      Totals:         1       0       0       0       0
  3617 ;;Total ram usage:        1 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_LCD_en_command
  3623 ;;		_LCD_en_dat
  3624 ;;		_AD_SUB
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3628                           	file	"DELAY.c"
  3629                           	line	13
  3630                           global __ptext15
  3631                           __ptext15:	;psect for function _delay_us
  3632  04DD                     psect	text15
  3633                           	file	"DELAY.c"
  3634                           	line	13
  3635                           	global	__size_of_delay_us
  3636                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  3637  000D                     	
  3638                           _delay_us:	
  3639  04DD                     ;incstack = 0
  3640                           	opt	stack 4
  3641                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  3642                           ;delay_us@n stored from wreg
  3643                           	movwf	(delay_us@n)
  3644  04DD  00F0               	line	16
  3645                           	
  3646                           l1023:	
  3647  04DE                     ;DELAY.c: 13: void delay_us(unsigned char n);DELAY.c: 14: {;DELAY.c: 16:     __nop();
  3648                           	opt	asmopt_push
  3649                           	opt	asmopt_off
  3650                           	nop
  3651  04DE  0000               	opt	asmopt_pop
  3652                           	line	17
  3653                           ;DELAY.c: 17:     while(n>0)
  3654                           	goto	l1027
  3655  04DF  2CE3               	
  3656                           l140:	
  3657  04E0                     	line	19
  3658                           	
  3659                           l1025:	
  3660  04E0                     ;DELAY.c: 18:     {;DELAY.c: 19:         n--;
  3661                           	movlw	01h
  3662  04E0  3001               	subwf	(delay_us@n),f
  3663  04E1  02F0               	goto	l1027
  3664  04E2  2CE3               	line	20
  3665                           ;DELAY.c: 20:     }
  3666                           	
  3667                           l139:	
  3668  04E3                     	line	17
  3669                           	
  3670                           l1027:	
  3671  04E3                     ;DELAY.c: 17:     while(n>0)
  3672                           	movf	((delay_us@n)),w
  3673  04E3  0870               	btfss	status,2
  3674  04E4  1D03               	goto	u301
  3675  04E5  2CE7               	goto	u300
  3676  04E6  2CE8               u301:
  3677  04E7                     	goto	l1025
  3678  04E7  2CE0               u300:
  3679  04E8                     	goto	l142
  3680  04E8  2CE9               	
  3681                           l141:	
  3682  04E9                     	line	22
  3683                           	
  3684                           l142:	
  3685  04E9                     	return
  3686  04E9  0008               	opt stack 0
  3687                           GLOBAL	__end_of_delay_us
  3688                           	__end_of_delay_us:
  3689  04EA                     	signat	_delay_us,4217
  3690                           	global	_BUTTONMCUInit
  3691                           
  3692 ;; *************** function _BUTTONMCUInit *****************
  3693 ;; Defined at:
  3694 ;;		line 6 in file "BUTTON.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0
  3710 ;;      Temps:          1       0       0       0       0
  3711 ;;      Totals:         1       0       0       0       0
  3712 ;;Total ram usage:        1 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3721                           	file	"BUTTON.c"
  3722                           	line	6
  3723                           global __ptext16
  3724                           __ptext16:	;psect for function _BUTTONMCUInit
  3725  04B5                     psect	text16
  3726                           	file	"BUTTON.c"
  3727                           	line	6
  3728                           	global	__size_of_BUTTONMCUInit
  3729                           	__size_of_BUTTONMCUInit	equ	__end_of_BUTTONMCUInit-_BUTTONMCUInit
  3730  0008                     	
  3731                           _BUTTONMCUInit:	
  3732  04B5                     ;incstack = 0
  3733                           	opt	stack 7
  3734                           ; Regs used in _BUTTONMCUInit: [wreg+status,2+status,0]
  3735                           	line	8
  3736                           	
  3737                           l1141:	
  3738  04B5                     ;BUTTON.c: 8:     TRISBbits.TRISB7=1;
  3739                           	bsf	status, 5	;RP0=1, select bank1
  3740  04B5  1683               	bcf	status, 6	;RP1=0, select bank1
  3741  04B6  1303               	bsf	(134)^080h,7	;volatile
  3742  04B7  1786               	line	9
  3743                           	
  3744                           l1143:	
  3745  04B8                     ;BUTTON.c: 9:     OPTION_REG&=0x7f;
  3746                           	movlw	low(07Fh)
  3747  04B8  307F               	movwf	(??_BUTTONMCUInit+0)+0
  3748  04B9  00F0               	movf	(??_BUTTONMCUInit+0)+0,w
  3749  04BA  0870               	andwf	(129)^080h,f	;volatile
  3750  04BB  0581               	line	10
  3751                           	
  3752                           l216:	
  3753  04BC                     	return
  3754  04BC  0008               	opt stack 0
  3755                           GLOBAL	__end_of_BUTTONMCUInit
  3756                           	__end_of_BUTTONMCUInit:
  3757  04BD                     	signat	_BUTTONMCUInit,89
  3758                           	global	_AD_MCU_INIT
  3759                           
  3760 ;; *************** function _AD_MCU_INIT *****************
  3761 ;; Defined at:
  3762 ;;		line 48 in file "AD.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3776 ;;      Params:         0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  3789                           	file	"AD.c"
  3790                           	line	48
  3791                           global __ptext17
  3792                           __ptext17:	;psect for function _AD_MCU_INIT
  3793  04D0                     psect	text17
  3794                           	file	"AD.c"
  3795                           	line	48
  3796                           	global	__size_of_AD_MCU_INIT
  3797                           	__size_of_AD_MCU_INIT	equ	__end_of_AD_MCU_INIT-_AD_MCU_INIT
  3798  000D                     	
  3799                           _AD_MCU_INIT:	
  3800  04D0                     ;incstack = 0
  3801                           	opt	stack 7
  3802                           ; Regs used in _AD_MCU_INIT: [wreg]
  3803                           	line	51
  3804                           	
  3805                           l1139:	
  3806  04D0                     ;AD.c: 51:  TRISA=0b00001111;
  3807                           	movlw	low(0Fh)
  3808  04D0  300F               	bsf	status, 5	;RP0=1, select bank1
  3809  04D1  1683               	bcf	status, 6	;RP1=0, select bank1
  3810  04D2  1303               	movwf	(133)^080h	;volatile
  3811  04D3  0085               	line	52
  3812                           ;AD.c: 52:  ANSEL=0b00001111;
  3813                           	movlw	low(0Fh)
  3814  04D4  300F               	bsf	status, 5	;RP0=1, select bank3
  3815  04D5  1683               	bsf	status, 6	;RP1=1, select bank3
  3816  04D6  1703               	movwf	(392)^0180h	;volatile
  3817  04D7  0088               	line	55
  3818                           ;AD.c: 55:     ADCON1=0b10000000;
  3819                           	movlw	low(080h)
  3820  04D8  3080               	bsf	status, 5	;RP0=1, select bank1
  3821  04D9  1683               	bcf	status, 6	;RP1=0, select bank1
  3822  04DA  1303               	movwf	(159)^080h	;volatile
  3823  04DB  009F               	line	56
  3824                           	
  3825                           l183:	
  3826  04DC                     	return
  3827  04DC  0008               	opt stack 0
  3828                           GLOBAL	__end_of_AD_MCU_INIT
  3829                           	__end_of_AD_MCU_INIT:
  3830  04DD                     	signat	_AD_MCU_INIT,89
  3831                           global	___latbits
  3832                           ___latbits	equ	2
  3833  0002                     	global	btemp
  3834                           	btemp set 07Eh
  3835  007E                     
  3836                           	DABS	1,126,2	;btemp
  3837                           	global	wtemp0
  3838                           	wtemp0 set btemp+0
  3839  007E                     	end


Data Sizes:
    Strings     26
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@s	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[4]), STR_2(CODE[9]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCD_write_string
    _LCD_write_string->_LCD_set_xy
    _LCD_set_xy->_LCD_en_command
    _LCD_en_dat->_delay_us
    _LCD_Busy->_LCD_Read_dat
    _LCD_init->_LCD_en_command
    _InitScrn->_LCD_en_command
    _LCD_en_command->_delay_ms
    _ButtonDetect->_AD_SUB
    _isBUTTONOn->_delay_ms
    _AD_SUB->_delay_us

Critical Paths under _main in BANK0

    _main->_LCD_write_string

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4489
                                              1 BANK0      2     2      0
                        _AD_MCU_INIT
                             _AD_SUB
                      _BUTTONMCUInit
                       _ButtonDetect
                           _InitScrn
                       _LCD_MCU_init
                           _LCD_init
                   _LCD_write_string
                       _LED_MCU_INIT
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LED_MCU_INIT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     4     2      2    1569
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                           _LCD_Busy
                         _LCD_en_dat
                         _LCD_set_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_set_xy                                           4     3      1     759
                                              7 COMMON     4     3      1
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (2) _LCD_en_dat                                           1     1      0      45
                                              1 COMMON     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             2     2      0      46
                                              2 COMMON     2     2      0
                       _LCD_Read_dat
 ---------------------------------------------------------------------------------
 (3) _LCD_Read_dat                                         2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0     593
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (1) _LCD_MCU_init                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitScrn                                             0     0      0    1141
                     _LCD_en_command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_en_command                                       1     1      0     593
                                              6 COMMON     1     1      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _ButtonDetect                                         0     0      0     593
                             _AD_SUB
                         _isBUTTONOn
 ---------------------------------------------------------------------------------
 (2) _isBUTTONOn                                           0     0      0     548
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     548
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _AD_SUB                                               6     6      0      45
                                              1 COMMON     5     5      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BUTTONMCUInit                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AD_MCU_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_MCU_INIT
   _AD_SUB
     _delay_us
   _BUTTONMCUInit
   _ButtonDetect
     _AD_SUB
       _delay_us
     _isBUTTONOn
       _delay_ms
   _InitScrn
     _LCD_en_command
       _delay_ms
       _delay_us
     _delay_ms
   _LCD_MCU_init
   _LCD_init
     _LCD_en_command
       _delay_ms
       _delay_us
   _LCD_write_string
     _LCD_Busy
       _LCD_Read_dat
     _LCD_en_dat
       _delay_us
     _LCD_set_xy
       _LCD_en_command
         _delay_ms
         _delay_us
   _LED_MCU_INIT
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri May 15 09:18:38 2020

            ?_LED_MCU_INIT 0070                          pc 0002              _BUTTONMCUInit 04B5  
              __CFG_CP$OFF 0000                         l60 0757                         l53 04CF  
                       l61 0756                         l70 07D8                         l62 0751  
                       l63 0753                         l64 07D6                         l65 0774  
                       l66 07B1                         l58 06D4                         l67 07D0  
                       l59 0758                         l68 07D7                         l93 06B4  
                       l69 07D8                         l96 0597                         l99 052B  
  __size_of_LCD_en_command 0042                         fsr 0004                __CFG_LVP$ON 0000  
              ?_LCD_en_dat 0070                        l102 0542                        l110 0665  
                      l111 064A                        l112 0672                        l105 054F  
                      l113 0672                        l122 0508                        l106 0555  
                      l131 05B5                        l123 0516                        l107 055C  
                      l140 04E0                        l132 059B                        l220 0575  
                      l116 04F7                        l124 0518                        l141 04E9  
                      l133 05A6                        l221 0578                        l125 0517  
                      l142 04E9                        l134 05AF                        l126 0518  
                      l135 05C0                        l119 0507                        l216 04BC  
                      l136 05C0                        l224 05CB                        l225 05F7  
                      l226 05F7                        l139 04E3                        l219 0576  
                      l227 05F6                        l180 0634                        l228 05F5  
                      l183 04DC                        l177 0615                        l178 0615  
                      l179 0619                        u300 04E8                        u301 04E7  
                      u320 0619                        u400 0671                        u321 0618  
                      u401 0670                        u330 0549                        u410 06E1  
                      u315 0600                        u331 0548                        u411 06DF  
                      u340 0514                        u500 0764                        u420 06E2  
                      u341 0513                        u501 0763                        u270 05A4  
                      u350 0563                        u510 076A                        u430 06E7  
                      u271 05A3                        u351 0562                        u511 0769  
                      u431 06E6                        u280 05AE                        u360 0572  
                      u520 0794                        u440 0701                        u281 05AD  
                      u361 0571                        u521 0793                        u441 0700  
                      u290 05BF                        u370 05C8                        u450 0713  
             __CFG_CPD$OFF 0000                        u291 05BE                        u371 05C7  
                      u451 0712                        u443 06FD                        u380 05D5  
                      u460 0735                        u381 05D4                        u461 0734  
                      u453 070F                        u390 05EF                        u470 074F  
                      u295 05BB                        u391 05EE                        u471 074E  
                      u480 075E                        u393 05EB                        u481 075C  
                      u473 074B                        u465 0731                        u490 075F  
                      _U_A 0032                        fsr0 0004                        indf 0000  
              ?_LCD_set_xy 0077           LCD_Busy@busyFlag 0073               __CFG_IESO$ON 0000  
             __CFG_FOSC$HS 0000              ?_LCD_Read_dat 0070                       l1011 0598  
                     l1021 05AF                       l1013 059B                       l1101 054F  
                     l1023 04DE                       l1015 059F                       l1111 055D  
                     l1031 0679                       l1103 0555                       l1025 04E0  
                     l1017 05A5                       l1113 0563                       l1121 0576  
                     l1041 0693                       l1033 067B                       l1105 0508  
                     l1201 0765                       l1027 04E3                       l1019 05A7  
                     l1123 0578                       l1115 056C                       l1051 06B1  
                     l1043 0699                       l1035 0681                       l1131 04F3  
                     l1107 0510                       l1211 078F                       l1203 076A  
                     l1141 04B5                       l1117 0572                       l1045 069F  
                     l1037 0687                       l1029 0674                       l1133 04F4  
                     l1061 0533                       l1053 052C                       l1109 0515  
                     l1125 04C5                       l1213 0794                       l1205 0774  
                     l1143 04B8                       l1119 0574                       l1151 05CB  
                     l1047 06A2                       l1039 068D                       l1127 04EA  
                     l1135 0579                       l1071 0540                       l1063 053A  
                     l1055 0530                       l1215 07B1                       l1207 0780  
                     l1081 060B                       l1153 05D5                       l1145 05C1  
                     l1049 06AB                       l1137 04F8                       l1129 04F0  
                     l1073 0542                       l1065 053B                       l1057 0531  
                     l1161 064A                       l1217 07D0                       l1209 078C  
                     l1139 04D0                       l1083 0611                       l1075 05F9  
                     l1155 05DB                       l1147 05C9                       l1067 053C  
                     l1059 0532                       l1091 0521                       l1163 0654  
                     l1219 07D4                       l1171 06C9                       l1085 061C  
                     l1077 05FD                       l1157 05EF                       l1149 05CA  
                     l1069 053F                       l1093 0522                       l1165 0660  
                     l1181 06ED                       l1173 06CE                       l1079 060A  
                     l1095 0528                       l1087 051A                       l1167 0665  
                     l1159 0638                       l1191 0735                       l1183 0701  
                     l1175 06D4                       l1089 051F                       l1097 0544  
                     l1193 073B                       l1185 0713                       l1177 06D9  
                     l1169 06B5                       l1099 0549                       l1195 074F  
                     l1187 071B                       l1179 06E7                       l1189 0721  
                     l1197 0758                       l1199 0764             ??_LCD_MCU_init 0070  
                     STR_1 001F                       STR_2 0012                       STR_3 001B  
                     STR_4 0009                       _U_BW 0030                       _U_GW 002E  
                     _U_QW 0031                       _U_SW 002F               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 06B5                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0000              __CFG_MCLRE$ON 0000  
               _DetectFlag 0028             ??_LED_MCU_INIT 0070             ?_BUTTONMCUInit 0070  
         __end_of_LCD_Busy 0519           __end_of_LCD_init 0598                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _ANSEL 0188                      _PORTD 0008  
     __size_of_AD_MCU_INIT 000D                      _TRISA 0085                      _TRISD 0088  
                    _TRISE 0089              ?_ButtonDetect 0070             ??_LCD_Read_dat 0070  
          LCD_Read_dat@dat 0071                      pclath 000A                      status 0003  
                    wtemp0 007E        __size_of_LCD_en_dat 0013        __size_of_LCD_set_xy 001A  
          __initialization 07DB               __end_of_main 07DB           __end_of_InitScrn 0508  
              LCD_set_xy@x 007A                LCD_set_xy@y 0077          ?_LCD_write_string 007B  
                   ??_main 0037             ??_ButtonDetect 0076         ??_LCD_write_string 007D  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E                     _ANSELH 0189                     _AD_SUB 05F8  
                   _ADtemp 0020           __end_of_delay_ms 05C1           __end_of_delay_us 04EA  
           __CFG_PWRTE$OFF 0000            ??_BUTTONMCUInit 0070             _LCD_en_command 0673  
     __end_of_LCD_MCU_init 04F8       __end_of_LED_MCU_INIT 04D0    __end_of__initialization 07FC  
                ?_LCD_Busy 0070                  ?_LCD_init 0070       __end_of_LCD_Read_dat 0543  
   __end_of_LCD_en_command 06B5             __pcstackCOMMON 0070               __pidataBANK0 04B1  
             ??_LCD_en_dat 0071               ??_LCD_set_xy 0078                 _isBUTTONOn 055D  
                  AD_SUB@k 0075                    ?_AD_SUB 0070                 __pbssBANK0 0020  
                ?_InitScrn 0070                 ??_LCD_Busy 0072                 ??_LCD_init 0077  
     __end_of_ButtonDetect 05F8         __end_of_LCD_en_dat 052C                 __pmaintext 06B5  
          ?_LCD_en_command 0070         __end_of_LCD_set_xy 055D                 _flag_ph_st 002C  
                ?_delay_ms 0070                  ?_delay_us 0070                 __stringtab 0003  
          __size_of_AD_SUB 003D                 ??_InitScrn 0077      __size_of_LCD_MCU_init 000E  
            ??_AD_MCU_INIT 0070                    __ptext1 04C5                    __ptext2 0635  
                  __ptext3 0543                    __ptext4 0519                    __ptext5 0508  
                  __ptext6 052C                    __ptext7 0579                    __ptext8 04EA  
                  __ptext9 04F8      __size_of_LED_MCU_INIT 000B                 ??_delay_ms 0072  
               ??_delay_us 0070                ?_isBUTTONOn 0070                    clrloop0 04BE  
     end_of_initialization 07FC  __size_of_LCD_write_string 003E               _LCD_MCU_init 04EA  
    __size_of_LCD_Read_dat 0017               _isPhPositive 002A              LCD_en_dat@dat 0071  
             _LED_MCU_INIT 04C5                  _PORTBbits 0006                  _PORTCbits 0007  
                _PORTEbits 0009                  _TRISBbits 0086                  _TRISCbits 0087  
      __end_of_AD_MCU_INIT 04DD               _LCD_Read_dat 052C      __size_of_ButtonDetect 0037  
           __end_of_AD_SUB 0635          __size_of_LCD_Busy 0011          __size_of_LCD_init 001F  
    __end_of_BUTTONMCUInit 04BD        __size_of_isBUTTONOn 001C        start_initialization 07DB  
             _ButtonDetect 05C1                   ??_AD_SUB 0071           ??_LCD_en_command 0076  
        __size_of_InitScrn 0010                __pdataBANK0 0032                _AD_MCU_INIT 04D0  
                ___latbits 0002              __pcstackBANK0 0036          __size_of_delay_ms 0029  
        __size_of_delay_us 000D          LCD_set_xy@address 0079           _LCD_write_string 0635  
                __pstrings 0003                _flag_br_end 002B                _flag_ph_end 0029  
             ??_isBUTTONOn 0076                   _LCD_Busy 0508                  delay_ms@j 0073  
                delay_ms@k 0075                  delay_ms@n 0070                  delay_us@n 0070  
                 _LCD_init 0579                  clear_ram0 04BD                   _ADresult 0024  
                 _PIR1bits 000C         __end_of_isBUTTONOn 0579                 _ADCON0bits 001F  
              __stringbase 0008                   _InitScrn 04F8              _flag_but_once 002D  
       __end_of__stringtab 0009                   _delay_ms 0598                   _delay_us 04DD  
                 __ptext10 0673                   __ptext11 05C1                   __ptext12 055D  
                 __ptext13 0598                   __ptext14 05F8                   __ptext15 04DD  
                 __ptext16 04B5                   __ptext17 04D0          __CFG_BOR4V$BOR40V 0000  
            __size_of_main 0126      LCD_en_command@command 0076   __end_of_LCD_write_string 0673  
             ?_AD_MCU_INIT 0070                 _LCD_en_dat 0519                 _LCD_set_xy 0543  
   __size_of_BUTTONMCUInit 0008          LCD_write_string@X 0036          LCD_write_string@Y 007B  
        LCD_write_string@s 007C                  stringcode 0003                 _OPTION_REG 0081  
                 stringdir 0003                   stringtab 0003              ?_LCD_MCU_init 0070  
