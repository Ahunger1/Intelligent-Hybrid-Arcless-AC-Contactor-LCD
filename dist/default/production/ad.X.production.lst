

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri May 15 09:18:19 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "E:\Program\XC8\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "E:\Program\XC8\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "E:\Program\XC8\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "E:\Program\XC8\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "E:\Program\XC8\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "E:\Program\XC8\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "E:\Program\XC8\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "E:\Program\XC8\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "E:\Program\XC8\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "E:\Program\XC8\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "E:\Program\XC8\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "E:\Program\XC8\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "E:\Program\XC8\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "E:\Program\XC8\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "E:\Program\XC8\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "E:\Program\XC8\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "E:\Program\XC8\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "E:\Program\XC8\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "E:\Program\XC8\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "E:\Program\XC8\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "E:\Program\XC8\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "E:\Program\XC8\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "E:\Program\XC8\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "E:\Program\XC8\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "E:\Program\XC8\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "E:\Program\XC8\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "E:\Program\XC8\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "E:\Program\XC8\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "E:\Program\XC8\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "E:\Program\XC8\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "E:\Program\XC8\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "E:\Program\XC8\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "E:\Program\XC8\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "E:\Program\XC8\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "E:\Program\XC8\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "E:\Program\XC8\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "E:\Program\XC8\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "E:\Program\XC8\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "E:\Program\XC8\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "E:\Program\XC8\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "E:\Program\XC8\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "E:\Program\XC8\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "E:\Program\XC8\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "E:\Program\XC8\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "E:\Program\XC8\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "E:\Program\XC8\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "E:\Program\XC8\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "E:\Program\XC8\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "E:\Program\XC8\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "E:\Program\XC8\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "E:\Program\XC8\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "E:\Program\XC8\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "E:\Program\XC8\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "E:\Program\XC8\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "E:\Program\XC8\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "E:\Program\XC8\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "E:\Program\XC8\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "E:\Program\XC8\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "E:\Program\XC8\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "E:\Program\XC8\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "E:\Program\XC8\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "E:\Program\XC8\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "E:\Program\XC8\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "E:\Program\XC8\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "E:\Program\XC8\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "E:\Program\XC8\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "E:\Program\XC8\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "E:\Program\XC8\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "E:\Program\XC8\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "E:\Program\XC8\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "E:\Program\XC8\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "E:\Program\XC8\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "E:\Program\XC8\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "E:\Program\XC8\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "E:\Program\XC8\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "E:\Program\XC8\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "E:\Program\XC8\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "E:\Program\XC8\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_AD_MCU_INIT
  1024                           	FNCALL	_main,_AD_SUB
  1025                           	FNCALL	_main,_BUTTONMCUInit
  1026                           	FNCALL	_main,_ButtonDetect
  1027                           	FNCALL	_main,_InitScrn
  1028                           	FNCALL	_main,_LCD_MCU_init
  1029                           	FNCALL	_main,_LCD_init
  1030                           	FNCALL	_main,_LCD_write_string
  1031                           	FNCALL	_main,_LED_MCU_INIT
  1032                           	FNCALL	_main,_delay_ms
  1033                           	FNCALL	_LCD_write_string,_LCD_Busy
  1034                           	FNCALL	_LCD_write_string,_LCD_en_dat
  1035                           	FNCALL	_LCD_write_string,_LCD_set_xy
  1036                           	FNCALL	_LCD_set_xy,_LCD_en_command
  1037                           	FNCALL	_LCD_en_dat,_delay_us
  1038                           	FNCALL	_LCD_Busy,_LCD_Read_dat
  1039                           	FNCALL	_LCD_init,_LCD_en_command
  1040                           	FNCALL	_InitScrn,_LCD_en_command
  1041                           	FNCALL	_InitScrn,_delay_ms
  1042                           	FNCALL	_LCD_en_command,_delay_ms
  1043                           	FNCALL	_LCD_en_command,_delay_us
  1044                           	FNCALL	_ButtonDetect,_AD_SUB
  1045                           	FNCALL	_ButtonDetect,_isBUTTONOn
  1046                           	FNCALL	_isBUTTONOn,_delay_ms
  1047                           	FNCALL	_AD_SUB,_delay_us
  1048                           	FNROOT	_main
  1049                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1050                           global __pidataBANK0
  1051                           __pidataBANK0:
  1052  04B0                     	file	"./AD.h"
  1053                           	line	6
  1054                           
  1055                           ;initializer for _U_A
  1056                           	retlw	01h
  1057  04B0  3401               	retlw	02h
  1058  04B1  3402               	retlw	03h
  1059  04B2  3403               	retlw	04h
  1060  04B3  3404               	global	_ADtemp
  1061                           	global	_ADresult
  1062                           	global	_flag_ph_end
  1063                           	global	_isPhPositive
  1064                           	global	_flag_br_end
  1065                           	global	_flag_ph_st
  1066                           	global	_flag_but_once
  1067                           	global	_PORTBbits
  1068                           _PORTBbits	set	0x6
  1069  0006                     	global	_ADRESH
  1070                           _ADRESH	set	0x1E
  1071  001E                     	global	_PIR1bits
  1072                           _PIR1bits	set	0xC
  1073  000C                     	global	_ADCON0bits
  1074                           _ADCON0bits	set	0x1F
  1075  001F                     	global	_ADCON0
  1076                           _ADCON0	set	0x1F
  1077  001F                     	global	_PORTD
  1078                           _PORTD	set	0x8
  1079  0008                     	global	_PORTEbits
  1080                           _PORTEbits	set	0x9
  1081  0009                     	global	_PORTCbits
  1082                           _PORTCbits	set	0x7
  1083  0007                     	global	_OPTION_REG
  1084                           _OPTION_REG	set	0x81
  1085  0081                     	global	_TRISBbits
  1086                           _TRISBbits	set	0x86
  1087  0086                     	global	_ADCON1
  1088                           _ADCON1	set	0x9F
  1089  009F                     	global	_TRISA
  1090                           _TRISA	set	0x85
  1091  0085                     	global	_ADRESL
  1092                           _ADRESL	set	0x9E
  1093  009E                     	global	_TRISD
  1094                           _TRISD	set	0x88
  1095  0088                     	global	_TRISE
  1096                           _TRISE	set	0x89
  1097  0089                     	global	_TRISCbits
  1098                           _TRISCbits	set	0x87
  1099  0087                     	global	_ANSELH
  1100                           _ANSELH	set	0x189
  1101  0189                     	global	_ANSEL
  1102                           _ANSEL	set	0x188
  1103  0188                     psect	strings,class=STRING,delta=2,noexec
  1104                           global __pstrings
  1105                           __pstrings:
  1106  0003                     stringtab:
  1107  0003                     	global    __stringtab
  1108                           __stringtab:
  1109  0003                     ;	String table - string pointers are 1 byte each
  1110                           stringcode:stringdir:
  1111  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1112  0003  3000               movwf pclath
  1113  0004  008A               movf fsr,w
  1114  0005  0804               incf fsr
  1115  0006  0A84               	addwf pc
  1116  0007  0782               	global __stringbase
  1117                           __stringbase:
  1118  0008                     	retlw	0
  1119  0008  3400               psect	strings
  1120                           	global    __end_of__stringtab
  1121                           __end_of__stringtab:
  1122  0009                     	
  1123                           STR_4:	
  1124  0009                     	retlw	78	;'N'
  1125  0009  344E               	retlw	69	;'E'
  1126  000A  3445               	retlw	71	;'G'
  1127  000B  3447               	retlw	65	;'A'
  1128  000C  3441               	retlw	84	;'T'
  1129  000D  3454               	retlw	73	;'I'
  1130  000E  3449               	retlw	86	;'V'
  1131  000F  3456               	retlw	69	;'E'
  1132  0010  3445               	retlw	0
  1133  0011  3400               psect	strings
  1134                           	
  1135                           STR_2:	
  1136  0012                     	retlw	80	;'P'
  1137  0012  3450               	retlw	79	;'O'
  1138  0013  344F               	retlw	83	;'S'
  1139  0014  3453               	retlw	73	;'I'
  1140  0015  3449               	retlw	84	;'T'
  1141  0016  3454               	retlw	73	;'I'
  1142  0017  3449               	retlw	86	;'V'
  1143  0018  3456               	retlw	69	;'E'
  1144  0019  3445               	retlw	0
  1145  001A  3400               psect	strings
  1146                           	
  1147                           STR_3:	
  1148  001B                     	retlw	97	;'a'
  1149  001B  3461               	retlw	99	;'c'
  1150  001C  3463               	retlw	98	;'b'
  1151  001D  3462               	retlw	0
  1152  001E  3400               psect	strings
  1153                           	
  1154                           STR_1:	
  1155  001F                     	retlw	97	;'a'
  1156  001F  3461               	retlw	98	;'b'
  1157  0020  3462               	retlw	99	;'c'
  1158  0021  3463               	retlw	0
  1159  0022  3400               psect	strings
  1160                           ; #config settings
  1161                           global __CFG_FOSC$HS
  1162                           __CFG_FOSC$HS equ 0x0
  1163  0000                     global __CFG_WDTE$OFF
  1164                           __CFG_WDTE$OFF equ 0x0
  1165  0000                     global __CFG_PWRTE$OFF
  1166                           __CFG_PWRTE$OFF equ 0x0
  1167  0000                     global __CFG_MCLRE$ON
  1168                           __CFG_MCLRE$ON equ 0x0
  1169  0000                     global __CFG_CP$OFF
  1170                           __CFG_CP$OFF equ 0x0
  1171  0000                     global __CFG_CPD$OFF
  1172                           __CFG_CPD$OFF equ 0x0
  1173  0000                     global __CFG_BOREN$ON
  1174                           __CFG_BOREN$ON equ 0x0
  1175  0000                     global __CFG_IESO$ON
  1176                           __CFG_IESO$ON equ 0x0
  1177  0000                     global __CFG_FCMEN$ON
  1178                           __CFG_FCMEN$ON equ 0x0
  1179  0000                     global __CFG_LVP$ON
  1180                           __CFG_LVP$ON equ 0x0
  1181  0000                     global __CFG_BOR4V$BOR40V
  1182                           __CFG_BOR4V$BOR40V equ 0x0
  1183  0000                     global __CFG_WRT$OFF
  1184                           __CFG_WRT$OFF equ 0x0
  1185  0000                     	file	"C:\Users\tonyj\AppData\Local\Temp\s2mk."
  1186                           	line	#
  1187                           psect cinit,class=CODE,delta=2
  1188                           global start_initialization
  1189                           start_initialization:
  1190  07DB                     
  1191                           global __initialization
  1192                           __initialization:
  1193  07DB                     psect	bssBANK0,class=BANK0,space=1,noexec
  1194                           global __pbssBANK0
  1195                           __pbssBANK0:
  1196  0020                     _ADtemp:
  1197  0020                            ds      4
  1198  0020                     
  1199                           _ADresult:
  1200  0024                            ds      4
  1201  0024                     
  1202                           _DetectFlag:
  1203  0028                            ds      1
  1204  0028                     
  1205                           _flag_ph_end:
  1206  0029                            ds      1
  1207  0029                     
  1208                           _isPhPositive:
  1209  002A                            ds      1
  1210  002A                     
  1211                           _flag_br_end:
  1212  002B                            ds      1
  1213  002B                     
  1214                           _flag_ph_st:
  1215  002C                            ds      1
  1216  002C                     
  1217                           _flag_but_once:
  1218  002D                            ds      1
  1219  002D                     
  1220                           _U_GW:
  1221  002E                            ds      1
  1222  002E                     
  1223                           _U_SW:
  1224  002F                            ds      1
  1225  002F                     
  1226                           _U_BW:
  1227  0030                            ds      1
  1228  0030                     
  1229                           _U_QW:
  1230  0031                            ds      1
  1231  0031                     
  1232                           psect	dataBANK0,class=BANK0,space=1,noexec
  1233                           global __pdataBANK0
  1234                           __pdataBANK0:
  1235  0032                     	file	"./AD.h"
  1236                           	line	6
  1237                           _U_A:
  1238  0032                            ds      4
  1239  0032                     
  1240                           	file	"C:\Users\tonyj\AppData\Local\Temp\s2mk."
  1241                           	line	#
  1242                           ; Initialize objects allocated to BANK0
  1243                           	global __pidataBANK0
  1244                           psect cinit,class=CODE,delta=2,merge=1
  1245                           	fcall	__pidataBANK0+0		;fetch initializer
  1246  07DB  120A  118A  24B0  120A  118A  	movwf	__pdataBANK0+0&07fh		
  1247  07E0  00B2               	fcall	__pidataBANK0+1		;fetch initializer
  1248  07E1  120A  118A  24B1  120A  118A  	movwf	__pdataBANK0+1&07fh		
  1249  07E6  00B3               	fcall	__pidataBANK0+2		;fetch initializer
  1250  07E7  120A  118A  24B2  120A  118A  	movwf	__pdataBANK0+2&07fh		
  1251  07EC  00B4               	fcall	__pidataBANK0+3		;fetch initializer
  1252  07ED  120A  118A  24B3  120A  118A  	movwf	__pdataBANK0+3&07fh		
  1253  07F2  00B5               	line	#
  1254                           psect clrtext,class=CODE,delta=2
  1255                           global clear_ram0
  1256                           ;	Called with FSR containing the base address, and
  1257                           ;	W with the last address+1
  1258                           clear_ram0:
  1259  04BC                     	clrwdt			;clear the watchdog before getting into this loop
  1260  04BC  0064               clrloop0:
  1261  04BD                     	clrf	indf		;clear RAM location pointed to by FSR
  1262  04BD  0180               	incf	fsr,f		;increment pointer
  1263  04BE  0A84               	xorwf	fsr,w		;XOR with final address
  1264  04BF  0604               	btfsc	status,2	;have we reached the end yet?
  1265  04C0  1903               	retlw	0		;all done for this memory range, return
  1266  04C1  3400               	xorwf	fsr,w		;XOR again to restore value
  1267  04C2  0604               	goto	clrloop0		;do the next byte
  1268  04C3  2CBD               
  1269                           ; Clear objects allocated to BANK0
  1270                           psect cinit,class=CODE,delta=2,merge=1
  1271                           	bcf	status, 7	;select IRP bank0
  1272  07F3  1383               	movlw	low(__pbssBANK0)
  1273  07F4  3020               	movwf	fsr
  1274  07F5  0084               	movlw	low((__pbssBANK0)+012h)
  1275  07F6  3032               	fcall	clear_ram0
  1276  07F7  120A  118A  24BC  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1277                           global end_of_initialization,__end_of__initialization
  1278                           
  1279                           ;End of C runtime variable initialization code
  1280                           
  1281                           end_of_initialization:
  1282  07FC                     __end_of__initialization:
  1283  07FC                     clrf status
  1284  07FC  0183               ljmp _main	;jump to C main() function
  1285  07FD  120A  118A  2EB4   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1286                           global __pcstackCOMMON
  1287                           __pcstackCOMMON:
  1288  0070                     ?_LCD_MCU_init:	; 1 bytes @ 0x0
  1289  0070                     ??_LCD_MCU_init:	; 1 bytes @ 0x0
  1290  0070                     ?_LCD_init:	; 1 bytes @ 0x0
  1291  0070                     ?_InitScrn:	; 1 bytes @ 0x0
  1292  0070                     ?_AD_MCU_INIT:	; 1 bytes @ 0x0
  1293  0070                     ??_AD_MCU_INIT:	; 1 bytes @ 0x0
  1294  0070                     ?_BUTTONMCUInit:	; 1 bytes @ 0x0
  1295  0070                     ??_BUTTONMCUInit:	; 1 bytes @ 0x0
  1296  0070                     ?_ButtonDetect:	; 1 bytes @ 0x0
  1297  0070                     ?_AD_SUB:	; 1 bytes @ 0x0
  1298  0070                     ?_delay_ms:	; 1 bytes @ 0x0
  1299  0070                     ?_delay_us:	; 1 bytes @ 0x0
  1300  0070                     ??_delay_us:	; 1 bytes @ 0x0
  1301  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  1302  0070                     ?_LED_MCU_INIT:	; 1 bytes @ 0x0
  1303  0070                     ??_LED_MCU_INIT:	; 1 bytes @ 0x0
  1304  0070                     ?_main:	; 1 bytes @ 0x0
  1305  0070                     ?_LCD_en_command:	; 1 bytes @ 0x0
  1306  0070                     ?_LCD_en_dat:	; 1 bytes @ 0x0
  1307  0070                     ?_LCD_Read_dat:	; 1 bytes @ 0x0
  1308  0070                     ??_LCD_Read_dat:	; 1 bytes @ 0x0
  1309  0070                     ?_isBUTTONOn:	; 1 bytes @ 0x0
  1310  0070                     	global	delay_us@n
  1311                           delay_us@n:	; 1 bytes @ 0x0
  1312  0070                     	global	delay_ms@n
  1313                           delay_ms@n:	; 2 bytes @ 0x0
  1314  0070                     	ds	1
  1315  0070                     ??_AD_SUB:	; 1 bytes @ 0x1
  1316  0071                     ??_LCD_en_dat:	; 1 bytes @ 0x1
  1317  0071                     	global	LCD_en_dat@dat
  1318                           LCD_en_dat@dat:	; 1 bytes @ 0x1
  1319  0071                     	global	LCD_Read_dat@dat
  1320                           LCD_Read_dat@dat:	; 1 bytes @ 0x1
  1321  0071                     	ds	1
  1322  0071                     ??_delay_ms:	; 1 bytes @ 0x2
  1323  0072                     ??_LCD_Busy:	; 1 bytes @ 0x2
  1324  0072                     	ds	1
  1325  0072                     	global	LCD_Busy@busyFlag
  1326                           LCD_Busy@busyFlag:	; 1 bytes @ 0x3
  1327  0073                     	global	delay_ms@j
  1328                           delay_ms@j:	; 2 bytes @ 0x3
  1329  0073                     	ds	2
  1330  0073                     	global	delay_ms@k
  1331                           delay_ms@k:	; 1 bytes @ 0x5
  1332  0075                     	global	AD_SUB@k
  1333                           AD_SUB@k:	; 1 bytes @ 0x5
  1334  0075                     	ds	1
  1335  0075                     ??_ButtonDetect:	; 1 bytes @ 0x6
  1336  0076                     ??_LCD_en_command:	; 1 bytes @ 0x6
  1337  0076                     ??_isBUTTONOn:	; 1 bytes @ 0x6
  1338  0076                     	global	LCD_en_command@command
  1339                           LCD_en_command@command:	; 1 bytes @ 0x6
  1340  0076                     	ds	1
  1341  0076                     ??_LCD_init:	; 1 bytes @ 0x7
  1342  0077                     ??_InitScrn:	; 1 bytes @ 0x7
  1343  0077                     ?_LCD_set_xy:	; 1 bytes @ 0x7
  1344  0077                     	global	LCD_set_xy@y
  1345                           LCD_set_xy@y:	; 1 bytes @ 0x7
  1346  0077                     	ds	1
  1347  0077                     ??_LCD_set_xy:	; 1 bytes @ 0x8
  1348  0078                     	ds	1
  1349  0078                     	global	LCD_set_xy@address
  1350                           LCD_set_xy@address:	; 1 bytes @ 0x9
  1351  0079                     	ds	1
  1352  0079                     	global	LCD_set_xy@x
  1353                           LCD_set_xy@x:	; 1 bytes @ 0xA
  1354  007A                     	ds	1
  1355  007A                     ?_LCD_write_string:	; 1 bytes @ 0xB
  1356  007B                     	global	LCD_write_string@Y
  1357                           LCD_write_string@Y:	; 1 bytes @ 0xB
  1358  007B                     	ds	1
  1359  007B                     	global	LCD_write_string@s
  1360                           LCD_write_string@s:	; 1 bytes @ 0xC
  1361  007C                     	ds	1
  1362  007C                     ??_LCD_write_string:	; 1 bytes @ 0xD
  1363  007D                     	ds	1
  1364  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1365                           global __pcstackBANK0
  1366                           __pcstackBANK0:
  1367  0036                     	global	LCD_write_string@X
  1368                           LCD_write_string@X:	; 1 bytes @ 0x0
  1369  0036                     	ds	1
  1370  0036                     ??_main:	; 1 bytes @ 0x1
  1371  0037                     	ds	2
  1372  0037                     ;!
  1373                           ;!Data Sizes:
  1374                           ;!    Strings     26
  1375                           ;!    Constant    0
  1376                           ;!    Data        4
  1377                           ;!    BSS         18
  1378                           ;!    Persistent  0
  1379                           ;!    Stack       0
  1380                           ;!
  1381                           ;!Auto Spaces:
  1382                           ;!    Space          Size  Autos    Used
  1383                           ;!    COMMON           14     14      14
  1384                           ;!    BANK0            80      3      25
  1385                           ;!    BANK1            80      0       0
  1386                           ;!    BANK3            96      0       0
  1387                           ;!    BANK2            96      0       0
  1388                           
  1389                           ;!
  1390                           ;!Pointer List with Targets:
  1391                           ;!
  1392                           ;!    LCD_write_string@s	PTR unsigned char  size(1) Largest target is 9
  1393                           ;!		 -> STR_4(CODE[9]), STR_3(CODE[4]), STR_2(CODE[9]), STR_1(CODE[4]), 
  1394                           ;!
  1395                           
  1396                           
  1397                           ;!
  1398                           ;!Critical Paths under _main in COMMON
  1399                           ;!
  1400                           ;!    _main->_LCD_write_string
  1401                           ;!    _LCD_write_string->_LCD_set_xy
  1402                           ;!    _LCD_set_xy->_LCD_en_command
  1403                           ;!    _LCD_en_dat->_delay_us
  1404                           ;!    _LCD_Busy->_LCD_Read_dat
  1405                           ;!    _LCD_init->_LCD_en_command
  1406                           ;!    _InitScrn->_LCD_en_command
  1407                           ;!    _LCD_en_command->_delay_ms
  1408                           ;!    _ButtonDetect->_AD_SUB
  1409                           ;!    _isBUTTONOn->_delay_ms
  1410                           ;!    _AD_SUB->_delay_us
  1411                           ;!
  1412                           ;!Critical Paths under _main in BANK0
  1413                           ;!
  1414                           ;!    _main->_LCD_write_string
  1415                           ;!
  1416                           ;!Critical Paths under _main in BANK1
  1417                           ;!
  1418                           ;!    None.
  1419                           ;!
  1420                           ;!Critical Paths under _main in BANK3
  1421                           ;!
  1422                           ;!    None.
  1423                           ;!
  1424                           ;!Critical Paths under _main in BANK2
  1425                           ;!
  1426                           ;!    None.
  1427                           
  1428 ;;
  1429 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1430 ;;
  1431                           
  1432                           ;!
  1433                           ;!Call Graph Tables:
  1434                           ;!
  1435                           ;! ---------------------------------------------------------------------------------
  1436                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1437                           ;! ---------------------------------------------------------------------------------
  1438                           ;! (0) _main                                                 2     2      0    4489
  1439                           ;!                                              1 BANK0      2     2      0
  1440                           ;!                        _AD_MCU_INIT
  1441                           ;!                             _AD_SUB
  1442                           ;!                      _BUTTONMCUInit
  1443                           ;!                       _ButtonDetect
  1444                           ;!                           _InitScrn
  1445                           ;!                       _LCD_MCU_init
  1446                           ;!                           _LCD_init
  1447                           ;!                   _LCD_write_string
  1448                           ;!                       _LED_MCU_INIT
  1449                           ;!                           _delay_ms
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (1) _LED_MCU_INIT                                         0     0      0       0
  1452                           ;! ---------------------------------------------------------------------------------
  1453                           ;! (1) _LCD_write_string                                     4     2      2    1569
  1454                           ;!                                             11 COMMON     3     1      2
  1455                           ;!                                              0 BANK0      1     1      0
  1456                           ;!                           _LCD_Busy
  1457                           ;!                         _LCD_en_dat
  1458                           ;!                         _LCD_set_xy
  1459                           ;! ---------------------------------------------------------------------------------
  1460                           ;! (2) _LCD_set_xy                                           4     3      1     759
  1461                           ;!                                              7 COMMON     4     3      1
  1462                           ;!                     _LCD_en_command
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (2) _LCD_en_dat                                           1     1      0      45
  1465                           ;!                                              1 COMMON     1     1      0
  1466                           ;!                           _delay_us
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (2) _LCD_Busy                                             2     2      0      46
  1469                           ;!                                              2 COMMON     2     2      0
  1470                           ;!                       _LCD_Read_dat
  1471                           ;! ---------------------------------------------------------------------------------
  1472                           ;! (3) _LCD_Read_dat                                         2     2      0      23
  1473                           ;!                                              0 COMMON     2     2      0
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (1) _LCD_init                                             0     0      0     593
  1476                           ;!                     _LCD_en_command
  1477                           ;! ---------------------------------------------------------------------------------
  1478                           ;! (1) _LCD_MCU_init                                         1     1      0       0
  1479                           ;!                                              0 COMMON     1     1      0
  1480                           ;! ---------------------------------------------------------------------------------
  1481                           ;! (1) _InitScrn                                             0     0      0    1141
  1482                           ;!                     _LCD_en_command
  1483                           ;!                           _delay_ms
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (3) _LCD_en_command                                       1     1      0     593
  1486                           ;!                                              6 COMMON     1     1      0
  1487                           ;!                           _delay_ms
  1488                           ;!                           _delay_us
  1489                           ;! ---------------------------------------------------------------------------------
  1490                           ;! (1) _ButtonDetect                                         0     0      0     593
  1491                           ;!                             _AD_SUB
  1492                           ;!                         _isBUTTONOn
  1493                           ;! ---------------------------------------------------------------------------------
  1494                           ;! (2) _isBUTTONOn                                           0     0      0     548
  1495                           ;!                           _delay_ms
  1496                           ;! ---------------------------------------------------------------------------------
  1497                           ;! (1) _delay_ms                                             6     4      2     548
  1498                           ;!                                              0 COMMON     6     4      2
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (2) _AD_SUB                                               6     6      0      45
  1501                           ;!                                              1 COMMON     5     5      0
  1502                           ;!                           _delay_us
  1503                           ;! ---------------------------------------------------------------------------------
  1504                           ;! (4) _delay_us                                             1     1      0      23
  1505                           ;!                                              0 COMMON     1     1      0
  1506                           ;! ---------------------------------------------------------------------------------
  1507                           ;! (1) _BUTTONMCUInit                                        1     1      0       0
  1508                           ;!                                              0 COMMON     1     1      0
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! (1) _AD_MCU_INIT                                          0     0      0       0
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! Estimated maximum stack depth 4
  1513                           ;! ---------------------------------------------------------------------------------
  1514                           ;!
  1515                           ;! Call Graph Graphs:
  1516                           ;!
  1517                           ;! _main (ROOT)
  1518                           ;!   _AD_MCU_INIT
  1519                           ;!   _AD_SUB
  1520                           ;!     _delay_us
  1521                           ;!   _BUTTONMCUInit
  1522                           ;!   _ButtonDetect
  1523                           ;!     _AD_SUB
  1524                           ;!       _delay_us
  1525                           ;!     _isBUTTONOn
  1526                           ;!       _delay_ms
  1527                           ;!   _InitScrn
  1528                           ;!     _LCD_en_command
  1529                           ;!       _delay_ms
  1530                           ;!       _delay_us
  1531                           ;!     _delay_ms
  1532                           ;!   _LCD_MCU_init
  1533                           ;!   _LCD_init
  1534                           ;!     _LCD_en_command
  1535                           ;!       _delay_ms
  1536                           ;!       _delay_us
  1537                           ;!   _LCD_write_string
  1538                           ;!     _LCD_Busy
  1539                           ;!       _LCD_Read_dat
  1540                           ;!     _LCD_en_dat
  1541                           ;!       _delay_us
  1542                           ;!     _LCD_set_xy
  1543                           ;!       _LCD_en_command
  1544                           ;!         _delay_ms
  1545                           ;!         _delay_us
  1546                           ;!   _LED_MCU_INIT
  1547                           ;!   _delay_ms
  1548                           ;!
  1549                           
  1550                           ;! Address spaces:
  1551                           
  1552                           ;!Name               Size   Autos  Total    Cost      Usage
  1553                           ;!BANK3               60      0       0       9        0.0%
  1554                           ;!BITBANK3            60      0       0       8        0.0%
  1555                           ;!SFR3                 0      0       0       4        0.0%
  1556                           ;!BITSFR3              0      0       0       4        0.0%
  1557                           ;!BANK2               60      0       0      11        0.0%
  1558                           ;!BITBANK2            60      0       0      10        0.0%
  1559                           ;!SFR2                 0      0       0       5        0.0%
  1560                           ;!BITSFR2              0      0       0       5        0.0%
  1561                           ;!BANK1               50      0       0       7        0.0%
  1562                           ;!BITBANK1            50      0       0       6        0.0%
  1563                           ;!SFR1                 0      0       0       2        0.0%
  1564                           ;!BITSFR1              0      0       0       2        0.0%
  1565                           ;!BANK0               50      3      19       5       31.3%
  1566                           ;!BITBANK0            50      0       0       4        0.0%
  1567                           ;!SFR0                 0      0       0       1        0.0%
  1568                           ;!BITSFR0              0      0       0       1        0.0%
  1569                           ;!COMMON               E      E       E       1      100.0%
  1570                           ;!BITCOMMON            E      0       0       0        0.0%
  1571                           ;!CODE                 0      0       0       0        0.0%
  1572                           ;!DATA                 0      0      27      12        0.0%
  1573                           ;!ABS                  0      0      27       3        0.0%
  1574                           ;!NULL                 0      0       0       0        0.0%
  1575                           ;!STACK                0      0       0       2        0.0%
  1576                           ;!EEDATA             100      0       0       0        0.0%
  1577                           
  1578                           	global	_main
  1579                           
  1580 ;; *************** function _main *****************
  1581 ;; Defined at:
  1582 ;;		line 72 in file "main.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : B00/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0
  1598 ;;      Temps:          0       2       0       0       0
  1599 ;;      Totals:         0       2       0       0       0
  1600 ;;Total ram usage:        2 bytes
  1601 ;; Hardware stack levels required when called:    4
  1602 ;; This function calls:
  1603 ;;		_AD_MCU_INIT
  1604 ;;		_AD_SUB
  1605 ;;		_BUTTONMCUInit
  1606 ;;		_ButtonDetect
  1607 ;;		_InitScrn
  1608 ;;		_LCD_MCU_init
  1609 ;;		_LCD_init
  1610 ;;		_LCD_write_string
  1611 ;;		_LED_MCU_INIT
  1612 ;;		_delay_ms
  1613 ;; This function is called by:
  1614 ;;		Startup code after reset
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1618                           	file	"main.c"
  1619                           	line	72
  1620                           global __pmaintext
  1621                           __pmaintext:	;psect for function _main
  1622  06B4                     psect	maintext
  1623                           	file	"main.c"
  1624                           	line	72
  1625                           	global	__size_of_main
  1626                           	__size_of_main	equ	__end_of_main-_main
  1627  0127                     	
  1628                           _main:	
  1629  06B4                     ;incstack = 0
  1630                           	opt	stack 4
  1631                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1632                           	line	75
  1633                           	
  1634                           l1171:	
  1635  06B4                     ;main.c: 75:     LCD_MCU_init();
  1636                           	fcall	_LCD_MCU_init
  1637  06B4  120A  118A  24E9  120A  118A  	line	76
  1638                           ;main.c: 76:     LCD_init();
  1639                           	fcall	_LCD_init
  1640  06B9  120A  118A  2578  120A  118A  	line	77
  1641                           ;main.c: 77:     InitScrn();
  1642                           	fcall	_InitScrn
  1643  06BE  120A  118A  24F7  120A  118A  	line	79
  1644                           ;main.c: 79:     AD_MCU_INIT();
  1645                           	fcall	_AD_MCU_INIT
  1646  06C3  120A  118A  24CF  120A  118A  	line	81
  1647                           	
  1648                           l1173:	
  1649  06C8                     ;main.c: 81:     LED_MCU_INIT();
  1650                           	fcall	_LED_MCU_INIT
  1651  06C8  120A  118A  24C4  120A  118A  	line	83
  1652                           	
  1653                           l1175:	
  1654  06CD                     ;main.c: 83:     BUTTONMCUInit();
  1655                           	fcall	_BUTTONMCUInit
  1656  06CD  120A  118A  24B4  120A  118A  	goto	l1177
  1657  06D2  2ED3               	line	84
  1658                           ;main.c: 84:     while(1)
  1659                           	
  1660                           l58:	
  1661  06D3                     	line	86
  1662                           	
  1663                           l1177:	
  1664  06D3                     ;main.c: 85:     {;main.c: 86:         ButtonDetect();
  1665                           	fcall	_ButtonDetect
  1666  06D3  120A  118A  25C0  120A  118A  	line	87
  1667                           	
  1668                           l1179:	
  1669  06D8                     ;main.c: 87:         if(flag_ph_st&(!flag_ph_end))
  1670                           	bcf	status, 5	;RP0=0, select bank0
  1671  06D8  1283               	bcf	status, 6	;RP1=0, select bank0
  1672  06D9  1303               	movf	((_flag_ph_end)),w
  1673  06DA  0829               	btfsc	status,2
  1674  06DB  1903               	goto	u411
  1675  06DC  2EDE               	goto	u410
  1676  06DD  2EE0               u411:
  1677  06DE                     	movlw	1
  1678  06DE  3001               	goto	u420
  1679  06DF  2EE1               u410:
  1680  06E0                     	movlw	0
  1681  06E0  3000               u420:
  1682  06E1                     	andwf	(_flag_ph_st),w
  1683  06E1  052C               	btfsc	status,2
  1684  06E2  1903               	goto	u431
  1685  06E3  2EE5               	goto	u430
  1686  06E4  2EE6               u431:
  1687  06E5                     	goto	l1199
  1688  06E5  2F57               u430:
  1689  06E6                     	line	90
  1690                           	
  1691                           l1181:	
  1692  06E6                     ;main.c: 88:         {;main.c: 90:             AD_SUB(1);
  1693                           	movlw	low(01h)
  1694  06E6  3001               	fcall	_AD_SUB
  1695  06E7  120A  118A  25F7  120A  118A  	line	91
  1696                           	
  1697                           l1183:	
  1698  06EC                     ;main.c: 91:             if(ADresult<= 414 && ADresult>403)
  1699                           	bcf	status, 5	;RP0=0, select bank0
  1700  06EC  1283               	bcf	status, 6	;RP1=0, select bank0
  1701  06ED  1303               		movf	(_ADresult+3),w
  1702  06EE  0827               	btfss	status,2
  1703  06EF  1D03               	goto	u441
  1704  06F0  2EFF               	movf	(_ADresult+2),w
  1705  06F1  0826               	btfss	status,2
  1706  06F2  1D03               	goto	u441
  1707  06F3  2EFF               	movlw	1
  1708  06F4  3001               	subwf	(_ADresult+1),w
  1709  06F5  0225               	skipz
  1710  06F6  1D03               	goto	u443
  1711  06F7  2EFC               	movlw	159
  1712  06F8  309F               	subwf	(_ADresult),w
  1713  06F9  0224               	skipz
  1714  06FA  1D03               	goto	u443
  1715  06FB  2EFC               u443:
  1716  06FC                     	btfsc	status,0
  1717  06FC  1803               	goto	u441
  1718  06FD  2EFF               	goto	u440
  1719  06FE  2F00               
  1720                           u441:
  1721  06FF                     	goto	l1199
  1722  06FF  2F57               u440:
  1723  0700                     	
  1724                           l1185:	
  1725  0700                     		movf	(_ADresult+3),w
  1726  0700  0827               	btfss	status,2
  1727  0701  1D03               	goto	u450
  1728  0702  2F12               	movf	(_ADresult+2),w
  1729  0703  0826               	btfss	status,2
  1730  0704  1D03               	goto	u450
  1731  0705  2F12               	movlw	1
  1732  0706  3001               	subwf	(_ADresult+1),w
  1733  0707  0225               	skipz
  1734  0708  1D03               	goto	u453
  1735  0709  2F0E               	movlw	148
  1736  070A  3094               	subwf	(_ADresult),w
  1737  070B  0224               	skipz
  1738  070C  1D03               	goto	u453
  1739  070D  2F0E               u453:
  1740  070E                     	btfss	status,0
  1741  070E  1C03               	goto	u451
  1742  070F  2F11               	goto	u450
  1743  0710  2F12               
  1744                           u451:
  1745  0711                     	goto	l1199
  1746  0711  2F57               u450:
  1747  0712                     	line	93
  1748                           	
  1749                           l1187:	
  1750  0712                     ;main.c: 92:             {;main.c: 93:                 ADtemp=ADresult;
  1751                           	movf	(_ADresult+3),w
  1752  0712  0827               	movwf	(_ADtemp+3)
  1753  0713  00A3               	movf	(_ADresult+2),w
  1754  0714  0826               	movwf	(_ADtemp+2)
  1755  0715  00A2               	movf	(_ADresult+1),w
  1756  0716  0825               	movwf	(_ADtemp+1)
  1757  0717  00A1               	movf	(_ADresult),w
  1758  0718  0824               	movwf	(_ADtemp)
  1759  0719  00A0               
  1760                           	line	94
  1761                           	
  1762                           l1189:	
  1763  071A                     ;main.c: 94:                 AD_SUB(1);
  1764                           	movlw	low(01h)
  1765  071A  3001               	fcall	_AD_SUB
  1766  071B  120A  118A  25F7  120A  118A  	line	95
  1767                           	
  1768                           l1191:	
  1769  0720                     ;main.c: 95:                 if(ADresult>ADtemp)
  1770                           	bcf	status, 5	;RP0=0, select bank0
  1771  0720  1283               	bcf	status, 6	;RP1=0, select bank0
  1772  0721  1303               	movf	(_ADresult+3),w
  1773  0722  0827               	subwf	(_ADtemp+3),w
  1774  0723  0223               	skipz
  1775  0724  1D03               	goto	u465
  1776  0725  2F30               	movf	(_ADresult+2),w
  1777  0726  0826               	subwf	(_ADtemp+2),w
  1778  0727  0222               	skipz
  1779  0728  1D03               	goto	u465
  1780  0729  2F30               	movf	(_ADresult+1),w
  1781  072A  0825               	subwf	(_ADtemp+1),w
  1782  072B  0221               	skipz
  1783  072C  1D03               	goto	u465
  1784  072D  2F30               	movf	(_ADresult),w
  1785  072E  0824               	subwf	(_ADtemp),w
  1786  072F  0220               u465:
  1787  0730                     	skipnc
  1788  0730  1803               	goto	u461
  1789  0731  2F33               	goto	u460
  1790  0732  2F34               u461:
  1791  0733                     	goto	l1199
  1792  0733  2F57               u460:
  1793  0734                     	line	97
  1794                           	
  1795                           l1193:	
  1796  0734                     ;main.c: 96:                 {;main.c: 97:                     AD_SUB(2);
  1797                           	movlw	low(02h)
  1798  0734  3002               	fcall	_AD_SUB
  1799  0735  120A  118A  25F7  120A  118A  	line	98
  1800                           	
  1801                           l1195:	
  1802  073A                     ;main.c: 98:                     if(ADresult>409)
  1803                           	bcf	status, 5	;RP0=0, select bank0
  1804  073A  1283               	bcf	status, 6	;RP1=0, select bank0
  1805  073B  1303               		movf	(_ADresult+3),w
  1806  073C  0827               	btfss	status,2
  1807  073D  1D03               	goto	u470
  1808  073E  2F4E               	movf	(_ADresult+2),w
  1809  073F  0826               	btfss	status,2
  1810  0740  1D03               	goto	u470
  1811  0741  2F4E               	movlw	1
  1812  0742  3001               	subwf	(_ADresult+1),w
  1813  0743  0225               	skipz
  1814  0744  1D03               	goto	u473
  1815  0745  2F4A               	movlw	154
  1816  0746  309A               	subwf	(_ADresult),w
  1817  0747  0224               	skipz
  1818  0748  1D03               	goto	u473
  1819  0749  2F4A               u473:
  1820  074A                     	btfss	status,0
  1821  074A  1C03               	goto	u471
  1822  074B  2F4D               	goto	u470
  1823  074C  2F4E               
  1824                           u471:
  1825  074D                     	goto	l62
  1826  074D  2F50               u470:
  1827  074E                     	line	99
  1828                           	
  1829                           l1197:	
  1830  074E                     ;main.c: 99:                         isPhPositive=0;
  1831                           	clrf	(_isPhPositive)
  1832  074E  01AA               	goto	l63
  1833  074F  2F52               	line	100
  1834                           ;main.c: 100:                     else
  1835                           	
  1836                           l62:	
  1837  0750                     	line	101
  1838                           ;main.c: 101:                         isPhPositive=1;
  1839                           	clrf	(_isPhPositive)
  1840  0750  01AA               	incf	(_isPhPositive),f
  1841  0751  0AAA               	
  1842                           l63:	
  1843  0752                     	line	102
  1844                           ;main.c: 102:                     flag_ph_end=1;
  1845                           	clrf	(_flag_ph_end)
  1846  0752  01A9               	incf	(_flag_ph_end),f
  1847  0753  0AA9               	goto	l1199
  1848  0754  2F57               	line	103
  1849                           ;main.c: 103:                 }
  1850                           	
  1851                           l61:	
  1852  0755                     	goto	l1199
  1853  0755  2F57               	line	104
  1854                           ;main.c: 104:             }
  1855                           	
  1856                           l60:	
  1857  0756                     	goto	l1199
  1858  0756  2F57               	line	105
  1859                           ;main.c: 105:         }
  1860                           	
  1861                           l59:	
  1862  0757                     	line	106
  1863                           	
  1864                           l1199:	
  1865  0757                     ;main.c: 106:         if(flag_ph_end&(!flag_br_end))
  1866                           	movf	((_flag_br_end)),w
  1867  0757  082B               	btfsc	status,2
  1868  0758  1903               	goto	u481
  1869  0759  2F5B               	goto	u480
  1870  075A  2F5D               u481:
  1871  075B                     	movlw	1
  1872  075B  3001               	goto	u490
  1873  075C  2F5E               u480:
  1874  075D                     	movlw	0
  1875  075D  3000               u490:
  1876  075E                     	andwf	(_flag_ph_end),w
  1877  075E  0529               	btfsc	status,2
  1878  075F  1903               	goto	u501
  1879  0760  2F62               	goto	u500
  1880  0761  2F63               u501:
  1881  0762                     	goto	l1177
  1882  0762  2ED3               u500:
  1883  0763                     	line	108
  1884                           	
  1885                           l1201:	
  1886  0763                     ;main.c: 107:           {;main.c: 108:             PORTCbits.RC0=1;
  1887                           	bsf	(7),0	;volatile
  1888  0763  1407               	line	109
  1889                           	
  1890                           l1203:	
  1891  0764                     ;main.c: 109:               if(!isPhPositive)
  1892                           	movf	((_isPhPositive)),w
  1893  0764  082A               	btfss	status,2
  1894  0765  1D03               	goto	u511
  1895  0766  2F68               	goto	u510
  1896  0767  2F69               u511:
  1897  0768                     	goto	l1207
  1898  0768  2F73               u510:
  1899  0769                     	line	111
  1900                           	
  1901                           l1205:	
  1902  0769                     ;main.c: 110:               {;main.c: 111:                   delay_ms(20);
  1903                           	movlw	014h
  1904  0769  3014               	movwf	(delay_ms@n)
  1905  076A  00F0               	movlw	0
  1906  076B  3000               	movwf	((delay_ms@n))+1
  1907  076C  00F1               	fcall	_delay_ms
  1908  076D  120A  118A  2597  120A  118A  	goto	l1207
  1909  0772  2F73               	line	112
  1910                           ;main.c: 112:               }
  1911                           	
  1912                           l65:	
  1913  0773                     	line	113
  1914                           	
  1915                           l1207:	
  1916  0773                     ;main.c: 113:             PORTCbits.RC0=0;
  1917                           	bcf	status, 5	;RP0=0, select bank0
  1918  0773  1283               	bcf	status, 6	;RP1=0, select bank0
  1919  0774  1303               	bcf	(7),0	;volatile
  1920  0775  1007               	line	114
  1921                           ;main.c: 114:               delay_ms(7);
  1922                           	movlw	07h
  1923  0776  3007               	movwf	(delay_ms@n)
  1924  0777  00F0               	movlw	0
  1925  0778  3000               	movwf	((delay_ms@n))+1
  1926  0779  00F1               	fcall	_delay_ms
  1927  077A  120A  118A  2597  120A  118A  	line	115
  1928                           	
  1929                           l1209:	
  1930  077F                     ;main.c: 115:               PORTCbits.RC2=1;
  1931                           	bcf	status, 5	;RP0=0, select bank0
  1932  077F  1283               	bcf	status, 6	;RP1=0, select bank0
  1933  0780  1303               	bsf	(7),2	;volatile
  1934  0781  1507               	line	116
  1935                           ;main.c: 116:               delay_ms(20 -7);
  1936                           	movlw	0Dh
  1937  0782  300D               	movwf	(delay_ms@n)
  1938  0783  00F0               	movlw	0
  1939  0784  3000               	movwf	((delay_ms@n))+1
  1940  0785  00F1               	fcall	_delay_ms
  1941  0786  120A  118A  2597  120A  118A  	line	117
  1942                           	
  1943                           l1211:	
  1944  078B                     ;main.c: 117:               PORTCbits.RC2=0;
  1945                           	bcf	status, 5	;RP0=0, select bank0
  1946  078B  1283               	bcf	status, 6	;RP1=0, select bank0
  1947  078C  1303               	bcf	(7),2	;volatile
  1948  078D  1107               	line	118
  1949                           	
  1950                           l1213:	
  1951  078E                     ;main.c: 118:               if(isPhPositive)
  1952                           	movf	((_isPhPositive)),w
  1953  078E  082A               	btfsc	status,2
  1954  078F  1903               	goto	u521
  1955  0790  2F92               	goto	u520
  1956  0791  2F93               u521:
  1957  0792                     	goto	l1217
  1958  0792  2FB0               u520:
  1959  0793                     	line	120
  1960                           	
  1961                           l1215:	
  1962  0793                     ;main.c: 119:               {;main.c: 120:                   LCD_write_string(1,1,"abc")
                                 ;
  1963                           	clrf	(LCD_write_string@Y)
  1964  0793  01FB               	incf	(LCD_write_string@Y),f
  1965  0794  0AFB               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1966  0795  3017               	movwf	(??_main+0)+0
  1967  0796  00B7               	movf	(??_main+0)+0,w
  1968  0797  0837               	movwf	(LCD_write_string@s)
  1969  0798  00FC               	movlw	low(01h)
  1970  0799  3001               	fcall	_LCD_write_string
  1971  079A  120A  118A  2634  120A  118A  	line	121
  1972                           ;main.c: 121:                   LCD_write_string(1,2,"POSITIVE");
  1973                           	movlw	low(02h)
  1974  079F  3002               	bcf	status, 5	;RP0=0, select bank0
  1975  07A0  1283               	bcf	status, 6	;RP1=0, select bank0
  1976  07A1  1303               	movwf	(??_main+0)+0
  1977  07A2  00B7               	movf	(??_main+0)+0,w
  1978  07A3  0837               	movwf	(LCD_write_string@Y)
  1979  07A4  00FB               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1980  07A5  300A               	movwf	(??_main+1)+0
  1981  07A6  00B8               	movf	(??_main+1)+0,w
  1982  07A7  0838               	movwf	(LCD_write_string@s)
  1983  07A8  00FC               	movlw	low(01h)
  1984  07A9  3001               	fcall	_LCD_write_string
  1985  07AA  120A  118A  2634  120A  118A  	line	123
  1986                           ;main.c: 123:               }
  1987                           	goto	l1219
  1988  07AF  2FCF               	line	124
  1989                           ;main.c: 124:               else
  1990                           	
  1991                           l66:	
  1992  07B0                     	line	126
  1993                           	
  1994                           l1217:	
  1995  07B0                     ;main.c: 125:               {;main.c: 126:                   LCD_write_string(1,1,"acb")
                                 ;
  1996                           	clrf	(LCD_write_string@Y)
  1997  07B0  01FB               	incf	(LCD_write_string@Y),f
  1998  07B1  0AFB               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1999  07B2  3013               	bcf	status, 5	;RP0=0, select bank0
  2000  07B3  1283               	bcf	status, 6	;RP1=0, select bank0
  2001  07B4  1303               	movwf	(??_main+0)+0
  2002  07B5  00B7               	movf	(??_main+0)+0,w
  2003  07B6  0837               	movwf	(LCD_write_string@s)
  2004  07B7  00FC               	movlw	low(01h)
  2005  07B8  3001               	fcall	_LCD_write_string
  2006  07B9  120A  118A  2634  120A  118A  	line	127
  2007                           ;main.c: 127:                   LCD_write_string(1,2,"NEGATIVE");
  2008                           	movlw	low(02h)
  2009  07BE  3002               	bcf	status, 5	;RP0=0, select bank0
  2010  07BF  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  07C0  1303               	movwf	(??_main+0)+0
  2012  07C1  00B7               	movf	(??_main+0)+0,w
  2013  07C2  0837               	movwf	(LCD_write_string@Y)
  2014  07C3  00FB               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2015  07C4  3001               	movwf	(??_main+1)+0
  2016  07C5  00B8               	movf	(??_main+1)+0,w
  2017  07C6  0838               	movwf	(LCD_write_string@s)
  2018  07C7  00FC               	movlw	low(01h)
  2019  07C8  3001               	fcall	_LCD_write_string
  2020  07C9  120A  118A  2634  120A  118A  	goto	l1219
  2021  07CE  2FCF               	line	128
  2022                           ;main.c: 128:               }
  2023                           	
  2024                           l67:	
  2025  07CF                     	line	129
  2026                           	
  2027                           l1219:	
  2028  07CF                     ;main.c: 129:               PORTCbits.RC0=0;
  2029                           	bcf	status, 5	;RP0=0, select bank0
  2030  07CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2031  07D0  1303               	bcf	(7),0	;volatile
  2032  07D1  1007               	line	130
  2033                           	
  2034                           l1221:	
  2035  07D2                     ;main.c: 130:               flag_br_end=1;
  2036                           	clrf	(_flag_br_end)
  2037  07D2  01AB               	incf	(_flag_br_end),f
  2038  07D3  0AAB               	line	131
  2039                           	
  2040                           l1223:	
  2041  07D4                     ;main.c: 131:               __nop();
  2042                           	opt	asmopt_push
  2043                           	opt	asmopt_off
  2044                           	nop
  2045  07D4  0000               	opt	asmopt_pop
  2046                           	goto	l1177
  2047  07D5  2ED3               	line	132
  2048                           ;main.c: 132:         }
  2049                           	
  2050                           l64:	
  2051  07D6                     	goto	l1177
  2052  07D6  2ED3               	line	133
  2053                           ;main.c: 133:     }
  2054                           	
  2055                           l68:	
  2056  07D7                     	goto	l1177
  2057  07D7  2ED3               	
  2058                           l69:	
  2059  07D8                     	line	134
  2060                           	
  2061                           l70:	
  2062  07D8                     	global	start
  2063                           	ljmp	start
  2064  07D8  120A  118A  2800   	opt stack 0
  2065                           GLOBAL	__end_of_main
  2066                           	__end_of_main:
  2067  07DB                     	signat	_main,89
  2068                           	global	_LED_MCU_INIT
  2069                           
  2070 ;; *************** function _LED_MCU_INIT *****************
  2071 ;; Defined at:
  2072 ;;		line 61 in file "main.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		None
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2086 ;;      Params:         0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0
  2089 ;;      Totals:         0       0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2099                           	line	61
  2100                           global __ptext1
  2101                           __ptext1:	;psect for function _LED_MCU_INIT
  2102  04C4                     psect	text1
  2103                           	file	"main.c"
  2104                           	line	61
  2105                           	global	__size_of_LED_MCU_INIT
  2106                           	__size_of_LED_MCU_INIT	equ	__end_of_LED_MCU_INIT-_LED_MCU_INIT
  2107  000B                     	
  2108                           _LED_MCU_INIT:	
  2109  04C4                     ;incstack = 0
  2110                           	opt	stack 7
  2111                           ; Regs used in _LED_MCU_INIT: []
  2112                           	line	64
  2113                           	
  2114                           l1127:	
  2115  04C4                     ;main.c: 64:     TRISCbits.TRISC0=0;
  2116                           	bsf	status, 5	;RP0=1, select bank1
  2117  04C4  1683               	bcf	status, 6	;RP1=0, select bank1
  2118  04C5  1303               	bcf	(135)^080h,0	;volatile
  2119  04C6  1007               	line	65
  2120                           ;main.c: 65:     TRISCbits.TRISC2=0;
  2121                           	bcf	(135)^080h,2	;volatile
  2122  04C7  1107               	line	66
  2123                           ;main.c: 66:     TRISCbits.TRISC1=0;
  2124                           	bcf	(135)^080h,1	;volatile
  2125  04C8  1087               	line	67
  2126                           ;main.c: 67:     PORTCbits.RC0=0;
  2127                           	bcf	status, 5	;RP0=0, select bank0
  2128  04C9  1283               	bcf	status, 6	;RP1=0, select bank0
  2129  04CA  1303               	bcf	(7),0	;volatile
  2130  04CB  1007               	line	68
  2131                           ;main.c: 68:     PORTCbits.RC2=0;
  2132                           	bcf	(7),2	;volatile
  2133  04CC  1107               	line	69
  2134                           ;main.c: 69:     PORTCbits.RC1=0;
  2135                           	bcf	(7),1	;volatile
  2136  04CD  1087               	line	70
  2137                           	
  2138                           l53:	
  2139  04CE                     	return
  2140  04CE  0008               	opt stack 0
  2141                           GLOBAL	__end_of_LED_MCU_INIT
  2142                           	__end_of_LED_MCU_INIT:
  2143  04CF                     	signat	_LED_MCU_INIT,89
  2144                           	global	_LCD_write_string
  2145                           
  2146 ;; *************** function _LCD_write_string *****************
  2147 ;; Defined at:
  2148 ;;		line 87 in file "LCD.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  X               1    wreg     unsigned char 
  2151 ;;  Y               1   11[COMMON] unsigned char 
  2152 ;;  s               1   12[COMMON] PTR unsigned char 
  2153 ;;		 -> STR_4(9), STR_3(4), STR_2(9), STR_1(4), 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  X               1    0[BANK0 ] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2165 ;;      Params:         2       0       0       0       0
  2166 ;;      Locals:         0       1       0       0       0
  2167 ;;      Temps:          1       0       0       0       0
  2168 ;;      Totals:         3       1       0       0       0
  2169 ;;Total ram usage:        4 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    3
  2172 ;; This function calls:
  2173 ;;		_LCD_Busy
  2174 ;;		_LCD_en_dat
  2175 ;;		_LCD_set_xy
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2181                           	file	"LCD.c"
  2182                           	line	87
  2183                           global __ptext2
  2184                           __ptext2:	;psect for function _LCD_write_string
  2185  0634                     psect	text2
  2186                           	file	"LCD.c"
  2187                           	line	87
  2188                           	global	__size_of_LCD_write_string
  2189                           	__size_of_LCD_write_string	equ	__end_of_LCD_write_string-_LCD_write_string
  2190  003E                     	
  2191                           _LCD_write_string:	
  2192  0634                     ;incstack = 0
  2193                           	opt	stack 4
  2194                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2195                           ;LCD_write_string@X stored from wreg
  2196                           	bcf	status, 5	;RP0=0, select bank0
  2197  0634  1283               	bcf	status, 6	;RP1=0, select bank0
  2198  0635  1303               	movwf	(LCD_write_string@X)
  2199  0636  00B6               	line	89
  2200                           	
  2201                           l1161:	
  2202  0637                     ;LCD.c: 87: void LCD_write_string(unsigned char X, unsigned char Y, unsigned char *s);LC
                                 D.c: 88: {;LCD.c: 89:     LCD_Busy();
  2203                           	fcall	_LCD_Busy
  2204  0637  120A  118A  2507  120A  118A  	line	90
  2205                           ;LCD.c: 90:     LCD_set_xy(X,Y);
  2206                           	movf	(LCD_write_string@Y),w
  2207  063C  087B               	movwf	(??_LCD_write_string+0)+0
  2208  063D  00FD               	movf	(??_LCD_write_string+0)+0,w
  2209  063E  087D               	movwf	(LCD_set_xy@y)
  2210  063F  00F7               	bcf	status, 5	;RP0=0, select bank0
  2211  0640  1283               	bcf	status, 6	;RP1=0, select bank0
  2212  0641  1303               	movf	(LCD_write_string@X),w
  2213  0642  0836               	fcall	_LCD_set_xy
  2214  0643  120A  118A  2542  120A  118A  	line	91
  2215                           ;LCD.c: 91:     while(*s)
  2216                           	goto	l1169
  2217  0648  2E64               	
  2218                           l111:	
  2219  0649                     	line	93
  2220                           	
  2221                           l1163:	
  2222  0649                     ;LCD.c: 92:     {;LCD.c: 93:         PORTD=*s;
  2223                           	movf	(LCD_write_string@s),w
  2224  0649  087C               	movwf	fsr0
  2225  064A  0084               	fcall	stringdir
  2226  064B  120A  118A  2003  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2227  0650  1283               	bcf	status, 6	;RP1=0, select bank0
  2228  0651  1303               	movwf	(8)	;volatile
  2229  0652  0088               	line	94
  2230                           	
  2231                           l1165:	
  2232  0653                     ;LCD.c: 94:         LCD_en_dat(*s);
  2233                           	movf	(LCD_write_string@s),w
  2234  0653  087C               	movwf	fsr0
  2235  0654  0084               	fcall	stringdir
  2236  0655  120A  118A  2003  120A  118A  	fcall	_LCD_en_dat
  2237  065A  120A  118A  2518  120A  118A  	line	95
  2238                           	
  2239                           l1167:	
  2240  065F                     ;LCD.c: 95:         s++;
  2241                           	movlw	low(01h)
  2242  065F  3001               	movwf	(??_LCD_write_string+0)+0
  2243  0660  00FD               	movf	(??_LCD_write_string+0)+0,w
  2244  0661  087D               	addwf	(LCD_write_string@s),f
  2245  0662  07FC               	goto	l1169
  2246  0663  2E64               	line	96
  2247                           ;LCD.c: 96:     }
  2248                           	
  2249                           l110:	
  2250  0664                     	line	91
  2251                           	
  2252                           l1169:	
  2253  0664                     ;LCD.c: 91:     while(*s)
  2254                           	movf	(LCD_write_string@s),w
  2255  0664  087C               	movwf	fsr0
  2256  0665  0084               	fcall	stringdir
  2257  0666  120A  118A  2003  120A  118A  	xorlw	0
  2258  066B  3A00               	skipz
  2259  066C  1D03               	goto	u401
  2260  066D  2E6F               	goto	u400
  2261  066E  2E70               u401:
  2262  066F                     	goto	l1163
  2263  066F  2E49               u400:
  2264  0670                     	goto	l113
  2265  0670  2E71               	
  2266                           l112:	
  2267  0671                     	line	97
  2268                           	
  2269                           l113:	
  2270  0671                     	return
  2271  0671  0008               	opt stack 0
  2272                           GLOBAL	__end_of_LCD_write_string
  2273                           	__end_of_LCD_write_string:
  2274  0672                     	signat	_LCD_write_string,12409
  2275                           	global	_LCD_set_xy
  2276                           
  2277 ;; *************** function _LCD_set_xy *****************
  2278 ;; Defined at:
  2279 ;;		line 67 in file "LCD.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  x               1    wreg     unsigned char 
  2282 ;;  y               1    7[COMMON] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  x               1   10[COMMON] unsigned char 
  2285 ;;  address         1    9[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         1       0       0       0       0
  2296 ;;      Locals:         2       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0
  2298 ;;      Totals:         4       0       0       0       0
  2299 ;;Total ram usage:        4 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		_LCD_en_command
  2304 ;; This function is called by:
  2305 ;;		_LCD_write_string
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2309                           	line	67
  2310                           global __ptext3
  2311                           __ptext3:	;psect for function _LCD_set_xy
  2312  0542                     psect	text3
  2313                           	file	"LCD.c"
  2314                           	line	67
  2315                           	global	__size_of_LCD_set_xy
  2316                           	__size_of_LCD_set_xy	equ	__end_of_LCD_set_xy-_LCD_set_xy
  2317  001A                     	
  2318                           _LCD_set_xy:	
  2319  0542                     ;incstack = 0
  2320                           	opt	stack 4
  2321                           ; Regs used in _LCD_set_xy: [wreg+status,2+status,0+pclath+cstack]
  2322                           ;LCD_set_xy@x stored from wreg
  2323                           	movwf	(LCD_set_xy@x)
  2324  0542  00FA               	line	70
  2325                           	
  2326                           l1099:	
  2327  0543                     ;LCD.c: 67: void LCD_set_xy(unsigned char x, unsigned char y);LCD.c: 68: {;LCD.c: 69:   
                                   unsigned char address;;LCD.c: 70:     if(y==1)
  2328                           		decf	((LCD_set_xy@y)),w
  2329  0543  0377               	btfss	status,2
  2330  0544  1D03               	goto	u331
  2331  0545  2D47               	goto	u330
  2332  0546  2D48               u331:
  2333  0547                     	goto	l1103
  2334  0547  2D4E               u330:
  2335  0548                     	line	71
  2336                           	
  2337                           l1101:	
  2338  0548                     ;LCD.c: 71:     {address = (unsigned char)0x80 +x;}
  2339                           	movf	(LCD_set_xy@x),w
  2340  0548  087A               	addlw	080h
  2341  0549  3E80               	movwf	(??_LCD_set_xy+0)+0
  2342  054A  00F8               	movf	(??_LCD_set_xy+0)+0,w
  2343  054B  0878               	movwf	(LCD_set_xy@address)
  2344  054C  00F9               	goto	l1105
  2345  054D  2D54               	line	73
  2346                           ;LCD.c: 73:     else
  2347                           	
  2348                           l105:	
  2349  054E                     	line	74
  2350                           	
  2351                           l1103:	
  2352  054E                     ;LCD.c: 74:     {address = 0xC0 +x;}
  2353                           	movf	(LCD_set_xy@x),w
  2354  054E  087A               	addlw	0C0h
  2355  054F  3EC0               	movwf	(??_LCD_set_xy+0)+0
  2356  0550  00F8               	movf	(??_LCD_set_xy+0)+0,w
  2357  0551  0878               	movwf	(LCD_set_xy@address)
  2358  0552  00F9               	goto	l1105
  2359  0553  2D54               	
  2360                           l106:	
  2361  0554                     	line	75
  2362                           	
  2363                           l1105:	
  2364  0554                     ;LCD.c: 75:     LCD_en_command(0x80|address);
  2365                           	movf	(LCD_set_xy@address),w
  2366  0554  0879               	iorlw	080h
  2367  0555  3880               	fcall	_LCD_en_command
  2368  0556  120A  118A  2672  120A  118A  	line	76
  2369                           	
  2370                           l107:	
  2371  055B                     	return
  2372  055B  0008               	opt stack 0
  2373                           GLOBAL	__end_of_LCD_set_xy
  2374                           	__end_of_LCD_set_xy:
  2375  055C                     	signat	_LCD_set_xy,8313
  2376                           	global	_LCD_en_dat
  2377                           
  2378 ;; *************** function _LCD_en_dat *****************
  2379 ;; Defined at:
  2380 ;;		line 37 in file "LCD.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  dat             1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  dat             1    1[COMMON] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         0       0       0       0       0
  2395 ;;      Locals:         1       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0
  2397 ;;      Totals:         1       0       0       0       0
  2398 ;;Total ram usage:        1 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    1
  2401 ;; This function calls:
  2402 ;;		_delay_us
  2403 ;; This function is called by:
  2404 ;;		_LCD_write_string
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2408                           	line	37
  2409                           global __ptext4
  2410                           __ptext4:	;psect for function _LCD_en_dat
  2411  0518                     psect	text4
  2412                           	file	"LCD.c"
  2413                           	line	37
  2414                           	global	__size_of_LCD_en_dat
  2415                           	__size_of_LCD_en_dat	equ	__end_of_LCD_en_dat-_LCD_en_dat
  2416  0013                     	
  2417                           _LCD_en_dat:	
  2418  0518                     ;incstack = 0
  2419                           	opt	stack 5
  2420                           ; Regs used in _LCD_en_dat: [wreg+status,2+status,0+pclath+cstack]
  2421                           ;LCD_en_dat@dat stored from wreg
  2422                           	movwf	(LCD_en_dat@dat)
  2423  0518  00F1               	line	39
  2424                           	
  2425                           l1089:	
  2426  0519                     ;LCD.c: 37: void LCD_en_dat(unsigned char dat);LCD.c: 38: {;LCD.c: 39:     PORTEbits.RE1
                                 =0;
  2427                           	bcf	status, 5	;RP0=0, select bank0
  2428  0519  1283               	bcf	status, 6	;RP1=0, select bank0
  2429  051A  1303               	bcf	(9),1	;volatile
  2430  051B  1089               	line	40
  2431                           ;LCD.c: 40:     PORTEbits.RE0=1;
  2432                           	bsf	(9),0	;volatile
  2433  051C  1409               	line	41
  2434                           ;LCD.c: 41:     PORTEbits.RE2=0;
  2435                           	bcf	(9),2	;volatile
  2436  051D  1109               	line	42
  2437                           	
  2438                           l1091:	
  2439  051E                     ;LCD.c: 42:     PORTD=dat;
  2440                           	movf	(LCD_en_dat@dat),w
  2441  051E  0871               	movwf	(8)	;volatile
  2442  051F  0088               	line	43
  2443                           	
  2444                           l1093:	
  2445  0520                     ;LCD.c: 43:     PORTEbits.RE1=1;
  2446                           	bsf	(9),1	;volatile
  2447  0520  1489               	line	44
  2448                           	
  2449                           l1095:	
  2450  0521                     ;LCD.c: 44:     delay_us(8);
  2451                           	movlw	low(08h)
  2452  0521  3008               	fcall	_delay_us
  2453  0522  120A  118A  24DC  120A  118A  	line	45
  2454                           	
  2455                           l1097:	
  2456  0527                     ;LCD.c: 45:     PORTEbits.RE1=0;
  2457                           	bcf	status, 5	;RP0=0, select bank0
  2458  0527  1283               	bcf	status, 6	;RP1=0, select bank0
  2459  0528  1303               	bcf	(9),1	;volatile
  2460  0529  1089               	line	46
  2461                           	
  2462                           l99:	
  2463  052A                     	return
  2464  052A  0008               	opt stack 0
  2465                           GLOBAL	__end_of_LCD_en_dat
  2466                           	__end_of_LCD_en_dat:
  2467  052B                     	signat	_LCD_en_dat,4217
  2468                           	global	_LCD_Busy
  2469                           
  2470 ;; *************** function _LCD_Busy *****************
  2471 ;; Defined at:
  2472 ;;		line 120 in file "LCD.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  busyFlag        1    3[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0
  2488 ;;      Temps:          1       0       0       0       0
  2489 ;;      Totals:         2       0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    1
  2493 ;; This function calls:
  2494 ;;		_LCD_Read_dat
  2495 ;; This function is called by:
  2496 ;;		_LCD_write_string
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2500                           	line	120
  2501                           global __ptext5
  2502                           __ptext5:	;psect for function _LCD_Busy
  2503  0507                     psect	text5
  2504                           	file	"LCD.c"
  2505                           	line	120
  2506                           	global	__size_of_LCD_Busy
  2507                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
  2508  0011                     	
  2509                           _LCD_Busy:	
  2510  0507                     ;incstack = 0
  2511                           	opt	stack 5
  2512                           ; Regs used in _LCD_Busy: [wreg+status,2+pclath+cstack]
  2513                           	line	123
  2514                           ;LCD.c: 122:     char busyFlag;;LCD.c: 123:     while(1)
  2515                           	
  2516                           l122:	
  2517  0507                     	line	125
  2518                           	
  2519                           l1107:	
  2520  0507                     ;LCD.c: 124:     {;LCD.c: 125:         busyFlag=LCD_Read_dat();
  2521                           	fcall	_LCD_Read_dat
  2522  0507  120A  118A  252B  120A  118A  	movwf	(??_LCD_Busy+0)+0
  2523  050C  00F2               	movf	(??_LCD_Busy+0)+0,w
  2524  050D  0872               	movwf	(LCD_Busy@busyFlag)
  2525  050E  00F3               	line	126
  2526                           	
  2527                           l1109:	
  2528  050F                     ;LCD.c: 126:         if((busyFlag&0x80)==0)
  2529                           	btfsc	(LCD_Busy@busyFlag),(7)&7
  2530  050F  1BF3               	goto	u341
  2531  0510  2D12               	goto	u340
  2532  0511  2D13               u341:
  2533  0512                     	goto	l122
  2534  0512  2D07               u340:
  2535  0513                     	goto	l126
  2536  0513  2D17               	line	128
  2537                           	
  2538                           l1111:	
  2539  0514                     ;LCD.c: 127:         {;LCD.c: 128:             break;
  2540                           	goto	l126
  2541  0514  2D17               	line	129
  2542                           ;LCD.c: 129:         }
  2543                           	
  2544                           l123:	
  2545  0515                     	goto	l122
  2546  0515  2D07               	line	130
  2547                           ;LCD.c: 130:     }
  2548                           	
  2549                           l125:	
  2550  0516                     	goto	l122
  2551  0516  2D07               	
  2552                           l124:	
  2553  0517                     	line	131
  2554                           	
  2555                           l126:	
  2556  0517                     	return
  2557  0517  0008               	opt stack 0
  2558                           GLOBAL	__end_of_LCD_Busy
  2559                           	__end_of_LCD_Busy:
  2560  0518                     	signat	_LCD_Busy,89
  2561                           	global	_LCD_Read_dat
  2562                           
  2563 ;; *************** function _LCD_Read_dat *****************
  2564 ;; Defined at:
  2565 ;;		line 49 in file "LCD.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  dat             1    1[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0
  2581 ;;      Temps:          1       0       0       0       0
  2582 ;;      Totals:         2       0       0       0       0
  2583 ;;Total ram usage:        2 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_LCD_Busy
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2592                           	line	49
  2593                           global __ptext6
  2594                           __ptext6:	;psect for function _LCD_Read_dat
  2595  052B                     psect	text6
  2596                           	file	"LCD.c"
  2597                           	line	49
  2598                           	global	__size_of_LCD_Read_dat
  2599                           	__size_of_LCD_Read_dat	equ	__end_of_LCD_Read_dat-_LCD_Read_dat
  2600  0017                     	
  2601                           _LCD_Read_dat:	
  2602  052B                     ;incstack = 0
  2603                           	opt	stack 5
  2604                           ; Regs used in _LCD_Read_dat: [wreg+status,2]
  2605                           	line	52
  2606                           	
  2607                           l1055:	
  2608  052B                     ;LCD.c: 51:     char dat;;LCD.c: 52:     PORTD|=0xff;
  2609                           	movlw	low(0FFh)
  2610  052B  30FF               	bcf	status, 5	;RP0=0, select bank0
  2611  052C  1283               	bcf	status, 6	;RP1=0, select bank0
  2612  052D  1303               	movwf	(8)	;volatile
  2613  052E  0088               	line	53
  2614                           	
  2615                           l1057:	
  2616  052F                     ;LCD.c: 53:     PORTEbits.RE0=0;
  2617                           	bcf	(9),0	;volatile
  2618  052F  1009               	line	54
  2619                           	
  2620                           l1059:	
  2621  0530                     ;LCD.c: 54:     PORTEbits.RE2=1;__nop();
  2622                           	bsf	(9),2	;volatile
  2623  0530  1509               	
  2624                           l1061:	
  2625  0531                     	opt	asmopt_push
  2626                           	opt	asmopt_off
  2627                           	nop
  2628  0531  0000               	opt	asmopt_pop
  2629                           	line	55
  2630                           	
  2631                           l1063:	
  2632  0532                     ;LCD.c: 55:     PORTEbits.RE1=1;
  2633                           	bcf	status, 5	;RP0=0, select bank0
  2634  0532  1283               	bcf	status, 6	;RP1=0, select bank0
  2635  0533  1303               	bsf	(9),1	;volatile
  2636  0534  1489               	line	56
  2637                           ;LCD.c: 56:     dat=PORTD;
  2638                           	movf	(8),w	;volatile
  2639  0535  0808               	movwf	(??_LCD_Read_dat+0)+0
  2640  0536  00F0               	movf	(??_LCD_Read_dat+0)+0,w
  2641  0537  0870               	movwf	(LCD_Read_dat@dat)
  2642  0538  00F1               	line	59
  2643                           	
  2644                           l1065:	
  2645  0539                     ;LCD.c: 59:     PORTEbits.RE1=0;__nop();
  2646                           	bcf	(9),1	;volatile
  2647  0539  1089               	
  2648                           l1067:	
  2649  053A                     	opt	asmopt_push
  2650                           	opt	asmopt_off
  2651                           	nop
  2652  053A  0000               	opt	asmopt_pop
  2653                           	line	60
  2654                           	
  2655                           l1069:	
  2656  053B                     ;LCD.c: 60:     PORTEbits.RE2=0;
  2657                           	bcf	status, 5	;RP0=0, select bank0
  2658  053B  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  053C  1303               	bcf	(9),2	;volatile
  2660  053D  1109               	line	61
  2661                           	
  2662                           l1071:	
  2663  053E                     ;LCD.c: 61:     PORTD=0;
  2664                           	clrf	(8)	;volatile
  2665  053E  0188               	line	62
  2666                           	
  2667                           l1073:	
  2668  053F                     ;LCD.c: 62:     return dat;
  2669                           	movf	(LCD_Read_dat@dat),w
  2670  053F  0871               	goto	l102
  2671  0540  2D41               	
  2672                           l1075:	
  2673  0541                     	line	64
  2674                           	
  2675                           l102:	
  2676  0541                     	return
  2677  0541  0008               	opt stack 0
  2678                           GLOBAL	__end_of_LCD_Read_dat
  2679                           	__end_of_LCD_Read_dat:
  2680  0542                     	signat	_LCD_Read_dat,89
  2681                           	global	_LCD_init
  2682                           
  2683 ;; *************** function _LCD_init *****************
  2684 ;; Defined at:
  2685 ;;		line 27 in file "LCD.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, status,2, status,0, pclath, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2699 ;;      Params:         0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    2
  2706 ;; This function calls:
  2707 ;;		_LCD_en_command
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2713                           	line	27
  2714                           global __ptext7
  2715                           __ptext7:	;psect for function _LCD_init
  2716  0578                     psect	text7
  2717                           	file	"LCD.c"
  2718                           	line	27
  2719                           	global	__size_of_LCD_init
  2720                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  2721  001F                     	
  2722                           _LCD_init:	
  2723  0578                     ;incstack = 0
  2724                           	opt	stack 5
  2725                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  2726                           	line	29
  2727                           	
  2728                           l1137:	
  2729  0578                     ;LCD.c: 29:     LCD_en_command(0x01);
  2730                           	movlw	low(01h)
  2731  0578  3001               	fcall	_LCD_en_command
  2732  0579  120A  118A  2672  120A  118A  	line	30
  2733                           ;LCD.c: 30:     LCD_en_command(0x38);
  2734                           	movlw	low(038h)
  2735  057E  3038               	fcall	_LCD_en_command
  2736  057F  120A  118A  2672  120A  118A  	line	31
  2737                           ;LCD.c: 31:     LCD_en_command(0x0C);
  2738                           	movlw	low(0Ch)
  2739  0584  300C               	fcall	_LCD_en_command
  2740  0585  120A  118A  2672  120A  118A  	line	32
  2741                           ;LCD.c: 32:     LCD_en_command(0x80);
  2742                           	movlw	low(080h)
  2743  058A  3080               	fcall	_LCD_en_command
  2744  058B  120A  118A  2672  120A  118A  	line	33
  2745                           ;LCD.c: 33:     LCD_en_command(0x01);
  2746                           	movlw	low(01h)
  2747  0590  3001               	fcall	_LCD_en_command
  2748  0591  120A  118A  2672  120A  118A  	line	34
  2749                           	
  2750                           l96:	
  2751  0596                     	return
  2752  0596  0008               	opt stack 0
  2753                           GLOBAL	__end_of_LCD_init
  2754                           	__end_of_LCD_init:
  2755  0597                     	signat	_LCD_init,89
  2756                           	global	_LCD_MCU_init
  2757                           
  2758 ;; *************** function _LCD_MCU_init *****************
  2759 ;; Defined at:
  2760 ;;		line 102 in file "LCD.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0
  2776 ;;      Temps:          1       0       0       0       0
  2777 ;;      Totals:         1       0       0       0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_main
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2787                           	line	102
  2788                           global __ptext8
  2789                           __ptext8:	;psect for function _LCD_MCU_init
  2790  04E9                     psect	text8
  2791                           	file	"LCD.c"
  2792                           	line	102
  2793                           	global	__size_of_LCD_MCU_init
  2794                           	__size_of_LCD_MCU_init	equ	__end_of_LCD_MCU_init-_LCD_MCU_init
  2795  000E                     	
  2796                           _LCD_MCU_init:	
  2797  04E9                     ;incstack = 0
  2798                           	opt	stack 7
  2799                           ; Regs used in _LCD_MCU_init: [wreg+status,2+status,0]
  2800                           	line	104
  2801                           	
  2802                           l1129:	
  2803  04E9                     ;LCD.c: 104:     TRISE&=0b11111000;
  2804                           	movlw	low(0F8h)
  2805  04E9  30F8               	movwf	(??_LCD_MCU_init+0)+0
  2806  04EA  00F0               	movf	(??_LCD_MCU_init+0)+0,w
  2807  04EB  0870               	bsf	status, 5	;RP0=1, select bank1
  2808  04EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2809  04ED  1303               	andwf	(137)^080h,f	;volatile
  2810  04EE  0589               	line	105
  2811                           	
  2812                           l1131:	
  2813  04EF                     ;LCD.c: 105:     ANSEL=0;
  2814                           	bsf	status, 5	;RP0=1, select bank3
  2815  04EF  1683               	bsf	status, 6	;RP1=1, select bank3
  2816  04F0  1703               	clrf	(392)^0180h	;volatile
  2817  04F1  0188               	line	106
  2818                           	
  2819                           l1133:	
  2820  04F2                     ;LCD.c: 106:     ANSELH=0;
  2821                           	clrf	(393)^0180h	;volatile
  2822  04F2  0189               	line	107
  2823                           	
  2824                           l1135:	
  2825  04F3                     ;LCD.c: 107:     TRISD=0;
  2826                           	bsf	status, 5	;RP0=1, select bank1
  2827  04F3  1683               	bcf	status, 6	;RP1=0, select bank1
  2828  04F4  1303               	clrf	(136)^080h	;volatile
  2829  04F5  0188               	line	109
  2830                           	
  2831                           l116:	
  2832  04F6                     	return
  2833  04F6  0008               	opt stack 0
  2834                           GLOBAL	__end_of_LCD_MCU_init
  2835                           	__end_of_LCD_MCU_init:
  2836  04F7                     	signat	_LCD_MCU_init,89
  2837                           	global	_InitScrn
  2838                           
  2839 ;; *************** function _InitScrn *****************
  2840 ;; Defined at:
  2841 ;;		line 112 in file "LCD.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         0       0       0       0       0
  2859 ;;Total ram usage:        0 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    2
  2862 ;; This function calls:
  2863 ;;		_LCD_en_command
  2864 ;;		_delay_ms
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2870                           	line	112
  2871                           global __ptext9
  2872                           __ptext9:	;psect for function _InitScrn
  2873  04F7                     psect	text9
  2874                           	file	"LCD.c"
  2875                           	line	112
  2876                           	global	__size_of_InitScrn
  2877                           	__size_of_InitScrn	equ	__end_of_InitScrn-_InitScrn
  2878  0010                     	
  2879                           _InitScrn:	
  2880  04F7                     ;incstack = 0
  2881                           	opt	stack 5
  2882                           ; Regs used in _InitScrn: [wreg+status,2+status,0+pclath+cstack]
  2883                           	line	114
  2884                           	
  2885                           l1139:	
  2886  04F7                     ;LCD.c: 114:     LCD_en_command(0x01);
  2887                           	movlw	low(01h)
  2888  04F7  3001               	fcall	_LCD_en_command
  2889  04F8  120A  118A  2672  120A  118A  	line	115
  2890                           ;LCD.c: 115:     delay_ms(10);
  2891                           	movlw	0Ah
  2892  04FD  300A               	movwf	(delay_ms@n)
  2893  04FE  00F0               	movlw	0
  2894  04FF  3000               	movwf	((delay_ms@n))+1
  2895  0500  00F1               	fcall	_delay_ms
  2896  0501  120A  118A  2597  120A  118A  	line	117
  2897                           	
  2898                           l119:	
  2899  0506                     	return
  2900  0506  0008               	opt stack 0
  2901                           GLOBAL	__end_of_InitScrn
  2902                           	__end_of_InitScrn:
  2903  0507                     	signat	_InitScrn,89
  2904                           	global	_LCD_en_command
  2905                           
  2906 ;; *************** function _LCD_en_command *****************
  2907 ;; Defined at:
  2908 ;;		line 6 in file "LCD.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  command         1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  command         1    6[COMMON] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, pclath, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         0       0       0       0       0
  2923 ;;      Locals:         1       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0
  2925 ;;      Totals:         1       0       0       0       0
  2926 ;;Total ram usage:        1 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    1
  2929 ;; This function calls:
  2930 ;;		_delay_ms
  2931 ;;		_delay_us
  2932 ;; This function is called by:
  2933 ;;		_LCD_init
  2934 ;;		_LCD_set_xy
  2935 ;;		_InitScrn
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2939                           	line	6
  2940                           global __ptext10
  2941                           __ptext10:	;psect for function _LCD_en_command
  2942  0672                     psect	text10
  2943                           	file	"LCD.c"
  2944                           	line	6
  2945                           	global	__size_of_LCD_en_command
  2946                           	__size_of_LCD_en_command	equ	__end_of_LCD_en_command-_LCD_en_command
  2947  0042                     	
  2948                           _LCD_en_command:	
  2949  0672                     ;incstack = 0
  2950                           	opt	stack 4
  2951                           ; Regs used in _LCD_en_command: [wreg+status,2+status,0+pclath+cstack]
  2952                           ;LCD_en_command@command stored from wreg
  2953                           	movwf	(LCD_en_command@command)
  2954  0672  00F6               	line	8
  2955                           	
  2956                           l1031:	
  2957  0673                     ;LCD.c: 6: void LCD_en_command(unsigned char command);LCD.c: 7: {;LCD.c: 8:     PORTEbit
                                 s.RE1=0;
  2958                           	bcf	status, 5	;RP0=0, select bank0
  2959  0673  1283               	bcf	status, 6	;RP1=0, select bank0
  2960  0674  1303               	bcf	(9),1	;volatile
  2961  0675  1089               	line	9
  2962                           ;LCD.c: 9:     PORTEbits.RE0=0;
  2963                           	bcf	(9),0	;volatile
  2964  0676  1009               	line	10
  2965                           ;LCD.c: 10:     PORTEbits.RE2=0;
  2966                           	bcf	(9),2	;volatile
  2967  0677  1109               	line	11
  2968                           	
  2969                           l1033:	
  2970  0678                     ;LCD.c: 11:     PORTD=command;
  2971                           	movf	(LCD_en_command@command),w
  2972  0678  0876               	movwf	(8)	;volatile
  2973  0679  0088               	line	13
  2974                           	
  2975                           l1035:	
  2976  067A                     ;LCD.c: 13:     delay_us(8);
  2977                           	movlw	low(08h)
  2978  067A  3008               	fcall	_delay_us
  2979  067B  120A  118A  24DC  120A  118A  	line	14
  2980                           	
  2981                           l1037:	
  2982  0680                     ;LCD.c: 14:     delay_us(8);
  2983                           	movlw	low(08h)
  2984  0680  3008               	fcall	_delay_us
  2985  0681  120A  118A  24DC  120A  118A  	line	15
  2986                           	
  2987                           l1039:	
  2988  0686                     ;LCD.c: 15:     delay_us(8);
  2989                           	movlw	low(08h)
  2990  0686  3008               	fcall	_delay_us
  2991  0687  120A  118A  24DC  120A  118A  	line	16
  2992                           	
  2993                           l1041:	
  2994  068C                     ;LCD.c: 16:     delay_us(8);
  2995                           	movlw	low(08h)
  2996  068C  3008               	fcall	_delay_us
  2997  068D  120A  118A  24DC  120A  118A  	line	17
  2998                           	
  2999                           l1043:	
  3000  0692                     ;LCD.c: 17:     delay_us(8);
  3001                           	movlw	low(08h)
  3002  0692  3008               	fcall	_delay_us
  3003  0693  120A  118A  24DC  120A  118A  	line	18
  3004                           	
  3005                           l1045:	
  3006  0698                     ;LCD.c: 18:     delay_us(8);
  3007                           	movlw	low(08h)
  3008  0698  3008               	fcall	_delay_us
  3009  0699  120A  118A  24DC  120A  118A  	line	20
  3010                           	
  3011                           l1047:	
  3012  069E                     ;LCD.c: 20:     PORTEbits.RE1=1;
  3013                           	bcf	status, 5	;RP0=0, select bank0
  3014  069E  1283               	bcf	status, 6	;RP1=0, select bank0
  3015  069F  1303               	bsf	(9),1	;volatile
  3016  06A0  1489               	line	21
  3017                           	
  3018                           l1049:	
  3019  06A1                     ;LCD.c: 21:     delay_ms(1);
  3020                           	movlw	01h
  3021  06A1  3001               	movwf	(delay_ms@n)
  3022  06A2  00F0               	movlw	0
  3023  06A3  3000               	movwf	((delay_ms@n))+1
  3024  06A4  00F1               	fcall	_delay_ms
  3025  06A5  120A  118A  2597  120A  118A  	line	22
  3026                           	
  3027                           l1051:	
  3028  06AA                     ;LCD.c: 22:     delay_us(8);
  3029                           	movlw	low(08h)
  3030  06AA  3008               	fcall	_delay_us
  3031  06AB  120A  118A  24DC  120A  118A  	line	23
  3032                           	
  3033                           l1053:	
  3034  06B0                     ;LCD.c: 23:     PORTEbits.RE1=0;
  3035                           	bcf	status, 5	;RP0=0, select bank0
  3036  06B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3037  06B1  1303               	bcf	(9),1	;volatile
  3038  06B2  1089               	line	24
  3039                           	
  3040                           l93:	
  3041  06B3                     	return
  3042  06B3  0008               	opt stack 0
  3043                           GLOBAL	__end_of_LCD_en_command
  3044                           	__end_of_LCD_en_command:
  3045  06B4                     	signat	_LCD_en_command,4217
  3046                           	global	_ButtonDetect
  3047                           
  3048 ;; *************** function _ButtonDetect *****************
  3049 ;; Defined at:
  3050 ;;		line 23 in file "BUTTON.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    2
  3071 ;; This function calls:
  3072 ;;		_AD_SUB
  3073 ;;		_isBUTTONOn
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3079                           	file	"BUTTON.c"
  3080                           	line	23
  3081                           global __ptext11
  3082                           __ptext11:	;psect for function _ButtonDetect
  3083  05C0                     psect	text11
  3084                           	file	"BUTTON.c"
  3085                           	line	23
  3086                           	global	__size_of_ButtonDetect
  3087                           	__size_of_ButtonDetect	equ	__end_of_ButtonDetect-_ButtonDetect
  3088  0037                     	
  3089                           _ButtonDetect:	
  3090  05C0                     ;incstack = 0
  3091                           	opt	stack 5
  3092                           ; Regs used in _ButtonDetect: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3093                           	line	25
  3094                           	
  3095                           l1147:	
  3096  05C0                     ;BUTTON.c: 25:     if(flag_but_once)
  3097                           	bcf	status, 5	;RP0=0, select bank0
  3098  05C0  1283               	bcf	status, 6	;RP1=0, select bank0
  3099  05C1  1303               	movf	((_flag_but_once)),w
  3100  05C2  082D               	btfsc	status,2
  3101  05C3  1903               	goto	u371
  3102  05C4  2DC6               	goto	u370
  3103  05C5  2DC7               u371:
  3104  05C6                     	goto	l1153
  3105  05C6  2DCA               u370:
  3106  05C7                     	goto	l225
  3107  05C7  2DF6               	line	26
  3108                           	
  3109                           l1149:	
  3110  05C8                     ;BUTTON.c: 26:         return;
  3111                           	goto	l225
  3112  05C8  2DF6               	
  3113                           l1151:	
  3114  05C9                     	goto	l225
  3115  05C9  2DF6               	line	27
  3116                           ;BUTTON.c: 27:     else if(isBUTTONOn())
  3117                           	
  3118                           l224:	
  3119  05CA                     	
  3120                           l1153:	
  3121  05CA                     	fcall	_isBUTTONOn
  3122  05CA  120A  118A  255C  120A  118A  	xorlw	0
  3123  05CF  3A00               	skipnz
  3124  05D0  1903               	goto	u381
  3125  05D1  2DD3               	goto	u380
  3126  05D2  2DD4               u381:
  3127  05D3                     	goto	l225
  3128  05D3  2DF6               u380:
  3129  05D4                     	line	30
  3130                           	
  3131                           l1155:	
  3132  05D4                     ;BUTTON.c: 28:     {;BUTTON.c: 30:        AD_SUB(0);
  3133                           	movlw	low(0)
  3134  05D4  3000               	fcall	_AD_SUB
  3135  05D5  120A  118A  25F7  120A  118A  	line	31
  3136                           	
  3137                           l1157:	
  3138  05DA                     ;BUTTON.c: 31:        if(ADresult <= 512)
  3139                           	bcf	status, 5	;RP0=0, select bank0
  3140  05DA  1283               	bcf	status, 6	;RP1=0, select bank0
  3141  05DB  1303               		movf	(_ADresult+3),w
  3142  05DC  0827               	btfss	status,2
  3143  05DD  1D03               	goto	u391
  3144  05DE  2DED               	movf	(_ADresult+2),w
  3145  05DF  0826               	btfss	status,2
  3146  05E0  1D03               	goto	u391
  3147  05E1  2DED               	movlw	2
  3148  05E2  3002               	subwf	(_ADresult+1),w
  3149  05E3  0225               	skipz
  3150  05E4  1D03               	goto	u393
  3151  05E5  2DEA               	movlw	1
  3152  05E6  3001               	subwf	(_ADresult),w
  3153  05E7  0224               	skipz
  3154  05E8  1D03               	goto	u393
  3155  05E9  2DEA               u393:
  3156  05EA                     	btfsc	status,0
  3157  05EA  1803               	goto	u391
  3158  05EB  2DED               	goto	u390
  3159  05EC  2DEE               
  3160                           u391:
  3161  05ED                     	goto	l225
  3162  05ED  2DF6               u390:
  3163  05EE                     	line	33
  3164                           	
  3165                           l1159:	
  3166  05EE                     ;BUTTON.c: 32:        {;BUTTON.c: 33:            flag_ph_st=1;
  3167                           	clrf	(_flag_ph_st)
  3168  05EE  01AC               	incf	(_flag_ph_st),f
  3169  05EF  0AAC               	line	34
  3170                           ;BUTTON.c: 34:            flag_but_once=1;
  3171                           	clrf	(_flag_but_once)
  3172  05F0  01AD               	incf	(_flag_but_once),f
  3173  05F1  0AAD               	line	35
  3174                           ;BUTTON.c: 35:            PORTCbits.RC1=1;
  3175                           	bsf	(7),1	;volatile
  3176  05F2  1487               	goto	l225
  3177  05F3  2DF6               	line	36
  3178                           ;BUTTON.c: 36:        }
  3179                           	
  3180                           l228:	
  3181  05F4                     	goto	l225
  3182  05F4  2DF6               	line	37
  3183                           ;BUTTON.c: 37:     }
  3184                           	
  3185                           l227:	
  3186  05F5                     	goto	l225
  3187  05F5  2DF6               	
  3188                           l226:	
  3189  05F6                     	line	38
  3190                           	
  3191                           l225:	
  3192  05F6                     	return
  3193  05F6  0008               	opt stack 0
  3194                           GLOBAL	__end_of_ButtonDetect
  3195                           	__end_of_ButtonDetect:
  3196  05F7                     	signat	_ButtonDetect,89
  3197                           	global	_isBUTTONOn
  3198                           
  3199 ;; *************** function _isBUTTONOn *****************
  3200 ;; Defined at:
  3201 ;;		line 11 in file "BUTTON.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;		None
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      unsigned char 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       0       0       0       0
  3216 ;;      Locals:         0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0
  3218 ;;      Totals:         0       0       0       0       0
  3219 ;;Total ram usage:        0 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    1
  3222 ;; This function calls:
  3223 ;;		_delay_ms
  3224 ;; This function is called by:
  3225 ;;		_ButtonDetect
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3229                           	line	11
  3230                           global __ptext12
  3231                           __ptext12:	;psect for function _isBUTTONOn
  3232  055C                     psect	text12
  3233                           	file	"BUTTON.c"
  3234                           	line	11
  3235                           	global	__size_of_isBUTTONOn
  3236                           	__size_of_isBUTTONOn	equ	__end_of_isBUTTONOn-_isBUTTONOn
  3237  001C                     	
  3238                           _isBUTTONOn:	
  3239  055C                     ;incstack = 0
  3240                           	opt	stack 5
  3241                           ; Regs used in _isBUTTONOn: [wreg+status,2+status,0+pclath+cstack]
  3242                           	line	13
  3243                           	
  3244                           l1113:	
  3245  055C                     ;BUTTON.c: 13:     if(!PORTBbits.RB7)
  3246                           	bcf	status, 5	;RP0=0, select bank0
  3247  055C  1283               	bcf	status, 6	;RP1=0, select bank0
  3248  055D  1303               	btfsc	(6),7	;volatile
  3249  055E  1B86               	goto	u351
  3250  055F  2D61               	goto	u350
  3251  0560  2D62               u351:
  3252  0561                     	goto	l1123
  3253  0561  2D75               u350:
  3254  0562                     	line	15
  3255                           	
  3256                           l1115:	
  3257  0562                     ;BUTTON.c: 14:     {;BUTTON.c: 15:         delay_ms(15);
  3258                           	movlw	0Fh
  3259  0562  300F               	movwf	(delay_ms@n)
  3260  0563  00F0               	movlw	0
  3261  0564  3000               	movwf	((delay_ms@n))+1
  3262  0565  00F1               	fcall	_delay_ms
  3263  0566  120A  118A  2597  120A  118A  	line	16
  3264                           	
  3265                           l1117:	
  3266  056B                     ;BUTTON.c: 16:         if(!PORTBbits.RB7)
  3267                           	bcf	status, 5	;RP0=0, select bank0
  3268  056B  1283               	bcf	status, 6	;RP1=0, select bank0
  3269  056C  1303               	btfsc	(6),7	;volatile
  3270  056D  1B86               	goto	u361
  3271  056E  2D70               	goto	u360
  3272  056F  2D71               u361:
  3273  0570                     	goto	l1123
  3274  0570  2D75               u360:
  3275  0571                     	line	18
  3276                           	
  3277                           l1119:	
  3278  0571                     ;BUTTON.c: 17:         {;BUTTON.c: 18:             return 1;
  3279                           	movlw	low(01h)
  3280  0571  3001               	goto	l221
  3281  0572  2D77               	
  3282                           l1121:	
  3283  0573                     	goto	l221
  3284  0573  2D77               	line	19
  3285                           ;BUTTON.c: 19:         }
  3286                           	
  3287                           l220:	
  3288  0574                     	goto	l1123
  3289  0574  2D75               	line	20
  3290                           ;BUTTON.c: 20:     }
  3291                           	
  3292                           l219:	
  3293  0575                     	line	21
  3294                           	
  3295                           l1123:	
  3296  0575                     ;BUTTON.c: 21:     return 0;
  3297                           	movlw	low(0)
  3298  0575  3000               	goto	l221
  3299  0576  2D77               	
  3300                           l1125:	
  3301  0577                     	line	22
  3302                           	
  3303                           l221:	
  3304  0577                     	return
  3305  0577  0008               	opt stack 0
  3306                           GLOBAL	__end_of_isBUTTONOn
  3307                           	__end_of_isBUTTONOn:
  3308  0578                     	signat	_isBUTTONOn,89
  3309                           	global	_delay_ms
  3310                           
  3311 ;; *************** function _delay_ms *****************
  3312 ;; Defined at:
  3313 ;;		line 3 in file "DELAY.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  n               2    0[COMMON] unsigned int 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  j               2    3[COMMON] unsigned int 
  3318 ;;  k               1    5[COMMON] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         2       0       0       0       0
  3329 ;;      Locals:         3       0       0       0       0
  3330 ;;      Temps:          1       0       0       0       0
  3331 ;;      Totals:         6       0       0       0       0
  3332 ;;Total ram usage:        6 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;;		_LCD_en_command
  3339 ;;		_InitScrn
  3340 ;;		_isBUTTONOn
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3344                           	file	"DELAY.c"
  3345                           	line	3
  3346                           global __ptext13
  3347                           __ptext13:	;psect for function _delay_ms
  3348  0597                     psect	text13
  3349                           	file	"DELAY.c"
  3350                           	line	3
  3351                           	global	__size_of_delay_ms
  3352                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  3353  0029                     	
  3354                           _delay_ms:	
  3355  0597                     ;incstack = 0
  3356                           	opt	stack 7
  3357                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  3358                           	line	7
  3359                           	
  3360                           l1013:	
  3361  0597                     ;DELAY.c: 3: void delay_ms(unsigned int n);DELAY.c: 4: {;DELAY.c: 5:     unsigned int j;
                                 ;DELAY.c: 6:     char k;;DELAY.c: 7:     for(j=0;j<n;j++)
  3362                           	clrf	(delay_ms@j)
  3363  0597  01F3               	clrf	(delay_ms@j+1)
  3364  0598  01F4               	goto	l131
  3365  0599  2DB4               	
  3366                           l132:	
  3367  059A                     	line	8
  3368                           	
  3369                           l1015:	
  3370  059A                     ;DELAY.c: 8:         for(k=108;k>0;k--)
  3371                           	movlw	low(06Ch)
  3372  059A  306C               	movwf	(??_delay_ms+0)+0
  3373  059B  00F2               	movf	(??_delay_ms+0)+0,w
  3374  059C  0872               	movwf	(delay_ms@k)
  3375  059D  00F5               	
  3376                           l1017:	
  3377  059E                     	movf	((delay_ms@k)),w
  3378  059E  0875               	btfss	status,2
  3379  059F  1D03               	goto	u271
  3380  05A0  2DA2               	goto	u270
  3381  05A1  2DA3               u271:
  3382  05A2                     	goto	l133
  3383  05A2  2DA5               u270:
  3384  05A3                     	goto	l1023
  3385  05A3  2DAE               	
  3386                           l1019:	
  3387  05A4                     	goto	l1023
  3388  05A4  2DAE               	
  3389                           l133:	
  3390  05A5                     	line	10
  3391                           ;DELAY.c: 9:         {;DELAY.c: 10:             __nop();
  3392                           	opt	asmopt_push
  3393                           	opt	asmopt_off
  3394                           	nop
  3395  05A5  0000               	opt	asmopt_pop
  3396                           	line	11
  3397                           	
  3398                           l1021:	
  3399  05A6                     ;DELAY.c: 11:         }
  3400                           	movlw	01h
  3401  05A6  3001               	subwf	(delay_ms@k),f
  3402  05A7  02F5               	movf	((delay_ms@k)),w
  3403  05A8  0875               	btfss	status,2
  3404  05A9  1D03               	goto	u281
  3405  05AA  2DAC               	goto	u280
  3406  05AB  2DAD               u281:
  3407  05AC                     	goto	l133
  3408  05AC  2DA5               u280:
  3409  05AD                     	goto	l1023
  3410  05AD  2DAE               	
  3411                           l134:	
  3412  05AE                     	
  3413                           l1023:	
  3414  05AE                     	movlw	01h
  3415  05AE  3001               	addwf	(delay_ms@j),f
  3416  05AF  07F3               	skipnc
  3417  05B0  1803               	incf	(delay_ms@j+1),f
  3418  05B1  0AF4               	movlw	0
  3419  05B2  3000               	addwf	(delay_ms@j+1),f
  3420  05B3  07F4               	
  3421                           l131:	
  3422  05B4                     	movf	(delay_ms@n+1),w
  3423  05B4  0871               	subwf	(delay_ms@j+1),w
  3424  05B5  0274               	skipz
  3425  05B6  1D03               	goto	u295
  3426  05B7  2DBA               	movf	(delay_ms@n),w
  3427  05B8  0870               	subwf	(delay_ms@j),w
  3428  05B9  0273               u295:
  3429  05BA                     	skipc
  3430  05BA  1C03               	goto	u291
  3431  05BB  2DBD               	goto	u290
  3432  05BC  2DBE               u291:
  3433  05BD                     	goto	l1015
  3434  05BD  2D9A               u290:
  3435  05BE                     	goto	l136
  3436  05BE  2DBF               	
  3437                           l135:	
  3438  05BF                     	line	12
  3439                           	
  3440                           l136:	
  3441  05BF                     	return
  3442  05BF  0008               	opt stack 0
  3443                           GLOBAL	__end_of_delay_ms
  3444                           	__end_of_delay_ms:
  3445  05C0                     	signat	_delay_ms,4217
  3446                           	global	_AD_SUB
  3447                           
  3448 ;; *************** function _AD_SUB *****************
  3449 ;; Defined at:
  3450 ;;		line 33 in file "AD.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  k               1    wreg     unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  k               1    5[COMMON] unsigned char 
  3455 ;;  i               1    0        unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       0       0       0       0
  3466 ;;      Locals:         1       0       0       0       0
  3467 ;;      Temps:          4       0       0       0       0
  3468 ;;      Totals:         5       0       0       0       0
  3469 ;;Total ram usage:        5 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    1
  3472 ;; This function calls:
  3473 ;;		_delay_us
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;;		_ButtonDetect
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3480                           	file	"AD.c"
  3481                           	line	33
  3482                           global __ptext14
  3483                           __ptext14:	;psect for function _AD_SUB
  3484  05F7                     psect	text14
  3485                           	file	"AD.c"
  3486                           	line	33
  3487                           	global	__size_of_AD_SUB
  3488                           	__size_of_AD_SUB	equ	__end_of_AD_SUB-_AD_SUB
  3489  003D                     	
  3490                           _AD_SUB:	
  3491  05F7                     ;incstack = 0
  3492                           	opt	stack 5
  3493                           ; Regs used in _AD_SUB: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3494                           ;AD_SUB@k stored from wreg
  3495                           	movwf	(AD_SUB@k)
  3496  05F7  00F5               	line	36
  3497                           	
  3498                           l1077:	
  3499  05F8                     ;AD.c: 33: void AD_SUB(char k);AD.c: 34: {;AD.c: 35:     char i;;AD.c: 36:     ADCON0=0b
                                 01000000;
  3500                           	movlw	low(040h)
  3501  05F8  3040               	bcf	status, 5	;RP0=0, select bank0
  3502  05F9  1283               	bcf	status, 6	;RP1=0, select bank0
  3503  05FA  1303               	movwf	(31)	;volatile
  3504  05FB  009F               	line	37
  3505                           	
  3506                           l1079:	
  3507  05FC                     ;AD.c: 37:     ADCON0 |=(k<<2);
  3508                           	movf	(AD_SUB@k),w	;volatile
  3509  05FC  0875               	movwf	(??_AD_SUB+0)+0
  3510  05FD  00F1               	movlw	(02h)-1
  3511  05FE  3001               u315:
  3512  05FF                     	clrc
  3513  05FF  1003               	rlf	(??_AD_SUB+0)+0,f
  3514  0600  0DF1               	addlw	-1
  3515  0601  3EFF               	skipz
  3516  0602  1D03               	goto	u315
  3517  0603  2DFF               	clrc
  3518  0604  1003               	rlf	(??_AD_SUB+0)+0,w
  3519  0605  0D71               	movwf	(??_AD_SUB+1)+0
  3520  0606  00F2               	movf	(??_AD_SUB+1)+0,w
  3521  0607  0872               	iorwf	(31),f	;volatile
  3522  0608  049F               	line	38
  3523                           	
  3524                           l1081:	
  3525  0609                     ;AD.c: 38:     ADCON0bits.ADON=1;
  3526                           	bsf	(31),0	;volatile
  3527  0609  141F               	line	39
  3528                           	
  3529                           l1083:	
  3530  060A                     ;AD.c: 39:     delay_us(0);
  3531                           	movlw	low(0)
  3532  060A  3000               	fcall	_delay_us
  3533  060B  120A  118A  24DC  120A  118A  	line	40
  3534                           	
  3535                           l1085:	
  3536  0610                     ;AD.c: 40:     ADCON0bits.GO=1;
  3537                           	bcf	status, 5	;RP0=0, select bank0
  3538  0610  1283               	bcf	status, 6	;RP1=0, select bank0
  3539  0611  1303               	bsf	(31),1	;volatile
  3540  0612  149F               	line	41
  3541                           ;AD.c: 41:     while(ADCON0bits.GO==1);
  3542                           	goto	l177
  3543  0613  2E14               	
  3544                           l178:	
  3545  0614                     	
  3546                           l177:	
  3547  0614                     	btfsc	(31),1	;volatile
  3548  0614  189F               	goto	u321
  3549  0615  2E17               	goto	u320
  3550  0616  2E18               u321:
  3551  0617                     	goto	l177
  3552  0617  2E14               u320:
  3553  0618                     	
  3554                           l179:	
  3555  0618                     	line	42
  3556                           ;AD.c: 42:     PIR1bits.ADIF=0;
  3557                           	bcf	(12),6	;volatile
  3558  0618  130C               	line	43
  3559                           ;AD.c: 43:     ADCON0bits.GO=0;
  3560                           	bcf	(31),1	;volatile
  3561  0619  109F               	line	44
  3562                           ;AD.c: 44:     ADCON0bits.ADON=0;
  3563                           	bcf	(31),0	;volatile
  3564  061A  101F               	line	45
  3565                           	
  3566                           l1087:	
  3567  061B                     ;AD.c: 45:     ADresult= (ADRESH<<8)|ADRESL;
  3568                           	bsf	status, 5	;RP0=1, select bank1
  3569  061B  1683               	bcf	status, 6	;RP1=0, select bank1
  3570  061C  1303               	movf	(158)^080h,w	;volatile
  3571  061D  081E               	movwf	(??_AD_SUB+0)+0
  3572  061E  00F1               	clrf	(??_AD_SUB+0)+0+1
  3573  061F  01F2               	bcf	status, 5	;RP0=0, select bank0
  3574  0620  1283               	bcf	status, 6	;RP1=0, select bank0
  3575  0621  1303               	movf	(30),w	;volatile
  3576  0622  081E               	movwf	(??_AD_SUB+2)+0
  3577  0623  00F3               	clrf	(??_AD_SUB+2)+0+1
  3578  0624  01F4               	movf	(??_AD_SUB+2)+0,w
  3579  0625  0873               	movwf	(??_AD_SUB+2)+1
  3580  0626  00F4               	clrf	(??_AD_SUB+2)+0
  3581  0627  01F3               	movf	0+(??_AD_SUB+0)+0,w
  3582  0628  0871               	iorwf	0+(??_AD_SUB+2)+0,w
  3583  0629  0473               	movwf	(_ADresult)
  3584  062A  00A4               	movf	1+(??_AD_SUB+0)+0,w
  3585  062B  0872               	iorwf	1+(??_AD_SUB+2)+0,w
  3586  062C  0474               	movwf	1+(_ADresult)
  3587  062D  00A5               	clrf	(_ADresult)+2
  3588  062E  01A6               	btfsc	(_ADresult)+1,7
  3589  062F  1BA5               	decf	2+(_ADresult),f
  3590  0630  03A6               	movf	(_ADresult)+2,w
  3591  0631  0826               	movwf	3+(_ADresult)
  3592  0632  00A7               	line	47
  3593                           	
  3594                           l180:	
  3595  0633                     	return
  3596  0633  0008               	opt stack 0
  3597                           GLOBAL	__end_of_AD_SUB
  3598                           	__end_of_AD_SUB:
  3599  0634                     	signat	_AD_SUB,4217
  3600                           	global	_delay_us
  3601                           
  3602 ;; *************** function _delay_us *****************
  3603 ;; Defined at:
  3604 ;;		line 13 in file "DELAY.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  n               1    wreg     unsigned char 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  n               1    0[COMMON] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         0       0       0       0       0
  3619 ;;      Locals:         1       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0
  3621 ;;      Totals:         1       0       0       0       0
  3622 ;;Total ram usage:        1 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_LCD_en_command
  3628 ;;		_LCD_en_dat
  3629 ;;		_AD_SUB
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3633                           	file	"DELAY.c"
  3634                           	line	13
  3635                           global __ptext15
  3636                           __ptext15:	;psect for function _delay_us
  3637  04DC                     psect	text15
  3638                           	file	"DELAY.c"
  3639                           	line	13
  3640                           	global	__size_of_delay_us
  3641                           	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  3642  000D                     	
  3643                           _delay_us:	
  3644  04DC                     ;incstack = 0
  3645                           	opt	stack 4
  3646                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  3647                           ;delay_us@n stored from wreg
  3648                           	movwf	(delay_us@n)
  3649  04DC  00F0               	line	16
  3650                           	
  3651                           l1025:	
  3652  04DD                     ;DELAY.c: 13: void delay_us(unsigned char n);DELAY.c: 14: {;DELAY.c: 16:     __nop();
  3653                           	opt	asmopt_push
  3654                           	opt	asmopt_off
  3655                           	nop
  3656  04DD  0000               	opt	asmopt_pop
  3657                           	line	17
  3658                           ;DELAY.c: 17:     while(n>0)
  3659                           	goto	l1029
  3660  04DE  2CE2               	
  3661                           l140:	
  3662  04DF                     	line	19
  3663                           	
  3664                           l1027:	
  3665  04DF                     ;DELAY.c: 18:     {;DELAY.c: 19:         n--;
  3666                           	movlw	01h
  3667  04DF  3001               	subwf	(delay_us@n),f
  3668  04E0  02F0               	goto	l1029
  3669  04E1  2CE2               	line	20
  3670                           ;DELAY.c: 20:     }
  3671                           	
  3672                           l139:	
  3673  04E2                     	line	17
  3674                           	
  3675                           l1029:	
  3676  04E2                     ;DELAY.c: 17:     while(n>0)
  3677                           	movf	((delay_us@n)),w
  3678  04E2  0870               	btfss	status,2
  3679  04E3  1D03               	goto	u301
  3680  04E4  2CE6               	goto	u300
  3681  04E5  2CE7               u301:
  3682  04E6                     	goto	l1027
  3683  04E6  2CDF               u300:
  3684  04E7                     	goto	l142
  3685  04E7  2CE8               	
  3686                           l141:	
  3687  04E8                     	line	22
  3688                           	
  3689                           l142:	
  3690  04E8                     	return
  3691  04E8  0008               	opt stack 0
  3692                           GLOBAL	__end_of_delay_us
  3693                           	__end_of_delay_us:
  3694  04E9                     	signat	_delay_us,4217
  3695                           	global	_BUTTONMCUInit
  3696                           
  3697 ;; *************** function _BUTTONMCUInit *****************
  3698 ;; Defined at:
  3699 ;;		line 6 in file "BUTTON.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3713 ;;      Params:         0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0
  3716 ;;      Totals:         1       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_main
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3726                           	file	"BUTTON.c"
  3727                           	line	6
  3728                           global __ptext16
  3729                           __ptext16:	;psect for function _BUTTONMCUInit
  3730  04B4                     psect	text16
  3731                           	file	"BUTTON.c"
  3732                           	line	6
  3733                           	global	__size_of_BUTTONMCUInit
  3734                           	__size_of_BUTTONMCUInit	equ	__end_of_BUTTONMCUInit-_BUTTONMCUInit
  3735  0008                     	
  3736                           _BUTTONMCUInit:	
  3737  04B4                     ;incstack = 0
  3738                           	opt	stack 7
  3739                           ; Regs used in _BUTTONMCUInit: [wreg+status,2+status,0]
  3740                           	line	8
  3741                           	
  3742                           l1143:	
  3743  04B4                     ;BUTTON.c: 8:     TRISBbits.TRISB7=1;
  3744                           	bsf	status, 5	;RP0=1, select bank1
  3745  04B4  1683               	bcf	status, 6	;RP1=0, select bank1
  3746  04B5  1303               	bsf	(134)^080h,7	;volatile
  3747  04B6  1786               	line	9
  3748                           	
  3749                           l1145:	
  3750  04B7                     ;BUTTON.c: 9:     OPTION_REG&=0x7f;
  3751                           	movlw	low(07Fh)
  3752  04B7  307F               	movwf	(??_BUTTONMCUInit+0)+0
  3753  04B8  00F0               	movf	(??_BUTTONMCUInit+0)+0,w
  3754  04B9  0870               	andwf	(129)^080h,f	;volatile
  3755  04BA  0581               	line	10
  3756                           	
  3757                           l216:	
  3758  04BB                     	return
  3759  04BB  0008               	opt stack 0
  3760                           GLOBAL	__end_of_BUTTONMCUInit
  3761                           	__end_of_BUTTONMCUInit:
  3762  04BC                     	signat	_BUTTONMCUInit,89
  3763                           	global	_AD_MCU_INIT
  3764                           
  3765 ;; *************** function _AD_MCU_INIT *****************
  3766 ;; Defined at:
  3767 ;;		line 48 in file "AD.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  3794                           	file	"AD.c"
  3795                           	line	48
  3796                           global __ptext17
  3797                           __ptext17:	;psect for function _AD_MCU_INIT
  3798  04CF                     psect	text17
  3799                           	file	"AD.c"
  3800                           	line	48
  3801                           	global	__size_of_AD_MCU_INIT
  3802                           	__size_of_AD_MCU_INIT	equ	__end_of_AD_MCU_INIT-_AD_MCU_INIT
  3803  000D                     	
  3804                           _AD_MCU_INIT:	
  3805  04CF                     ;incstack = 0
  3806                           	opt	stack 7
  3807                           ; Regs used in _AD_MCU_INIT: [wreg]
  3808                           	line	51
  3809                           	
  3810                           l1141:	
  3811  04CF                     ;AD.c: 51:  TRISA=0b00001111;
  3812                           	movlw	low(0Fh)
  3813  04CF  300F               	bsf	status, 5	;RP0=1, select bank1
  3814  04D0  1683               	bcf	status, 6	;RP1=0, select bank1
  3815  04D1  1303               	movwf	(133)^080h	;volatile
  3816  04D2  0085               	line	52
  3817                           ;AD.c: 52:  ANSEL=0b00001111;
  3818                           	movlw	low(0Fh)
  3819  04D3  300F               	bsf	status, 5	;RP0=1, select bank3
  3820  04D4  1683               	bsf	status, 6	;RP1=1, select bank3
  3821  04D5  1703               	movwf	(392)^0180h	;volatile
  3822  04D6  0088               	line	55
  3823                           ;AD.c: 55:     ADCON1=0b10000000;
  3824                           	movlw	low(080h)
  3825  04D7  3080               	bsf	status, 5	;RP0=1, select bank1
  3826  04D8  1683               	bcf	status, 6	;RP1=0, select bank1
  3827  04D9  1303               	movwf	(159)^080h	;volatile
  3828  04DA  009F               	line	56
  3829                           	
  3830                           l183:	
  3831  04DB                     	return
  3832  04DB  0008               	opt stack 0
  3833                           GLOBAL	__end_of_AD_MCU_INIT
  3834                           	__end_of_AD_MCU_INIT:
  3835  04DC                     	signat	_AD_MCU_INIT,89
  3836                           global	___latbits
  3837                           ___latbits	equ	2
  3838  0002                     	global	btemp
  3839                           	btemp set 07Eh
  3840  007E                     
  3841                           	DABS	1,126,2	;btemp
  3842                           	global	wtemp0
  3843                           	wtemp0 set btemp+0
  3844  007E                     	end


Data Sizes:
    Strings     26
    Constant    0
    Data        4
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@s	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[4]), STR_2(CODE[9]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_LCD_write_string
    _LCD_write_string->_LCD_set_xy
    _LCD_set_xy->_LCD_en_command
    _LCD_en_dat->_delay_us
    _LCD_Busy->_LCD_Read_dat
    _LCD_init->_LCD_en_command
    _InitScrn->_LCD_en_command
    _LCD_en_command->_delay_ms
    _ButtonDetect->_AD_SUB
    _isBUTTONOn->_delay_ms
    _AD_SUB->_delay_us

Critical Paths under _main in BANK0

    _main->_LCD_write_string

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4489
                                              1 BANK0      2     2      0
                        _AD_MCU_INIT
                             _AD_SUB
                      _BUTTONMCUInit
                       _ButtonDetect
                           _InitScrn
                       _LCD_MCU_init
                           _LCD_init
                   _LCD_write_string
                       _LED_MCU_INIT
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LED_MCU_INIT                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     4     2      2    1569
                                             11 COMMON     3     1      2
                                              0 BANK0      1     1      0
                           _LCD_Busy
                         _LCD_en_dat
                         _LCD_set_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_set_xy                                           4     3      1     759
                                              7 COMMON     4     3      1
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (2) _LCD_en_dat                                           1     1      0      45
                                              1 COMMON     1     1      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _LCD_Busy                                             2     2      0      46
                                              2 COMMON     2     2      0
                       _LCD_Read_dat
 ---------------------------------------------------------------------------------
 (3) _LCD_Read_dat                                         2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0     593
                     _LCD_en_command
 ---------------------------------------------------------------------------------
 (1) _LCD_MCU_init                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitScrn                                             0     0      0    1141
                     _LCD_en_command
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _LCD_en_command                                       1     1      0     593
                                              6 COMMON     1     1      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (1) _ButtonDetect                                         0     0      0     593
                             _AD_SUB
                         _isBUTTONOn
 ---------------------------------------------------------------------------------
 (2) _isBUTTONOn                                           0     0      0     548
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2     548
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _AD_SUB                                               6     6      0      45
                                              1 COMMON     5     5      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BUTTONMCUInit                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AD_MCU_INIT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_MCU_INIT
   _AD_SUB
     _delay_us
   _BUTTONMCUInit
   _ButtonDetect
     _AD_SUB
       _delay_us
     _isBUTTONOn
       _delay_ms
   _InitScrn
     _LCD_en_command
       _delay_ms
       _delay_us
     _delay_ms
   _LCD_MCU_init
   _LCD_init
     _LCD_en_command
       _delay_ms
       _delay_us
   _LCD_write_string
     _LCD_Busy
       _LCD_Read_dat
     _LCD_en_dat
       _delay_us
     _LCD_set_xy
       _LCD_en_command
         _delay_ms
         _delay_us
   _LED_MCU_INIT
   _delay_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      19       5       31.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri May 15 09:18:19 2020

            ?_LED_MCU_INIT 0070                          pc 0002              _BUTTONMCUInit 04B4  
              __CFG_CP$OFF 0000                         l60 0756                         l53 04CE  
                       l61 0755                         l70 07D8                         l62 0750  
                       l63 0752                         l64 07D6                         l65 0773  
                       l66 07B0                         l58 06D3                         l67 07CF  
                       l59 0757                         l68 07D7                         l93 06B3  
                       l69 07D8                         l96 0596                         l99 052A  
  __size_of_LCD_en_command 0042                         fsr 0004                __CFG_LVP$ON 0000  
              ?_LCD_en_dat 0070                        l102 0541                        l110 0664  
                      l111 0649                        l112 0671                        l105 054E  
                      l113 0671                        l122 0507                        l106 0554  
                      l131 05B4                        l123 0515                        l107 055B  
                      l140 04DF                        l132 059A                        l220 0574  
                      l116 04F6                        l124 0517                        l141 04E8  
                      l133 05A5                        l221 0577                        l125 0516  
                      l142 04E8                        l134 05AE                        l126 0517  
                      l135 05BF                        l119 0506                        l216 04BB  
                      l136 05BF                        l224 05CA                        l225 05F6  
                      l226 05F6                        l139 04E2                        l219 0575  
                      l227 05F5                        l180 0633                        l228 05F4  
                      l183 04DB                        l177 0614                        l178 0614  
                      l179 0618                        u300 04E7                        u301 04E6  
                      u320 0618                        u400 0670                        u321 0617  
                      u401 066F                        u330 0548                        u410 06E0  
                      u315 05FF                        u331 0547                        u411 06DE  
                      u340 0513                        u500 0763                        u420 06E1  
                      u341 0512                        u501 0762                        u270 05A3  
                      u350 0562                        u510 0769                        u430 06E6  
                      u271 05A2                        u351 0561                        u511 0768  
                      u431 06E5                        u280 05AD                        u360 0571  
                      u520 0793                        u440 0700                        u281 05AC  
                      u361 0570                        u521 0792                        u441 06FF  
                      u290 05BE                        u370 05C7                        u450 0712  
             __CFG_CPD$OFF 0000                        u291 05BD                        u371 05C6  
                      u451 0711                        u443 06FC                        u380 05D4  
                      u460 0734                        u381 05D3                        u461 0733  
                      u453 070E                        u390 05EE                        u470 074E  
                      u295 05BA                        u391 05ED                        u471 074D  
                      u480 075D                        u393 05EA                        u481 075B  
                      u473 074A                        u465 0730                        u490 075E  
                      _U_A 0032                        fsr0 0004                        indf 0000  
              ?_LCD_set_xy 0077           LCD_Busy@busyFlag 0073               __CFG_IESO$ON 0000  
             __CFG_FOSC$HS 0000              ?_LCD_Read_dat 0070                       l1021 05A6  
                     l1013 0597                       l1101 0548                       l1023 05AE  
                     l1015 059A                       l1031 0673                       l1111 0514  
                     l1103 054E                       l1025 04DD                       l1017 059E  
                     l1121 0573                       l1113 055C                       l1041 068C  
                     l1033 0678                       l1105 0554                       l1201 0763  
                     l1027 04DF                       l1019 05A4                       l1115 0562  
                     l1123 0575                       l1051 06AA                       l1043 0692  
                     l1035 067A                       l1131 04EF                       l1107 0507  
                     l1211 078B                       l1203 0764                       l1141 04CF  
                     l1029 04E2                       l1125 0577                       l1117 056B  
                     l1053 06B0                       l1045 0698                       l1037 0680  
                     l1133 04F2                       l1061 0531                       l1109 050F  
                     l1221 07D2                       l1213 078E                       l1205 0769  
                     l1143 04B4                       l1119 0571                       l1151 05C9  
                     l1047 069E                       l1039 0686                       l1135 04F3  
                     l1071 053E                       l1063 0532                       l1055 052B  
                     l1127 04C4                       l1223 07D4                       l1215 0793  
                     l1207 0773                       l1145 04B7                       l1081 0609  
                     l1153 05CA                       l1049 06A1                       l1129 04E9  
                     l1137 0578                       l1073 053F                       l1065 0539  
                     l1057 052F                       l1161 0637                       l1217 07B0  
                     l1209 077F                       l1083 060A                       l1155 05D4  
                     l1147 05C0                       l1139 04F7                       l1075 0541  
                     l1067 053A                       l1059 0530                       l1091 051E  
                     l1163 0649                       l1219 07CF                       l1171 06B4  
                     l1085 0610                       l1077 05F8                       l1157 05DA  
                     l1149 05C8                       l1069 053B                       l1093 0520  
                     l1165 0653                       l1181 06E6                       l1173 06C8  
                     l1087 061B                       l1079 05FC                       l1159 05EE  
                     l1095 0521                       l1167 065F                       l1191 0720  
                     l1183 06EC                       l1175 06CD                       l1097 0527  
                     l1089 0519                       l1169 0664                       l1193 0734  
                     l1185 0700                       l1177 06D3                       l1099 0543  
                     l1195 073A                       l1187 0712                       l1179 06D8  
                     l1197 074E                       l1189 071A                       l1199 0757  
           ??_LCD_MCU_init 0070                       STR_1 001F                       STR_2 0012  
                     STR_3 001B                       STR_4 0009                       _U_BW 0030  
                     _U_GW 002E                       _U_QW 0031                       _U_SW 002F  
             __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000                       _main 06B4  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 0000  
            __CFG_MCLRE$ON 0000                 _DetectFlag 0028             ??_LED_MCU_INIT 0070  
           ?_BUTTONMCUInit 0070           __end_of_LCD_Busy 0518           __end_of_LCD_init 0597  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _ANSEL 0188  
                    _PORTD 0008       __size_of_AD_MCU_INIT 000D                      _TRISA 0085  
                    _TRISD 0088                      _TRISE 0089              ?_ButtonDetect 0070  
           ??_LCD_Read_dat 0070            LCD_Read_dat@dat 0071                      pclath 000A  
                    status 0003                      wtemp0 007E        __size_of_LCD_en_dat 0013  
      __size_of_LCD_set_xy 001A            __initialization 07DB               __end_of_main 07DB  
         __end_of_InitScrn 0507                LCD_set_xy@x 007A                LCD_set_xy@y 0077  
        ?_LCD_write_string 007B                     ??_main 0037             ??_ButtonDetect 0076  
       ??_LCD_write_string 007D                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                     _ANSELH 0189  
                   _AD_SUB 05F7                     _ADtemp 0020           __end_of_delay_ms 05C0  
         __end_of_delay_us 04E9             __CFG_PWRTE$OFF 0000            ??_BUTTONMCUInit 0070  
           _LCD_en_command 0672       __end_of_LCD_MCU_init 04F7       __end_of_LED_MCU_INIT 04CF  
  __end_of__initialization 07FC                  ?_LCD_Busy 0070                  ?_LCD_init 0070  
     __end_of_LCD_Read_dat 0542     __end_of_LCD_en_command 06B4             __pcstackCOMMON 0070  
             __pidataBANK0 04B0               ??_LCD_en_dat 0071               ??_LCD_set_xy 0078  
               _isBUTTONOn 055C                    AD_SUB@k 0075                    ?_AD_SUB 0070  
               __pbssBANK0 0020                  ?_InitScrn 0070                 ??_LCD_Busy 0072  
               ??_LCD_init 0077       __end_of_ButtonDetect 05F7         __end_of_LCD_en_dat 052B  
               __pmaintext 06B4            ?_LCD_en_command 0070         __end_of_LCD_set_xy 055C  
               _flag_ph_st 002C                  ?_delay_ms 0070                  ?_delay_us 0070  
               __stringtab 0003            __size_of_AD_SUB 003D                 ??_InitScrn 0077  
    __size_of_LCD_MCU_init 000E              ??_AD_MCU_INIT 0070                    __ptext1 04C4  
                  __ptext2 0634                    __ptext3 0542                    __ptext4 0518  
                  __ptext5 0507                    __ptext6 052B                    __ptext7 0578  
                  __ptext8 04E9                    __ptext9 04F7      __size_of_LED_MCU_INIT 000B  
               ??_delay_ms 0072                 ??_delay_us 0070                ?_isBUTTONOn 0070  
                  clrloop0 04BD       end_of_initialization 07FC  __size_of_LCD_write_string 003E  
             _LCD_MCU_init 04E9      __size_of_LCD_Read_dat 0017               _isPhPositive 002A  
            LCD_en_dat@dat 0071               _LED_MCU_INIT 04C4                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTEbits 0009                  _TRISBbits 0086  
                _TRISCbits 0087        __end_of_AD_MCU_INIT 04DC               _LCD_Read_dat 052B  
    __size_of_ButtonDetect 0037             __end_of_AD_SUB 0634          __size_of_LCD_Busy 0011  
        __size_of_LCD_init 001F      __end_of_BUTTONMCUInit 04BC        __size_of_isBUTTONOn 001C  
      start_initialization 07DB               _ButtonDetect 05C0                   ??_AD_SUB 0071  
         ??_LCD_en_command 0076          __size_of_InitScrn 0010                __pdataBANK0 0032  
              _AD_MCU_INIT 04CF                  ___latbits 0002              __pcstackBANK0 0036  
        __size_of_delay_ms 0029          __size_of_delay_us 000D          LCD_set_xy@address 0079  
         _LCD_write_string 0634                  __pstrings 0003                _flag_br_end 002B  
              _flag_ph_end 0029               ??_isBUTTONOn 0076                   _LCD_Busy 0507  
                delay_ms@j 0073                  delay_ms@k 0075                  delay_ms@n 0070  
                delay_us@n 0070                   _LCD_init 0578                  clear_ram0 04BC  
                 _ADresult 0024                   _PIR1bits 000C         __end_of_isBUTTONOn 0578  
               _ADCON0bits 001F                __stringbase 0008                   _InitScrn 04F7  
            _flag_but_once 002D         __end_of__stringtab 0009                   _delay_ms 0597  
                 _delay_us 04DC                   __ptext10 0672                   __ptext11 05C0  
                 __ptext12 055C                   __ptext13 0597                   __ptext14 05F7  
                 __ptext15 04DC                   __ptext16 04B4                   __ptext17 04CF  
        __CFG_BOR4V$BOR40V 0000              __size_of_main 0127      LCD_en_command@command 0076  
 __end_of_LCD_write_string 0672               ?_AD_MCU_INIT 0070                 _LCD_en_dat 0518  
               _LCD_set_xy 0542     __size_of_BUTTONMCUInit 0008          LCD_write_string@X 0036  
        LCD_write_string@Y 007B          LCD_write_string@s 007C                  stringcode 0003  
               _OPTION_REG 0081                   stringdir 0003                   stringtab 0003  
            ?_LCD_MCU_init 0070  
