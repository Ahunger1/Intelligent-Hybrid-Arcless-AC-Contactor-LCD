Version 4.0 HI-TECH Software Intermediate Code
"1546 E:\Program\XC8\pic\include\pic16f887.h
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1546:     struct {
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . TRISC0 TRISC1 TRISC2 TRISC3 TRISC4 TRISC5 TRISC6 TRISC7 ]
"1545
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1545: typedef union {
[u S56 `S57 1 ]
[n S56 . . ]
"1557
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1557: extern volatile TRISCbits_t TRISCbits __attribute__((address(0x087)));
[v _TRISCbits `VS56 ~T0 @X0 0 e@135 ]
"296
[; ;E:\Program\XC8\pic\include\pic16f887.h: 296:     struct {
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"295
[; ;E:\Program\XC8\pic\include\pic16f887.h: 295: typedef union {
[u S9 `S10 1 ]
[n S9 . . ]
"307
[; ;E:\Program\XC8\pic\include\pic16f887.h: 307: extern volatile PORTCbits_t PORTCbits __attribute__((address(0x007)));
[v _PORTCbits `VS9 ~T0 @X0 0 e@7 ]
[p mainexit ]
"46 ./LCD.h
[; ;./LCD.h: 46: void LCD_MCU_init(void);
[v _LCD_MCU_init `(v ~T0 @X0 0 ef ]
"41
[; ;./LCD.h: 41: void LCD_init(void);
[v _LCD_init `(v ~T0 @X0 0 ef ]
"47
[; ;./LCD.h: 47: void InitScrn(void);
[v _InitScrn `(v ~T0 @X0 0 ef ]
"15 ./AD.h
[; ;./AD.h: 15: void AD_MCU_INIT(void);
[v _AD_MCU_INIT `(v ~T0 @X0 0 ef ]
"11 ./BUTTON.h
[; ;./BUTTON.h: 11: void BUTTONMCUInit (void);
[v _BUTTONMCUInit `(v ~T0 @X0 0 ef ]
"13
[; ;./BUTTON.h: 13: void ButtonDetect(void);
[v _ButtonDetect `(v ~T0 @X0 0 ef ]
"14 ./AD.h
[; ;./AD.h: 14: void AD_SUB(char k);
[v _AD_SUB `(v ~T0 @X0 0 ef1`uc ]
"9 ./DELAY.h
[; ;./DELAY.h: 9: void delay_ms(unsigned int n);
[v _delay_ms `(v ~T0 @X0 0 ef1`ui ]
"45 ./LCD.h
[; ;./LCD.h: 45: void LCD_write_string(unsigned char X, unsigned char Y, unsigned char *s);
[v _LCD_write_string `(v ~T0 @X0 0 ef3`uc`uc`*uc ]
"31 E:\Program\XC8\pic\include\pic.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"4 main.c
[p x FOSC = HS ]
"5
[p x WDTE = OFF ]
"6
[p x PWRTE = OFF ]
"7
[p x MCLRE = ON ]
"8
[p x CP = OFF ]
"9
[p x CPD = OFF ]
"10
[p x BOREN = ON ]
"11
[p x IESO = ON ]
"12
[p x FCMEN = ON ]
"13
[p x LVP = ON ]
"16
[p x BOR4V = BOR40V ]
"17
[p x WRT = OFF ]
"54 E:\Program\XC8\pic\include\pic16f887.h
[; ;E:\Program\XC8\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;E:\Program\XC8\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;E:\Program\XC8\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;E:\Program\XC8\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;E:\Program\XC8\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;E:\Program\XC8\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;E:\Program\XC8\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;E:\Program\XC8\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;E:\Program\XC8\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;E:\Program\XC8\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;E:\Program\XC8\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;E:\Program\XC8\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;E:\Program\XC8\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;E:\Program\XC8\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;E:\Program\XC8\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;E:\Program\XC8\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;E:\Program\XC8\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;E:\Program\XC8\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;E:\Program\XC8\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;E:\Program\XC8\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;E:\Program\XC8\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;E:\Program\XC8\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;E:\Program\XC8\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;E:\Program\XC8\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;E:\Program\XC8\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;E:\Program\XC8\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;E:\Program\XC8\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;E:\Program\XC8\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;E:\Program\XC8\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"6 ./AD.h
[; ;./AD.h: 6: char U_QW,U_BW,U_SW,U_GW,U_A[4]={1,2,3,4};
[v _U_QW `uc ~T0 @X0 1 e ]
[v _U_BW `uc ~T0 @X0 1 e ]
[v _U_SW `uc ~T0 @X0 1 e ]
[v _U_GW `uc ~T0 @X0 1 e ]
[v _U_A `uc ~T0 @X0 -> 4 `i e ]
[i _U_A
:U ..
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
..
]
"7
[; ;./AD.h: 7: long unsigned int ADresult;
[v _ADresult `ul ~T0 @X0 1 e ]
"8
[; ;./AD.h: 8: long unsigned int ADtemp;
[v _ADtemp `ul ~T0 @X0 1 e ]
"8 ./BUTTON.h
[; ;./BUTTON.h: 8: char flag_but_once=0;
[v _flag_but_once `uc ~T0 @X0 1 e ]
[i _flag_but_once
-> -> 0 `i `uc
]
"9
[; ;./BUTTON.h: 9: char flag_ph_st;
[v _flag_ph_st `uc ~T0 @X0 1 e ]
"56 main.c
[; ;main.c: 56: char flag_br_end;
[v _flag_br_end `uc ~T0 @X0 1 e ]
"57
[; ;main.c: 57: char isPhPositive;
[v _isPhPositive `uc ~T0 @X0 1 e ]
"58
[; ;main.c: 58: char flag_ph_end;
[v _flag_ph_end `uc ~T0 @X0 1 e ]
"59
[; ;main.c: 59: char DetectFlag;
[v _DetectFlag `uc ~T0 @X0 1 e ]
"61
[; ;main.c: 61: void LED_MCU_INIT(void)
[v _LED_MCU_INIT `(v ~T0 @X0 1 ef ]
"62
[; ;main.c: 62: {
{
[e :U _LED_MCU_INIT ]
[f ]
"64
[; ;main.c: 64:     TRISCbits.TRISC0=0;
[e = . . _TRISCbits 0 0 -> -> 0 `i `uc ]
"65
[; ;main.c: 65:     TRISCbits.TRISC2=0;
[e = . . _TRISCbits 0 2 -> -> 0 `i `uc ]
"66
[; ;main.c: 66:     TRISCbits.TRISC1=0;
[e = . . _TRISCbits 0 1 -> -> 0 `i `uc ]
"67
[; ;main.c: 67:     PORTCbits.RC0=0;
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
"68
[; ;main.c: 68:     PORTCbits.RC2=0;
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"69
[; ;main.c: 69:     PORTCbits.RC1=0;
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
"70
[; ;main.c: 70: }
[e :UE 143 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"72
[; ;main.c: 72: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"73
[; ;main.c: 73: {
{
[e :U _main ]
[f ]
"75
[; ;main.c: 75:     LCD_MCU_init();
[e ( _LCD_MCU_init ..  ]
"76
[; ;main.c: 76:     LCD_init();
[e ( _LCD_init ..  ]
"77
[; ;main.c: 77:     InitScrn();
[e ( _InitScrn ..  ]
"79
[; ;main.c: 79:     AD_MCU_INIT();
[e ( _AD_MCU_INIT ..  ]
"81
[; ;main.c: 81:     LED_MCU_INIT();
[e ( _LED_MCU_INIT ..  ]
"83
[; ;main.c: 83:     BUTTONMCUInit();
[e ( _BUTTONMCUInit ..  ]
"84
[; ;main.c: 84:     while(1)
[e :U 146 ]
"85
[; ;main.c: 85:     {
{
"86
[; ;main.c: 86:         ButtonDetect();
[e ( _ButtonDetect ..  ]
"87
[; ;main.c: 87:         if(flag_ph_st&(!flag_ph_end))
[e $ ! != & -> _flag_ph_st `i -> ! != -> _flag_ph_end `i -> 0 `i `i -> 0 `i 148  ]
"88
[; ;main.c: 88:         {
{
"90
[; ;main.c: 90:             AD_SUB(1);
[e ( _AD_SUB (1 -> -> 1 `i `uc ]
"91
[; ;main.c: 91:             if(ADresult<= 414 && ADresult>403)
[e $ ! && <= _ADresult -> -> -> 414 `i `l `ul > _ADresult -> -> -> 403 `i `l `ul 149  ]
"92
[; ;main.c: 92:             {
{
"93
[; ;main.c: 93:                 ADtemp=ADresult;
[e = _ADtemp _ADresult ]
"94
[; ;main.c: 94:                 AD_SUB(1);
[e ( _AD_SUB (1 -> -> 1 `i `uc ]
"95
[; ;main.c: 95:                 if(ADresult>ADtemp)
[e $ ! > _ADresult _ADtemp 150  ]
"96
[; ;main.c: 96:                 {
{
"97
[; ;main.c: 97:                     AD_SUB(2);
[e ( _AD_SUB (1 -> -> 2 `i `uc ]
"98
[; ;main.c: 98:                     if(ADresult>409)
[e $ ! > _ADresult -> -> -> 409 `i `l `ul 151  ]
"99
[; ;main.c: 99:                         isPhPositive=0;
[e = _isPhPositive -> -> 0 `i `uc ]
[e $U 152  ]
"100
[; ;main.c: 100:                     else
[e :U 151 ]
"101
[; ;main.c: 101:                         isPhPositive=1;
[e = _isPhPositive -> -> 1 `i `uc ]
[e :U 152 ]
"102
[; ;main.c: 102:                     flag_ph_end=1;
[e = _flag_ph_end -> -> 1 `i `uc ]
"103
[; ;main.c: 103:                 }
}
[e :U 150 ]
"104
[; ;main.c: 104:             }
}
[e :U 149 ]
"105
[; ;main.c: 105:         }
}
[e :U 148 ]
"106
[; ;main.c: 106:         if(flag_ph_end&(!flag_br_end))
[e $ ! != & -> _flag_ph_end `i -> ! != -> _flag_br_end `i -> 0 `i `i -> 0 `i 153  ]
"107
[; ;main.c: 107:           {
{
"108
[; ;main.c: 108:             PORTCbits.RC0=1;
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
"109
[; ;main.c: 109:               if(!isPhPositive)
[e $ ! ! != -> _isPhPositive `i -> 0 `i 154  ]
"110
[; ;main.c: 110:               {
{
"111
[; ;main.c: 111:                   delay_ms(20);
[e ( _delay_ms (1 -> -> 20 `i `ui ]
"112
[; ;main.c: 112:               }
}
[e :U 154 ]
"113
[; ;main.c: 113:             PORTCbits.RC0=0;
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
"114
[; ;main.c: 114:               delay_ms(7);
[e ( _delay_ms (1 -> -> 7 `i `ui ]
"115
[; ;main.c: 115:               PORTCbits.RC2=1;
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
"116
[; ;main.c: 116:               delay_ms(20 -7);
[e ( _delay_ms (1 -> - -> 20 `i -> 7 `i `ui ]
"117
[; ;main.c: 117:               PORTCbits.RC2=0;
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
"118
[; ;main.c: 118:               if(isPhPositive)
[e $ ! != -> _isPhPositive `i -> 0 `i 155  ]
"119
[; ;main.c: 119:               {
{
"120
[; ;main.c: 120:                   LCD_write_string(1,1,"abc");
[e ( _LCD_write_string (3 , , -> -> 1 `i `uc -> -> 1 `i `uc :s 1C ]
"121
[; ;main.c: 121:                   LCD_write_string(1,2,"POSITIVE");
[e ( _LCD_write_string (3 , , -> -> 1 `i `uc -> -> 2 `i `uc :s 2C ]
"123
[; ;main.c: 123:               }
}
[e $U 156  ]
"124
[; ;main.c: 124:               else
[e :U 155 ]
"125
[; ;main.c: 125:               {
{
"126
[; ;main.c: 126:                   LCD_write_string(1,1,"acb");
[e ( _LCD_write_string (3 , , -> -> 1 `i `uc -> -> 1 `i `uc :s 3C ]
"127
[; ;main.c: 127:                   LCD_write_string(1,2,"NEGATIVE");
[e ( _LCD_write_string (3 , , -> -> 1 `i `uc -> -> 2 `i `uc :s 4C ]
"128
[; ;main.c: 128:               }
}
[e :U 156 ]
"129
[; ;main.c: 129:               PORTCbits.RC0=0;
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
"130
[; ;main.c: 130:               flag_br_end=1;
[e = _flag_br_end -> -> 1 `i `uc ]
"131
[; ;main.c: 131:               __nop();
[e ( ___nop ..  ]
"132
[; ;main.c: 132:         }
}
[e :U 153 ]
"133
[; ;main.c: 133:     }
}
[e :U 145 ]
[e $U 146  ]
[e :U 147 ]
"134
[; ;main.c: 134: }
[e :UE 144 ]
}
[a 1C 97 98 99 0 ]
[a 3C 97 99 98 0 ]
[a 2C 80 79 83 73 84 73 86 69 0 ]
[a 4C 78 69 71 65 84 73 86 69 0 ]
